{
	"toolboxes": [
		{
			"name": "fieldtrip",
			"nodes": [
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_analysispipeline",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.inputfile   =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_analysispipeline.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.filename   = string, filename without the extension",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.filename   = string, filename without the extension"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.filetype   = string, can be 'matlab', 'html' or 'dot'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.filetype   = string, can be 'matlab', 'html' or 'dot'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.feedback   = string, 'no', 'text', 'gui' or 'yes', whether text and\/or",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.feedback   = string, 'no', 'text', 'gui' or 'yes', whether text and\/or"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.showinfo   = string or cell-array of strings, information to display",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.showinfo   = string or cell-array of strings, information to display"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.remove     = cell-array with strings, determines which objects will",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.remove     = cell-array with strings, determines which objects will"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_annotate",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_annotate.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.comment    = string",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.comment    = string"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_anonymizedata",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  = ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_anonymizedata.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.keepnumeric = 'yes' or 'no', keep numeric fields (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.keepnumeric = 'yes' or 'no', keep numeric fields (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.keepfield   = cell-array with strings, fields to keep (default = {})",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.keepfield   = cell-array with strings, fields to keep (default = {})"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.removefield = cell-array with strings, fields to remove (default = {})",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.removefield = cell-array with strings, fields to remove (default = {})"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.keepvalue   = cell-array with strings, values to keep (default = {})",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.keepvalue   = cell-array with strings, values to keep (default = {})"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.removevalue = cell-array with strings, values to remove (default = {})",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.removevalue = cell-array with strings, values to remove (default = {})"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile  = ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile  = ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  = ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  = ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_appenddata",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_appenddata.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.keepsampleinfo  = 'yes', 'no', 'ifmakessense' (default = 'ifmakessense')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.keepsampleinfo  = 'yes', 'no', 'ifmakessense' (default = 'ifmakessense')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_appendfreq",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_appendfreq.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.parameter  = string, the name of the field to concatenate",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.parameter  = string, the name of the field to concatenate"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.appenddim  = string, the dimension to concatenate over (default is automatic)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.appenddim  = string, the dimension to concatenate over (default is automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.tolerance  = scalar, tolerance to determine how different the frequency and\/or",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.tolerance  = scalar, tolerance to determine how different the frequency and\/or"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_appendlayout",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.yscale    = number, scaling to apply to input layouts along the vertical direction (default = 1)"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_appendlayout.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.direction = string, 'horizontal' or 'vertical' (default = 'horizontal')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.direction = string, 'horizontal' or 'vertical' (default = 'horizontal')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.align     = string, 'center', 'left', 'right', 'top' or 'bottom' (default = 'center')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.align     = string, 'center', 'left', 'right', 'top' or 'bottom' (default = 'center')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.distance  = number, distance between layouts (default is automatic)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.distance  = number, distance between layouts (default is automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.xscale    = number, scaling to apply to input layouts along the horizontal direction (default = 1)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.xscale    = number, scaling to apply to input layouts along the horizontal direction (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.yscale    = number, scaling to apply to input layouts along the vertical direction (default = 1)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.yscale    = number, scaling to apply to input layouts along the vertical direction (default = 1)"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_appendsens",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.yscale    = number, scaling to apply to input layouts along the vertical direction (default = 1)"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_appendsens.m",
					"ports": null
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_appendsource",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.yscale    = number, scaling to apply to input layouts along the vertical direction (default = 1)"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_appendsource.m",
					"ports": null
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_appendspike",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.yscale    = number, scaling to apply to input layouts along the vertical direction (default = 1)"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_appendspike.m",
					"ports": null
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_appendtimelock",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.keepsampleinfo  = 'yes', 'no', 'ifmakessense' (default = 'ifmakessense')"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_appendtimelock.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.appenddim       = string, the dimension to concatenate over which to append,",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.appenddim       = string, the dimension to concatenate over which to append,"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.tolerance       = scalar, tolerance to determine how different the time axes",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.tolerance       = scalar, tolerance to determine how different the time axes"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.keepsampleinfo  = 'yes', 'no', 'ifmakessense' (default = 'ifmakessense')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.keepsampleinfo  = 'yes', 'no', 'ifmakessense' (default = 'ifmakessense')"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_artifact_clip",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.inputfile   =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_artifact_clip.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dataset     = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dataset     = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headerfile  = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headerfile  = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.datafile    = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.datafile    = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headerformat",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headerformat"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dataformat",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dataformat"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.clip.channel       = Nx1 cell-array with selection of channels, see FT_CHANNELSELECTION for details",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.clip.channel       = Nx1 cell-array with selection of channels, see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.clip.pretim        = 0.000;  pre-artifact rejection-interval in seconds",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.clip.pretim        = 0.000;  pre-artifact rejection-interval in seconds"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.clip.psttim        = 0.000;  post-artifact rejection-interval in seconds",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.clip.psttim        = 0.000;  post-artifact rejection-interval in seconds"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.clip.timethreshold = number, minimum duration in seconds of a datasegment with consecutive identical samples to be considered as 'clipped'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.clip.timethreshold = number, minimum duration in seconds of a datasegment with consecutive identical samples to be considered as 'clipped'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.clip.amplthreshold = number, minimum amplitude difference in consecutive samples to be considered as 'clipped' (default = 0)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.clip.amplthreshold = number, minimum amplitude difference in consecutive samples to be considered as 'clipped' (default = 0)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.continuous                   = 'yes' or 'no' whether the file contains continuous data",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.continuous                   = 'yes' or 'no' whether the file contains continuous data"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_artifact_ecg",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.inputfile   =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_artifact_ecg.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dataset     = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dataset     = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headerfile  = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headerfile  = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.datafile    = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.datafile    = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headerformat",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headerformat"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dataformat",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dataformat"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trl        = structure that defines the data segments of interest. See FT_DEFINETRIAL",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trl        = structure that defines the data segments of interest. See FT_DEFINETRIAL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.continuous = 'yes' or 'no' whether the file contains continuous data",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.continuous = 'yes' or 'no' whether the file contains continuous data"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.ecg.channel = Nx1 cell-array with selection of channels, see FT_CHANNELSELECTION for details",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.ecg.channel = Nx1 cell-array with selection of channels, see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.ecg.pretim  = 0.05; pre-artifact rejection-interval in seconds",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.ecg.pretim  = 0.05; pre-artifact rejection-interval in seconds"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.ecg.psttim  = 0.3;  post-artifact rejection-interval in seconds",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.ecg.psttim  = 0.3;  post-artifact rejection-interval in seconds"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.ecg.method  = 'zvalue'; peak-detection method",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.ecg.method  = 'zvalue'; peak-detection method"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.ecg.cutoff  = 3; peak-threshold",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.ecg.cutoff  = 3; peak-threshold"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.ecg.inspect = Nx1 list of channels which will be shown in a QRS-locked average",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.ecg.inspect = Nx1 list of channels which will be shown in a QRS-locked average"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_artifact_eog",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.inputfile   =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_artifact_eog.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dataset     = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dataset     = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headerfile  = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headerfile  = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.datafile    = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.datafile    = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headerformat",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headerformat"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dataformat",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dataformat"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trl        = structure that defines the data segments of interest. See FT_DEFINETRIAL",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trl        = structure that defines the data segments of interest. See FT_DEFINETRIAL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.continuous = 'yes' or 'no' whether the file contains continuous data",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.continuous = 'yes' or 'no' whether the file contains continuous data"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.eog.bpfilter   = 'yes'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.eog.bpfilter   = 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.eog.bpfilttype = 'but'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.eog.bpfilttype = 'but'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.eog.bpfreq     = [1 15]",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.eog.bpfreq     = [1 15]"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.eog.bpfiltord  = 4",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.eog.bpfiltord  = 4"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.eog.hilbert    = 'yes'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.eog.hilbert    = 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.eog.channel      = Nx1 cell-array with selection of channels, see FT_CHANNELSELECTION for details",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.eog.channel      = Nx1 cell-array with selection of channels, see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.eog.cutoff       = z-value at which to threshold (default = 4)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.eog.cutoff       = z-value at which to threshold (default = 4)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.eog.trlpadding   = 0.5",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.eog.trlpadding   = 0.5"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.eog.fltpadding   = 0.1",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.eog.fltpadding   = 0.1"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.eog.artpadding   = 0.1",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.eog.artpadding   = 0.1"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_artifact_jump",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.inputfile   =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_artifact_jump.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dataset     = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dataset     = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headerfile  = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headerfile  = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.datafile    = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.datafile    = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headerformat",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headerformat"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dataformat",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dataformat"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trl        = structure that defines the data segments of interest. See FT_DEFINETRIAL",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trl        = structure that defines the data segments of interest. See FT_DEFINETRIAL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.continuous = 'yes' or 'no' whether the file contains continuous data",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.continuous = 'yes' or 'no' whether the file contains continuous data"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.jump.medianfilter  = 'yes'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.jump.medianfilter  = 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.jump.medianfiltord = 9",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.jump.medianfiltord = 9"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.jump.absdiff       = 'yes'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.jump.absdiff       = 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.jump.channel       = Nx1 cell-array with selection of channels, see FT_CHANNELSELECTION for details",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.jump.channel       = Nx1 cell-array with selection of channels, see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.jump.cutoff        = z-value at which to threshold (default = 20)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.jump.cutoff        = z-value at which to threshold (default = 20)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.jump.trlpadding    = automatically determined based on the filter padding (cfg.padding)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.jump.trlpadding    = automatically determined based on the filter padding (cfg.padding)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.jump.artpadding    = automatically determined based on the filter padding (cfg.padding)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.jump.artpadding    = automatically determined based on the filter padding (cfg.padding)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_artifact_muscle",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.inputfile   =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_artifact_muscle.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dataset     = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dataset     = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headerfile  = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headerfile  = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.datafile    = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.datafile    = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headerformat",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headerformat"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dataformat",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dataformat"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trl        = structure that defines the data segments of interest. See FT_DEFINETRIAL",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trl        = structure that defines the data segments of interest. See FT_DEFINETRIAL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.continuous = 'yes' or 'no' whether the file contains continuous data",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.continuous = 'yes' or 'no' whether the file contains continuous data"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.muscle.bpfilter    = 'yes'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.muscle.bpfilter    = 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.muscle.bpfreq      = [110 140]",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.muscle.bpfreq      = [110 140]"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.muscle.bpfiltord   = 8",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.muscle.bpfiltord   = 8"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.muscle.bpfilttype  = 'but'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.muscle.bpfilttype  = 'but'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.muscle.hilbert     = 'yes'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.muscle.hilbert     = 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.muscle.boxcar      = 0.2",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.muscle.boxcar      = 0.2"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.muscle.channel     = Nx1 cell-array with selection of channels, see FT_CHANNELSELECTION for details",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.muscle.channel     = Nx1 cell-array with selection of channels, see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.muscle.cutoff      = z-value at which to threshold (default = 4)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.muscle.cutoff      = z-value at which to threshold (default = 4)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.muscle.trlpadding  = 0.1",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.muscle.trlpadding  = 0.1"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.muscle.fltpadding  = 0.1",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.muscle.fltpadding  = 0.1"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.muscle.artpadding  = 0.1",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.muscle.artpadding  = 0.1"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_artifact_nan",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.inputfile   =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_artifact_nan.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.nan.channel = Nx1 cell-array with selection of channels, see FT_CHANNELSELECTION for details",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.nan.channel = Nx1 cell-array with selection of channels, see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_artifact_threshold",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.inputfile   =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_artifact_threshold.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dataset     = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dataset     = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headerfile  = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headerfile  = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.datafile    = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.datafile    = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headerformat",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headerformat"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dataformat",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dataformat"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trl        = structure that defines the data segments of interest, see FT_DEFINETRIAL",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trl        = structure that defines the data segments of interest, see FT_DEFINETRIAL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.continuous = 'yes' or 'no' whether the file contains continuous data",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.continuous = 'yes' or 'no' whether the file contains continuous data"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.threshold.channel   = cell-array with channel labels",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.threshold.channel   = cell-array with channel labels"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.threshold.bpfilter  = 'no' or 'yes' (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.threshold.bpfilter  = 'no' or 'yes' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.threshold.bpfreq    = [0.3 30]",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.threshold.bpfreq    = [0.3 30]"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.threshold.bpfiltord = 4",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.threshold.bpfiltord = 4"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.threshold.range     = value in uV or T, default  inf",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.threshold.range     = value in uV or T, default  inf"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.threshold.min       = value in uV or T, default -inf",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.threshold.min       = value in uV or T, default -inf"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.threshold.max       = value in uV or T, default  inf",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.threshold.max       = value in uV or T, default  inf"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.threshold.onset     = value in uV or T, default  inf",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.threshold.onset     = value in uV or T, default  inf"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.threshold.offset    = value in uV or T, default  inf",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.threshold.offset    = value in uV or T, default  inf"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_artifact_tms",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.inputfile   =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_artifact_tms.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dataset     = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dataset     = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headerfile  = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headerfile  = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.datafile    = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.datafile    = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headerformat",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headerformat"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dataformat",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dataformat"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trl         = structure that defines the data segments of interest, see FT_DEFINETRIAL",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trl         = structure that defines the data segments of interest, see FT_DEFINETRIAL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.continuous  = 'yes' or 'no' whether the file contains continuous data (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.continuous  = 'yes' or 'no' whether the file contains continuous data (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method      = 'detect' or 'marker', see below.",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method      = 'detect' or 'marker', see below."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.prestim     = scalar, time in seconds prior to onset of detected event to mark as artifactual (default = 0.005 seconds)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.prestim     = scalar, time in seconds prior to onset of detected event to mark as artifactual (default = 0.005 seconds)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.poststim    = scalar, time in seconds post onset of detected even to mark as artifactual (default = 0.010 seconds)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.poststim    = scalar, time in seconds post onset of detected even to mark as artifactual (default = 0.010 seconds)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.tms.derivative  = 'yes'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.tms.derivative  = 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.tms.channel     = Nx1 cell-array with selection of channels, see FT_CHANNELSELECTION for details",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.tms.channel     = Nx1 cell-array with selection of channels, see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.tms.cutoff      = z-value at which to threshold (default = 4)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.tms.cutoff      = z-value at which to threshold (default = 4)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.tms.trlpadding  = 0.1",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.tms.trlpadding  = 0.1"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.tms.fltpadding  = 0.1",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.tms.fltpadding  = 0.1"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.tms.artpadding  = 0.01",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.tms.artpadding  = 0.01"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trialfun            = function name, see below (default = 'ft_trialfun_general')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trialfun            = function name, see below (default = 'ft_trialfun_general')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trialdef.eventtype  = 'string'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trialdef.eventtype  = 'string'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trialdef.eventvalue = number, string or list with numbers or strings",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trialdef.eventvalue = number, string or list with numbers or strings"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_artifact_zvalue",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.artfctdef.zvalue.rectify       = 'no' or 'yes'"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_artifact_zvalue.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dataset     = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dataset     = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headerfile  = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headerfile  = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.datafile    = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.datafile    = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headerformat",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headerformat"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dataformat",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dataformat"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trl         = structure that defines the data segments of interest. See FT_DEFINETRIAL",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trl         = structure that defines the data segments of interest. See FT_DEFINETRIAL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.continuous  = 'yes' or 'no' whether the file contains continuous data (default   = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.continuous  = 'yes' or 'no' whether the file contains continuous data (default   = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.zvalue.channel",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.zvalue.channel"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.zvalue.cutoff",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.zvalue.cutoff"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.zvalue.trlpadding",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.zvalue.trlpadding"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.zvalue.fltpadding",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.zvalue.fltpadding"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.zvalue.artpadding",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.zvalue.artpadding"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.memory = 'low' or 'high', whether to be memory or computationally efficient, respectively (default = 'high')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.memory = 'low' or 'high', whether to be memory or computationally efficient, respectively (default = 'high')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.zvalue.artfctpeak  = 'yes' or 'no'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.zvalue.artfctpeak  = 'yes' or 'no'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.zvalue.interactive = 'yes' or 'no'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.zvalue.interactive = 'yes' or 'no'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.zvalue.lpfilter      = 'no' or 'yes'  lowpass filter",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.zvalue.lpfilter      = 'no' or 'yes'  lowpass filter"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.zvalue.hpfilter      = 'no' or 'yes'  highpass filter",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.zvalue.hpfilter      = 'no' or 'yes'  highpass filter"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.zvalue.bpfilter      = 'no' or 'yes'  bandpass filter",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.zvalue.bpfilter      = 'no' or 'yes'  bandpass filter"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.zvalue.bsfilter      = 'no' or 'yes'  bandstop filter for line noise removal",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.zvalue.bsfilter      = 'no' or 'yes'  bandstop filter for line noise removal"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.zvalue.dftfilter     = 'no' or 'yes'  line noise removal using discrete fourier transform",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.zvalue.dftfilter     = 'no' or 'yes'  line noise removal using discrete fourier transform"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.zvalue.medianfilter  = 'no' or 'yes'  jump preserving median filter",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.zvalue.medianfilter  = 'no' or 'yes'  jump preserving median filter"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.zvalue.lpfreq        = lowpass  frequency in Hz",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.zvalue.lpfreq        = lowpass  frequency in Hz"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.zvalue.hpfreq        = highpass frequency in Hz",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.zvalue.hpfreq        = highpass frequency in Hz"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.zvalue.bpfreq        = bandpass frequency range, specified as [low high] in Hz",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.zvalue.bpfreq        = bandpass frequency range, specified as [low high] in Hz"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.zvalue.bsfreq        = bandstop frequency range, specified as [low high] in Hz",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.zvalue.bsfreq        = bandstop frequency range, specified as [low high] in Hz"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.zvalue.lpfiltord     = lowpass  filter order",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.zvalue.lpfiltord     = lowpass  filter order"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.zvalue.hpfiltord     = highpass filter order",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.zvalue.hpfiltord     = highpass filter order"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.zvalue.bpfiltord     = bandpass filter order",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.zvalue.bpfiltord     = bandpass filter order"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.zvalue.bsfiltord     = bandstop filter order",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.zvalue.bsfiltord     = bandstop filter order"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.zvalue.medianfiltord = length of median filter",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.zvalue.medianfiltord = length of median filter"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.zvalue.lpfilttype    = digital filter type, 'but' (default) or 'firws' or 'fir' or 'firls'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.zvalue.lpfilttype    = digital filter type, 'but' (default) or 'firws' or 'fir' or 'firls'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.zvalue.hpfilttype    = digital filter type, 'but' (default) or 'firws' or 'fir' or 'firls'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.zvalue.hpfilttype    = digital filter type, 'but' (default) or 'firws' or 'fir' or 'firls'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.zvalue.bpfilttype    = digital filter type, 'but' (default) or 'firws' or 'fir' or 'firls'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.zvalue.bpfilttype    = digital filter type, 'but' (default) or 'firws' or 'fir' or 'firls'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.zvalue.bsfilttype    = digital filter type, 'but' (default) or 'firws' or 'fir' or 'firls'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.zvalue.bsfilttype    = digital filter type, 'but' (default) or 'firws' or 'fir' or 'firls'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.zvalue.detrend       = 'no' or 'yes'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.zvalue.detrend       = 'no' or 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.zvalue.demean        = 'no' or 'yes'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.zvalue.demean        = 'no' or 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.zvalue.baselinewindow = [begin end] in seconds, the default is the complete trial",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.zvalue.baselinewindow = [begin end] in seconds, the default is the complete trial"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.zvalue.hilbert       = 'no' or 'yes'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.zvalue.hilbert       = 'no' or 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.zvalue.rectify       = 'no' or 'yes'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.zvalue.rectify       = 'no' or 'yes'"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_audiovideobrowser",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.interactive = 'yes' or 'no' (default = 'yes')"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_audiovideobrowser.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.datahdr     = header structure of the EEG\/MEG data, see FT_READ_HEADER",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.datahdr     = header structure of the EEG\/MEG data, see FT_READ_HEADER"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.audiohdr    = header structure of the audio data, see FT_READ_HEADER",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.audiohdr    = header structure of the audio data, see FT_READ_HEADER"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.videohdr    = header structure of the video data, see FT_READ_HEADER",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.videohdr    = header structure of the video data, see FT_READ_HEADER"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.audiofile   = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.audiofile   = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.videofile   = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.videofile   = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trl         = Nx3 matrix, see FT_DEFINETRIAL",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trl         = Nx3 matrix, see FT_DEFINETRIAL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.anonimize   = [x1 x2 y1 y2], range in pixels for placing a bar over the eyes (default = [])",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.anonimize   = [x1 x2 y1 y2], range in pixels for placing a bar over the eyes (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.interactive = 'yes' or 'no' (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.interactive = 'yes' or 'no' (default = 'yes')"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_channelnormalise",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_channelnormalise.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel = 'all', or a selection of channels",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel = 'all', or a selection of channels"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trials  = 'all' or a selection given as a 1xN vector (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trials  = 'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.demean  = 'yes' or 'no' (or boolean value) (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.demean  = 'yes' or 'no' (or boolean value) (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.scale   = scalar value used for scaling (default = 1)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.scale   = scalar value used for scaling (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method  = 'perchannel', or 'acrosschannel', computes the",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method  = 'perchannel', or 'acrosschannel', computes the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_channelrepair",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_channelrepair.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method         = 'weighted', 'average', 'spline', 'slap' or 'nan' (default = 'weighted')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method         = 'weighted', 'average', 'spline', 'slap' or 'nan' (default = 'weighted')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.badchannel     = cell-array, see FT_CHANNELSELECTION for details",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.badchannel     = cell-array, see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.missingchannel = cell-array, see FT_CHANNELSELECTION for details",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.missingchannel = cell-array, see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.neighbours     = neighbourhood structure, see also FT_PREPARE_NEIGHBOURS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.neighbours     = neighbourhood structure, see also FT_PREPARE_NEIGHBOURS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trials         = 'all' or a selection given as a 1xN vector (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trials         = 'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.lambda         = regularisation parameter (default = 1e-5, not for method 'distance')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.lambda         = regularisation parameter (default = 1e-5, not for method 'distance')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.order          = order of the polynomial interpolation (default = 4, not for method 'distance')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.order          = order of the polynomial interpolation (default = 4, not for method 'distance')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.elec          = structure with electrode positions or filename, see FT_READ_SENS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.elec          = structure with electrode positions or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.grad          = structure with gradiometer definition or filename, see FT_READ_SENS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.grad          = structure with gradiometer definition or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.opto          = structure with optode definition, see FT_READ_SENS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.opto          = structure with optode definition, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_clusterplot",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.inputfile   =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_clusterplot.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.alpha                     = number, highest cluster p-value to be plotted max 0.3 (default = 0.05)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.alpha                     = number, highest cluster p-value to be plotted max 0.3 (default = 0.05)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.highlightseries           = 1x5 cell-array, highlight option series  with 'on', 'labels' or 'numbers' (default {'on', 'on', 'on', 'on', 'on'} for p < [0.01 0.05 0.1 0.2 0.3]",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.highlightseries           = 1x5 cell-array, highlight option series  with 'on', 'labels' or 'numbers' (default {'on', 'on', 'on', 'on', 'on'} for p < [0.01 0.05 0.1 0.2 0.3]"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.highlightsymbolseries     = 1x5 vector, highlight marker symbol series (default ['*', 'x', '+', 'o', '.'] for p < [0.01 0.05 0.1 0.2 0.3]",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.highlightsymbolseries     = 1x5 vector, highlight marker symbol series (default ['*', 'x', '+', 'o', '.'] for p < [0.01 0.05 0.1 0.2 0.3]"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.highlightsizeseries       = 1x5 vector, highlight marker size series   (default [6 6 6 6 6] for p < [0.01 0.05 0.1 0.2 0.3])",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.highlightsizeseries       = 1x5 vector, highlight marker size series   (default [6 6 6 6 6] for p < [0.01 0.05 0.1 0.2 0.3])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.highlightcolorpos         = color of highlight marker for positive clusters (default = [0 0 0])",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.highlightcolorpos         = color of highlight marker for positive clusters (default = [0 0 0])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.highlightcolorneg         = color of highlight marker for negative clusters (default = [0 0 0])",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.highlightcolorneg         = color of highlight marker for negative clusters (default = [0 0 0])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.subplotsize               = layout of subplots ([h w], default [3 5])",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.subplotsize               = layout of subplots ([h w], default [3 5])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.saveaspng                 = string, filename of the output figures (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.saveaspng                 = string, filename of the output figures (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.visible                   = string, 'on' or 'off' whether figure will be visible (default = 'on')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.visible                   = string, 'on' or 'off' whether figure will be visible (default = 'on')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_combineplanar",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_combineplanar.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method         = 'sum', 'svd', 'abssvd', or 'complex' (default = 'sum')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method         = 'sum', 'svd', 'abssvd', or 'complex' (default = 'sum')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.updatesens     = 'no' or 'yes' (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.updatesens     = 'no' or 'yes' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.demean         = 'yes' or 'no' (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.demean         = 'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.baselinewindow = [begin end]",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.baselinewindow = [begin end]"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_componentanalysis",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.cellmode = string, 'no' or 'yes', allows to run in cell-mode, i.e."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_componentanalysis.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method       = 'runica', 'fastica', 'binica', 'pca', 'svd', 'jader', 'varimax', 'dss', 'cca', 'sobi', 'white' or 'csp' (default = 'runica')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method       = 'runica', 'fastica', 'binica', 'pca', 'svd', 'jader', 'varimax', 'dss', 'cca', 'sobi', 'white' or 'csp' (default = 'runica')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel      = cell-array with channel selection (default = 'all'), see FT_CHANNELSELECTION for details",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel      = cell-array with channel selection (default = 'all'), see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trials       = 'all' or a selection given as a 1xN vector (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trials       = 'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.numcomponent = 'all' or number (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.numcomponent = 'all' or number (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.demean       = 'no' or 'yes', whether to demean the input data (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.demean       = 'no' or 'yes', whether to demean the input data (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.updatesens   = 'no' or 'yes' (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.updatesens   = 'no' or 'yes' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.feedback     = 'no', 'text', 'textbar', 'gui' (default = 'text')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.feedback     = 'no', 'text', 'textbar', 'gui' (default = 'text')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.runica.extended",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.runica.extended"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.runica.pca",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.runica.pca"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.runica.sphering",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.runica.sphering"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.runica.weights",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.runica.weights"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.runica.lrate",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.runica.lrate"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.runica.block",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.runica.block"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.runica.anneal",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.runica.anneal"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.runica.annealdeg",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.runica.annealdeg"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.runica.stop",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.runica.stop"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.runica.maxsteps",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.runica.maxsteps"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.runica.bias",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.runica.bias"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.runica.momentum",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.runica.momentum"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.runica.specgram",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.runica.specgram"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.runica.posact",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.runica.posact"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.runica.verbose",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.runica.verbose"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.runica.logfile",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.runica.logfile"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.runica.interput",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.runica.interput"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fastica.approach",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fastica.approach"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fastica.numOfIC",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fastica.numOfIC"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fastica.g",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fastica.g"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fastica.finetune",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fastica.finetune"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fastica.a1",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fastica.a1"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fastica.a2",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fastica.a2"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fastica.mu",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fastica.mu"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fastica.stabilization",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fastica.stabilization"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fastica.epsilon",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fastica.epsilon"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fastica.maxNumIterations",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fastica.maxNumIterations"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fastica.maxFinetune",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fastica.maxFinetune"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fastica.sampleSize",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fastica.sampleSize"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fastica.initGuess",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fastica.initGuess"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fastica.verbose",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fastica.verbose"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fastica.displayMode",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fastica.displayMode"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fastica.displayInterval",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fastica.displayInterval"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fastica.firstEig",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fastica.firstEig"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fastica.lastEig",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fastica.lastEig"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fastica.interactivePCA",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fastica.interactivePCA"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fastica.pcaE",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fastica.pcaE"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fastica.pcaD",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fastica.pcaD"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fastica.whiteSig",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fastica.whiteSig"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fastica.whiteMat",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fastica.whiteMat"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fastica.dewhiteMat",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fastica.dewhiteMat"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fastica.only",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fastica.only"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.binica.extended",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.binica.extended"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.binica.pca",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.binica.pca"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.binica.sphering",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.binica.sphering"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.binica.lrate",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.binica.lrate"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.binica.blocksize",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.binica.blocksize"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.binica.maxsteps",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.binica.maxsteps"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.binica.stop",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.binica.stop"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.binica.weightsin",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.binica.weightsin"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.binica.verbose",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.binica.verbose"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.binica.filenum",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.binica.filenum"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.binica.posact",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.binica.posact"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.binica.annealstep",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.binica.annealstep"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.binica.annealdeg",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.binica.annealdeg"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.binica.bias",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.binica.bias"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.binica.momentum",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.binica.momentum"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dss.denf.function",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dss.denf.function"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dss.denf.params",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dss.denf.params"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.sobi.n_sources",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.sobi.n_sources"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.sobi.p_correlations",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.sobi.p_correlations"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.csp.classlabels = vector that assigns a trial to class 1 or 2.",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.csp.classlabels = vector that assigns a trial to class 1 or 2."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.csp.numfilters  = the number of spatial filters to use (default: 6).",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.csp.numfilters  = the number of spatial filters to use (default: 6)."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.icasso.mode",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.icasso.mode"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.icasso.Niter",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.icasso.Niter"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.unmixing     = NxN unmixing matrix",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.unmixing     = NxN unmixing matrix"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.topolabel    = Nx1 cell-array with the channel labels",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.topolabel    = Nx1 cell-array with the channel labels"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.randomseed   = integer seed value of user's choice",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.randomseed   = integer seed value of user's choice"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.randomseed   = comp.cfg.callinfo.randomseed (from previous call)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.randomseed   = comp.cfg.callinfo.randomseed (from previous call)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.cellmode = string, 'no' or 'yes', allows to run in cell-mode, i.e.",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.cellmode = string, 'no' or 'yes', allows to run in cell-mode, i.e."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_conjunctionanalysis",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.cellmode = string, 'no' or 'yes', allows to run in cell-mode, i.e."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_conjunctionanalysis.m",
					"ports": null
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_connectivityanalysis",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.granger.conditional ="
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_connectivityanalysis.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method  =  string, can be",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method  =  string, can be"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel    = Nx1 cell-array containing a list of channels which are",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel    = Nx1 cell-array containing a list of channels which are"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channelcmb = Nx2 cell-array containing the channel combinations on",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channelcmb = Nx2 cell-array containing the channel combinations on"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trials     = Nx1 vector specifying which trials to include for the",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trials     = Nx1 vector specifying which trials to include for the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.feedback   = string, specifying the feedback presented to the user. Default",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.feedback   = string, specifying the feedback presented to the user. Default"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.partchannel = cell-array containing a list of channels that need to be",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.partchannel = cell-array containing a list of channels that need to be"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.complex     = string, 'abs' (default), 'angle', 'complex', 'imag', 'real',",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.complex     = string, 'abs' (default), 'angle', 'complex', 'imag', 'real',"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.removemean  = string, 'yes' (default), or 'no', support for",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.removemean  = string, 'yes' (default), or 'no', support for"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.bandwidth   = scalar, needed for 'psi', half-bandwidth of the integration",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.bandwidth   = scalar, needed for 'psi', half-bandwidth of the integration"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.refindx             =",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.refindx             ="
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.jackknife           =",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.jackknife           ="
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method              = 'mi';",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method              = 'mi';"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.granger.block       =",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.granger.block       ="
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.granger.conditional =",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.granger.conditional ="
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_connectivityplot",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.channel     = list of channels to be included for the plotting (default = 'all'), see FT_CHANNELSELECTION for details"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_connectivityplot.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.parameter   = string, the functional parameter to be plotted (default = 'cohspctrm')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.parameter   = string, the functional parameter to be plotted (default = 'cohspctrm')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.xlim        = selection boundaries over first dimension in data (e.g., freq)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.xlim        = selection boundaries over first dimension in data (e.g., freq)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.ylim        = selection boundaries over second dimension in data",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.ylim        = selection boundaries over second dimension in data"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.zlim        = plotting limits for color dimension, 'maxmin', 'maxabs' or [zmin zmax] (default = 'maxmin')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.zlim        = plotting limits for color dimension, 'maxmin', 'maxabs' or [zmin zmax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel     = list of channels to be included for the plotting (default = 'all'), see FT_CHANNELSELECTION for details",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel     = list of channels to be included for the plotting (default = 'all'), see FT_CHANNELSELECTION for details"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_connectivitysimulation",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.bpfreq   = nxnx2 matrix, specifying the lower and upper frequencies"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_connectivitysimulation.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method      = string, can be 'linear_mix', 'mvnrnd', 'ar', 'ar_reverse' (see below)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method      = string, can be 'linear_mix', 'mvnrnd', 'ar', 'ar_reverse' (see below)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.nsignal     = scalar, number of signals",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.nsignal     = scalar, number of signals"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.ntrials     = scalar, number of trials",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.ntrials     = scalar, number of trials"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.triallength = in seconds",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.triallength = in seconds"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fsample     = in Hz",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fsample     = in Hz"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.mix    = matrix, [nsignal x number of unobserved signals]",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.mix    = matrix, [nsignal x number of unobserved signals]"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.delay  = matrix, [nsignal x number of unobserved signals]",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.delay  = matrix, [nsignal x number of unobserved signals]"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.bpfilter  = 'yes' (or 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.bpfilter  = 'yes' (or 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.bpfreq    = [bplow bphigh] (default: [15 25])",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.bpfreq    = [bplow bphigh] (default: [15 25])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.demean    = 'yes' (or 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.demean    = 'yes' (or 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.baselinewindow = [begin end] in seconds, the default is the complete trial",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.baselinewindow = [begin end] in seconds, the default is the complete trial"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.absnoise  = scalar (default: 1), specifying the standard deviation of",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.absnoise  = scalar (default: 1), specifying the standard deviation of"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.randomseed = 'yes' or a number or vector with the seed value (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.randomseed = 'yes' or a number or vector with the seed value (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.covmat    = covariance matrix between the signals",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.covmat    = covariance matrix between the signals"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.delay     = delay vector between the signals in samples",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.delay     = delay vector between the signals in samples"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.bpfilter  = 'yes' (or 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.bpfilter  = 'yes' (or 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.bpfreq    = [bplow bphigh] (default: [15 25])",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.bpfreq    = [bplow bphigh] (default: [15 25])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.demean    = 'yes' (or 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.demean    = 'yes' (or 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.baselinewindow = [begin end] in seconds, the default is the complete trial",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.baselinewindow = [begin end] in seconds, the default is the complete trial"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.absnoise  = scalar (default: 1), specifying the standard",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.absnoise  = scalar (default: 1), specifying the standard"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.params   = matrix, [nsignal x nsignal x number of lags] specifying the",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.params   = matrix, [nsignal x nsignal x number of lags] specifying the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.noisecov = matrix, [nsignal x nsignal] specifying the covariance",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.noisecov = matrix, [nsignal x nsignal] specifying the covariance"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.coupling = nxn matrix, specifying coupling strength, rows causing",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.coupling = nxn matrix, specifying coupling strength, rows causing"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.delay    = nxn matrix, specifying the delay, in seconds, from one",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.delay    = nxn matrix, specifying the delay, in seconds, from one"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.ampl     = nxn matrix, specifying the amplitude",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.ampl     = nxn matrix, specifying the amplitude"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.bpfreq   = nxnx2 matrix, specifying the lower and upper frequencies",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.bpfreq   = nxnx2 matrix, specifying the lower and upper frequencies"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_crossfrequencyanalysis",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.keeptrials = string, can be 'yes' or 'no'"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_crossfrequencyanalysis.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.freqlow    = scalar or vector, selection of frequencies for the low frequency data",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.freqlow    = scalar or vector, selection of frequencies for the low frequency data"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.freqhigh   = scalar or vector, selection of frequencies for the high frequency data",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.freqhigh   = scalar or vector, selection of frequencies for the high frequency data"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel    = cell-array with selection of channels, see FT_CHANNELSELECTION",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel    = cell-array with selection of channels, see FT_CHANNELSELECTION"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method     = string, can be",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method     = string, can be"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.keeptrials = string, can be 'yes' or 'no'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.keeptrials = string, can be 'yes' or 'no'"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_databrowser",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.linewidth               = number, width of plotted lines (default = 0.5)"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_databrowser.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dataset                 = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dataset                 = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.datafile                = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.datafile                = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headerfile              = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headerfile              = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.ylim                    = vertical scaling, can be 'maxmin', 'maxabs' or [ymin ymax] (default = 'maxabs')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.ylim                    = vertical scaling, can be 'maxmin', 'maxabs' or [ymin ymax] (default = 'maxabs')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.zlim                    = color scaling to apply to component topographies, 'minmax', 'maxabs' (default = 'maxmin')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.zlim                    = color scaling to apply to component topographies, 'minmax', 'maxabs' (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.blocksize               = duration in seconds for cutting the data up",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.blocksize               = duration in seconds for cutting the data up"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trl                     = structure that defines the data segments of interest, only applicable for trial-based data",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trl                     = structure that defines the data segments of interest, only applicable for trial-based data"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.continuous              = 'yes' or 'no', whether the data should be interpreted as continuous or trial-based",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.continuous              = 'yes' or 'no', whether the data should be interpreted as continuous or trial-based"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.allowoverlap            = 'yes' or 'no', whether data that is overlapping in multiple trials is allowed (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.allowoverlap            = 'yes' or 'no', whether data that is overlapping in multiple trials is allowed (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel                 = cell-array with channel labels, see FT_CHANNELSELECTION",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel                 = cell-array with channel labels, see FT_CHANNELSELECTION"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channelclamped          = cell-array with channel labels, that (when using the 'vertical' viewmode) will always be shown at the bottom. This is useful for showing ECG\/EOG channels along with the other channels",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channelclamped          = cell-array with channel labels, that (when using the 'vertical' viewmode) will always be shown at the bottom. This is useful for showing ECG\/EOG channels along with the other channels"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.plotlabels              = 'yes', 'no' or 'some', whether to plot channel labels in vertical viewmode. The option 'some' plots one label for every ten channels, which is useful if there are many channels. (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.plotlabels              = 'yes', 'no' or 'some', whether to plot channel labels in vertical viewmode. The option 'some' plots one label for every ten channels, which is useful if there are many channels. (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.ploteventlabels         = 'type=value', 'colorvalue' (default = 'type=value');",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.ploteventlabels         = 'type=value', 'colorvalue' (default = 'type=value');"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.plotevents              = 'no' or 'yes', whether to plot event markers. (default is 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.plotevents              = 'no' or 'yes', whether to plot event markers. (default is 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.viewmode                = string, 'butterfly', 'vertical', 'component' for visualizing ICA\/PCA components (default is 'butterfly')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.viewmode                = string, 'butterfly', 'vertical', 'component' for visualizing ICA\/PCA components (default is 'butterfly')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.xxx.artifact  = Nx2 matrix with artifact segments see FT_ARTIFACT_xxx functions",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.xxx.artifact  = Nx2 matrix with artifact segments see FT_ARTIFACT_xxx functions"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.selectfeature           = string, name of feature to be selected\/added (default = 'visual')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.selectfeature           = string, name of feature to be selected\/added (default = 'visual')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.selectmode              = 'markartifact', 'markpeakevent', 'marktroughevent' (default = 'markartifact')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.selectmode              = 'markartifact', 'markpeakevent', 'marktroughevent' (default = 'markartifact')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.colorgroups             = 'sequential' 'allblack' 'labelcharx' (x = xth character in label), 'chantype' or vector with length(data\/hdr.label) defining groups (default = 'sequential')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.colorgroups             = 'sequential' 'allblack' 'labelcharx' (x = xth character in label), 'chantype' or vector with length(data\/hdr.label) defining groups (default = 'sequential')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channelcolormap         = COLORMAP (default = customized lines map with 15 colors)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channelcolormap         = COLORMAP (default = customized lines map with 15 colors)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.verticalpadding         = number or 'auto', padding to be added to top and bottom of plot to avoid channels largely dissappearing when viewmode = 'vertical'\/'component'  (default = 'auto'). The padding is expressed as a proportion of the total height added to the top and bottom. The setting 'auto' determines the padding depending on the number of channels that are being plotted.",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.verticalpadding         = number or 'auto', padding to be added to top and bottom of plot to avoid channels largely dissappearing when viewmode = 'vertical'\/'component'  (default = 'auto'). The padding is expressed as a proportion of the total height added to the top and bottom. The setting 'auto' determines the padding depending on the number of channels that are being plotted."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.selfun                  = string, name of function that is evaluated using the right-click context menu. The selected data and cfg.selcfg are passed on to this function.",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.selfun                  = string, name of function that is evaluated using the right-click context menu. The selected data and cfg.selcfg are passed on to this function."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.selcfg                  = configuration options for function in cfg.selfun",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.selcfg                  = configuration options for function in cfg.selfun"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.seldat                  = 'selected' or 'all', specifies whether only the currently selected or all channels will be passed to the selfun (default = 'selected')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.seldat                  = 'selected' or 'all', specifies whether only the currently selected or all channels will be passed to the selfun (default = 'selected')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.renderer                = string, 'opengl', 'zbuffer', 'painters', see MATLAB Figure Properties. If this function crashes, you should try 'painters'.",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.renderer                = string, 'opengl', 'zbuffer', 'painters', see MATLAB Figure Properties. If this function crashes, you should try 'painters'."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.position                = location and size of the figure, specified as a vector of the form [left bottom width height].",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.position                = location and size of the figure, specified as a vector of the form [left bottom width height]."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.eegscale                = number, scaling to apply to the EEG channels prior to display",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.eegscale                = number, scaling to apply to the EEG channels prior to display"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.eogscale                = number, scaling to apply to the EOG channels prior to display",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.eogscale                = number, scaling to apply to the EOG channels prior to display"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.ecgscale                = number, scaling to apply to the ECG channels prior to display",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.ecgscale                = number, scaling to apply to the ECG channels prior to display"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.emgscale                = number, scaling to apply to the EMG channels prior to display",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.emgscale                = number, scaling to apply to the EMG channels prior to display"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.megscale                = number, scaling to apply to the MEG channels prior to display",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.megscale                = number, scaling to apply to the MEG channels prior to display"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.gradscale               = number, scaling to apply to the MEG gradiometer channels prior to display (in addition to the cfg.megscale factor)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.gradscale               = number, scaling to apply to the MEG gradiometer channels prior to display (in addition to the cfg.megscale factor)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.magscale                = number, scaling to apply to the MEG magnetometer channels prior to display (in addition to the cfg.megscale factor)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.magscale                = number, scaling to apply to the MEG magnetometer channels prior to display (in addition to the cfg.megscale factor)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.mychanscale             = number, scaling to apply to the channels specified in cfg.mychan",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.mychanscale             = number, scaling to apply to the channels specified in cfg.mychan"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.mychan                  = Nx1 cell-array with selection of channels",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.mychan                  = Nx1 cell-array with selection of channels"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.chanscale               = Nx1 vector with scaling factors, one per channel specified in cfg.channel",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.chanscale               = Nx1 vector with scaling factors, one per channel specified in cfg.channel"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.compscale               = string, 'global' or 'local', defines whether the colormap for the topographic scaling is applied per topography or on all visualized components (default 'global')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.compscale               = string, 'global' or 'local', defines whether the colormap for the topographic scaling is applied per topography or on all visualized components (default 'global')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.preproc.lpfilter        = 'no' or 'yes'  lowpass filter (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.preproc.lpfilter        = 'no' or 'yes'  lowpass filter (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.preproc.lpfreq          = lowpass  frequency in Hz",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.preproc.lpfreq          = lowpass  frequency in Hz"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.preproc.demean          = 'no' or 'yes', whether to apply baseline correction (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.preproc.demean          = 'no' or 'yes', whether to apply baseline correction (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.preproc.detrend         = 'no' or 'yes', remove linear trend from the data (done per trial) (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.preproc.detrend         = 'no' or 'yes', remove linear trend from the data (done per trial) (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.preproc.baselinewindow  = [begin end] in seconds, the default is the complete trial (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.preproc.baselinewindow  = [begin end] in seconds, the default is the complete trial (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.layout                  = filename of the layout, see FT_PREPARE_LAYOUT",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.layout                  = filename of the layout, see FT_PREPARE_LAYOUT"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.elec                    = structure with electrode positions or filename, see FT_READ_SENS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.elec                    = structure with electrode positions or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.grad                    = structure with gradiometer definition or filename, see FT_READ_SENS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.grad                    = structure with gradiometer definition or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fontsize                = number, fontsize inside the figure (default = 0.03)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fontsize                = number, fontsize inside the figure (default = 0.03)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fontunits               = string, can be 'normalized', 'points', 'pixels', 'inches' or 'centimeters' (default = 'normalized')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fontunits               = string, can be 'normalized', 'points', 'pixels', 'inches' or 'centimeters' (default = 'normalized')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.axisfontsize            = number, fontsize along the axes (default = 10)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.axisfontsize            = number, fontsize along the axes (default = 10)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.axisfontunits           = string, can be 'normalized', 'points', 'pixels', 'inches' or 'centimeters' (default = 'points')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.axisfontunits           = string, can be 'normalized', 'points', 'pixels', 'inches' or 'centimeters' (default = 'points')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.linewidth               = number, width of plotted lines (default = 0.5)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.linewidth               = number, width of plotted lines (default = 0.5)"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_defacemesh",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.selection  = which voxels to keep, can be 'inside' or 'outside' (default = 'outside')"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_defacemesh.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.translate  = initial position of the center of the box (default = [0 0 0])",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.translate  = initial position of the center of the box (default = [0 0 0])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.scale      = initial size of the box along each dimension (default is automatic)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.scale      = initial size of the box along each dimension (default is automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.rotate     = initial rotation of the box (default = [0 0 0])",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.rotate     = initial rotation of the box (default = [0 0 0])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.selection  = which voxels to keep, can be 'inside' or 'outside' (default = 'outside')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.selection  = which voxels to keep, can be 'inside' or 'outside' (default = 'outside')"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_defacevolume",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.feedback   = 'no' or 'yes', whether to provide graphical feedback (default = 'no')"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_defacevolume.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method     = 'box', 'spm' (default = 'box')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method     = 'box', 'spm' (default = 'box')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.translate  = initial position of the center of the box (default = [0 0 0])",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.translate  = initial position of the center of the box (default = [0 0 0])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.scale      = initial size of the box along each dimension (default is automatic)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.scale      = initial size of the box along each dimension (default is automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.rotate     = initial rotation of the box (default = [0 0 0])",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.rotate     = initial rotation of the box (default = [0 0 0])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.selection  = which voxels to keep, can be 'inside' or 'outside' (default = 'outside')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.selection  = which voxels to keep, can be 'inside' or 'outside' (default = 'outside')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.smooth     = 'no' or the FWHM of the gaussian kernel in voxels (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.smooth     = 'no' or the FWHM of the gaussian kernel in voxels (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.keepbrain  = 'no' or 'yes', segment and retain the brain (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.keepbrain  = 'no' or 'yes', segment and retain the brain (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.feedback   = 'no' or 'yes', whether to provide graphical feedback (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.feedback   = 'no' or 'yes', whether to provide graphical feedback (default = 'no')"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_defaults",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.feedback   = 'no' or 'yes', whether to provide graphical feedback (default = 'no')"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_defaults.m",
					"ports": null
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_definetrial",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.trialdef.poststim   = number, latency in seconds (optional)"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_definetrial.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trialdef   = structure with details of trial definition, see below",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trialdef   = structure with details of trial definition, see below"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trialfun   = string with function name, see below (default = 'ft_trialfun_general')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trialfun   = string with function name, see below (default = 'ft_trialfun_general')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dataset     = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dataset     = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headerfile  = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headerfile  = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.datafile    = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.datafile    = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headerformat",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headerformat"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dataformat",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dataformat"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trialdef.eventtype  = 'string'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trialdef.eventtype  = 'string'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trialdef.eventvalue = number, string or list with numbers or strings",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trialdef.eventvalue = number, string or list with numbers or strings"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trialdef.prestim    = number, latency in seconds (optional)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trialdef.prestim    = number, latency in seconds (optional)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trialdef.poststim   = number, latency in seconds (optional)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trialdef.poststim   = number, latency in seconds (optional)"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_denoise_dssp",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.dssp.n_intersect = scalar (default = 0.9). Number of dimensions (if"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_denoise_dssp.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel          = Nx1 cell-array with selection of channels (default = 'all'), see FT_CHANNELSELECTION for details",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel          = Nx1 cell-array with selection of channels (default = 'all'), see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trials           = 'all' or a selection given as a 1xN vector (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trials           = 'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.sourcemodel      = structure, source model with precomputed leadfields, see FT_PREPARE_LEADFIELD",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.sourcemodel      = structure, source model with precomputed leadfields, see FT_PREPARE_LEADFIELD"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dssp             = structure with parameters that determine the behavior of the algorithm",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dssp             = structure with parameters that determine the behavior of the algorithm"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dssp.n_space     = 'all', or scalar. Number of dimensions for the",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dssp.n_space     = 'all', or scalar. Number of dimensions for the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dssp.n_in        = 'all', or scalar. Number of dimensions of the",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dssp.n_in        = 'all', or scalar. Number of dimensions of the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dssp.n_out       = 'all', or scalar. Number of dimensions of the",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dssp.n_out       = 'all', or scalar. Number of dimensions of the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dssp.n_intersect = scalar (default = 0.9). Number of dimensions (if",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dssp.n_intersect = scalar (default = 0.9). Number of dimensions (if"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_denoise_pca",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.updatesens = 'no' or 'yes' (default = 'yes')"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_denoise_pca.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.refchannel = the channels used as reference signal (default = 'MEGREF')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.refchannel = the channels used as reference signal (default = 'MEGREF')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel    = the channels to be denoised (default = 'MEG')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel    = the channels to be denoised (default = 'MEG')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.truncate   = optional truncation of the singular value spectrum (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.truncate   = optional truncation of the singular value spectrum (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.zscore     = standardise reference data prior to PCA (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.zscore     = standardise reference data prior to PCA (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.pertrial   = 'no' (default) or 'yes'. Regress out the references on a per trial basis",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.pertrial   = 'no' (default) or 'yes'. Regress out the references on a per trial basis"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trials     = list of trials that are used (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trials     = list of trials that are used (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.updatesens = 'no' or 'yes' (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.updatesens = 'no' or 'yes' (default = 'yes')"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_denoise_prewhiten",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.kappa       = scalar, truncation parameter for the inverse"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_denoise_prewhiten.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel     = cell-array, see FT_CHANNELSELECTION (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel     = cell-array, see FT_CHANNELSELECTION (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.split       = cell-array of channel types between which covariance is split, it can also be 'all' or 'no'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.split       = cell-array of channel types between which covariance is split, it can also be 'all' or 'no'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.lambda      = scalar, or string, regularization parameter for the inverse",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.lambda      = scalar, or string, regularization parameter for the inverse"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.kappa       = scalar, truncation parameter for the inverse",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.kappa       = scalar, truncation parameter for the inverse"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_denoise_ssp",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.kappa       = scalar, truncation parameter for the inverse"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_denoise_ssp.m",
					"ports": null
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_denoise_synthetic",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_denoise_synthetic.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.gradient = 'none', 'G1BR', 'G2BR' or 'G3BR' specifies the gradiometer",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.gradient = 'none', 'G1BR', 'G2BR' or 'G3BR' specifies the gradiometer"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trials   = 'all' or a selection given as a 1xN vector (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trials   = 'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_denoise_tsr",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.performance        = string, 'Pearson' or 'r-squared' (default ="
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_denoise_tsr.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.refchannel         = the channels used as reference signal (default = 'MEGREF'), see FT_SELECTDATA",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.refchannel         = the channels used as reference signal (default = 'MEGREF'), see FT_SELECTDATA"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel            = the channels to be denoised (default = 'all'), see FT_SELECTDATA",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel            = the channels to be denoised (default = 'all'), see FT_SELECTDATA"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method             = string, 'mlr', 'cca', 'pls', 'svd', option specifying the criterion for the regression",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method             = string, 'mlr', 'cca', 'pls', 'svd', option specifying the criterion for the regression"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.reflags            = integer array, specifying temporal lags (in msec) by which to shift refchannel",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.reflags            = integer array, specifying temporal lags (in msec) by which to shift refchannel"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trials             = integer array, trials to be used in regression, see FT_SELECTDATA",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trials             = integer array, trials to be used in regression, see FT_SELECTDATA"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.testtrials         = cell-array or string, trial indices to be used as test folds in a cross-validation scheme",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.testtrials         = cell-array or string, trial indices to be used as test folds in a cross-validation scheme"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.nfold              = scalar, indicating the number of test folds to",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.nfold              = scalar, indicating the number of test folds to"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.standardiserefdata = string, 'yes' or 'no', whether or not to standardise reference data",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.standardiserefdata = string, 'yes' or 'no', whether or not to standardise reference data"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.standardisedata    = string, 'yes' or 'no', whether or not to standardise dependent variable",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.standardisedata    = string, 'yes' or 'no', whether or not to standardise dependent variable"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.demeanrefdata      = string, 'yes' or 'no', whether or not to make",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.demeanrefdata      = string, 'yes' or 'no', whether or not to make"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.demeandata         = string, 'yes' or 'no', whether or not to make",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.demeandata         = string, 'yes' or 'no', whether or not to make"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.threshold          = integer array, ([1 by 2] or [1 by numel(cfg.channel) + numel(cfg.reflags)]),",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.threshold          = integer array, ([1 by 2] or [1 by numel(cfg.channel) + numel(cfg.reflags)]),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.updatesens         = string, 'yes' or 'no' (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.updatesens         = string, 'yes' or 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.perchannel         = string, 'yes' or 'no', or logical, whether or not to perform estimation of beta weights",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.perchannel         = string, 'yes' or 'no', or logical, whether or not to perform estimation of beta weights"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.output             = string, 'model' or 'residual' (defaul = 'model'),",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.output             = string, 'model' or 'residual' (defaul = 'model'),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.performance        = string, 'Pearson' or 'r-squared' (default =",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.performance        = string, 'Pearson' or 'r-squared' (default ="
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_detect_movement",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_detect_movement.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method  = string representing the method for movement detection",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method  = string representing the method for movement detection"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel = Nx1 cell-array with selection of channels, see FT_CHANNELSELECTION for details, (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel = Nx1 cell-array with selection of channels, see FT_CHANNELSELECTION for details, (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trials  = 'all' or a selection given as a 1xN vector (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trials  = 'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_dipolefitting",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.dipfit.noisecov       = noise covariance matrix, see e.g. FT_TIMELOCK_ANALYSIS"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_dipolefitting.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.numdipoles  = number, default is 1",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.numdipoles  = number, default is 1"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.symmetry    = 'x', 'y' or 'z' symmetry for two dipoles, can be empty (default = [])",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.symmetry    = 'x', 'y' or 'z' symmetry for two dipoles, can be empty (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel     = Nx1 cell-array with selection of channels (default = 'all'),",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel     = Nx1 cell-array with selection of channels (default = 'all'),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.gridsearch  = 'yes' or 'no', perform global search for initial",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.gridsearch  = 'yes' or 'no', perform global search for initial"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.nonlinear   = 'yes' or 'no', perform nonlinear search for optimal",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.nonlinear   = 'yes' or 'no', perform nonlinear search for optimal"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.xgrid               = vector (e.g. -20:1:20) or 'auto' (default = 'auto')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.xgrid               = vector (e.g. -20:1:20) or 'auto' (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.ygrid               = vector (e.g. -20:1:20) or 'auto' (default = 'auto')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.ygrid               = vector (e.g. -20:1:20) or 'auto' (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.zgrid               = vector (e.g.   0:1:20) or 'auto' (default = 'auto')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.zgrid               = vector (e.g.   0:1:20) or 'auto' (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.resolution          = number (e.g. 1 cm) for automatic grid generation",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.resolution          = number (e.g. 1 cm) for automatic grid generation"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.sourcemodel.pos     = N*3 matrix with the vertex positions of the cortical sheet",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.sourcemodel.pos     = N*3 matrix with the vertex positions of the cortical sheet"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.sourcemodel.tri     = M*3 matrix that describes the triangles connecting the vertices",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.sourcemodel.tri     = M*3 matrix that describes the triangles connecting the vertices"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.sourcemodel.pos     = N*3 matrix with position of each source",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.sourcemodel.pos     = N*3 matrix with position of each source"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.sourcemodel.inside  = N*1 vector with boolean value whether grid point is inside brain (optional)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.sourcemodel.inside  = N*1 vector with boolean value whether grid point is inside brain (optional)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.sourcemodel.dim     = [Nx Ny Nz] vector with dimensions in case of 3-D grid (optional)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.sourcemodel.dim     = [Nx Ny Nz] vector with dimensions in case of 3-D grid (optional)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dip.pos     = initial dipole position, matrix of Ndipoles x 3",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dip.pos     = initial dipole position, matrix of Ndipoles x 3"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.latency     = [begin end] in seconds or 'all' (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.latency     = [begin end] in seconds or 'all' (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.model       = 'moving' or 'regional'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.model       = 'moving' or 'regional'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.component   = array with numbers (can be empty -> all)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.component   = array with numbers (can be empty -> all)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.frequency   = single number (in Hz)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.frequency   = single number (in Hz)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dipfit.display  = level of display, can be 'off', 'iter', 'notify' or 'final' (default = 'iter')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dipfit.display  = level of display, can be 'off', 'iter', 'notify' or 'final' (default = 'iter')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dipfit.optimfun = function to use, can be 'fminsearch' or 'fminunc' (default is determined automatic)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dipfit.optimfun = function to use, can be 'fminsearch' or 'fminunc' (default is determined automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dipfit.maxiter  = maximum number of function evaluations allowed (default depends on the optimfun)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dipfit.maxiter  = maximum number of function evaluations allowed (default depends on the optimfun)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.reducerank      = 'no', or number (default = 3 for EEG, 2 for MEG)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.reducerank      = 'no', or number (default = 3 for EEG, 2 for MEG)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headmodel     = structure with volume conduction model, see FT_PREPARE_HEADMODEL",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headmodel     = structure with volume conduction model, see FT_PREPARE_HEADMODEL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.elec          = structure with electrode positions or filename, see FT_READ_SENS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.elec          = structure with electrode positions or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.grad          = structure with gradiometer definition or filename, see FT_READ_SENS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.grad          = structure with gradiometer definition or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dipfit.constr   = Source model constraints, depends on cfg.symmetry",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dipfit.constr   = Source model constraints, depends on cfg.symmetry"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dipfit.noisecov       = noise covariance matrix, see e.g. FT_TIMELOCK_ANALYSIS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dipfit.noisecov       = noise covariance matrix, see e.g. FT_TIMELOCK_ANALYSIS"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_dipolesimulation",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.grad          = structure with gradiometer definition or filename, see FT_READ_SENS"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_dipolesimulation.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dip.pos     = [Rx Ry Rz] (size Nx3)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dip.pos     = [Rx Ry Rz] (size Nx3)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dip.mom     = [Qx Qy Qz] (size 3xN)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dip.mom     = [Qx Qy Qz] (size 3xN)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dip.signal",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dip.signal"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dip.frequency    in Hz",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dip.frequency    in Hz"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dip.phase        in radians",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dip.phase        in radians"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dip.amplitude    per dipole",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dip.amplitude    per dipole"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.ntrials          number of trials",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.ntrials          number of trials"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.triallength      time in seconds",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.triallength      time in seconds"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fsample          sampling frequency in Hz",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fsample          sampling frequency in Hz"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.relnoise    = add noise with level relative to simulated signal",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.relnoise    = add noise with level relative to simulated signal"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.absnoise    = add noise with absolute level",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.absnoise    = add noise with absolute level"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.randomseed  = 'yes' or a number or vector with the seed value (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.randomseed  = 'yes' or a number or vector with the seed value (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel    = Nx1 cell-array with selection of channels (default = 'all'),",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel    = Nx1 cell-array with selection of channels (default = 'all'),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dipoleunit = units for dipole amplitude (default nA*m)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dipoleunit = units for dipole amplitude (default nA*m)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.chanunit   = units for the channel data",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.chanunit   = units for the channel data"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headmodel     = structure with volume conduction model, see FT_PREPARE_HEADMODEL",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headmodel     = structure with volume conduction model, see FT_PREPARE_HEADMODEL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.elec          = structure with electrode positions or filename, see FT_READ_SENS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.elec          = structure with electrode positions or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.grad          = structure with gradiometer definition or filename, see FT_READ_SENS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.grad          = structure with gradiometer definition or filename, see FT_READ_SENS"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_electrodeplacement",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.grid.corner4   = 1x3 position of the lower right corner point"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_electrodeplacement.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method         = string representing the method for placing the electrodes",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method         = string representing the method for placing the electrodes"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.parameter      = string, field in data (default = 'anatomy' if present in data)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.parameter      = string, field in data (default = 'anatomy' if present in data)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel        = Nx1 cell-array with selection of channels (default = {'1' '2' ...})",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel        = Nx1 cell-array with selection of channels (default = {'1' '2' ...})"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.elec           = struct containing previously placed electrodes (this overwrites cfg.channel)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.elec           = struct containing previously placed electrodes (this overwrites cfg.channel)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.clim           = color range of the data (default = [0 1], i.e. the full range)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.clim           = color range of the data (default = [0 1], i.e. the full range)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.magtype        = string representing the 'magnet' type used for placing the electrodes",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.magtype        = string representing the 'magnet' type used for placing the electrodes"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.magradius      = number representing the radius for the cfg.magtype based search (default = 3)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.magradius      = number representing the radius for the cfg.magtype based search (default = 3)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fiducial.nas   = 1x3 vector with coordinates",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fiducial.nas   = 1x3 vector with coordinates"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fiducial.ini   = 1x3 vector with coordinates",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fiducial.ini   = 1x3 vector with coordinates"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fiducial.lpa   = 1x3 vector with coordinates",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fiducial.lpa   = 1x3 vector with coordinates"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fiducial.rpa   = 1x3 vector with coordinates",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fiducial.rpa   = 1x3 vector with coordinates"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.feedback       = string, can be 'yes' or 'no' for detailled feedback (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.feedback       = string, can be 'yes' or 'no' for detailled feedback (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.shaft.tip      = 1x3 position of the electrode at the tip of the shaft",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.shaft.tip      = 1x3 position of the electrode at the tip of the shaft"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.shaft.along    = 1x3 or Nx3 positions along the shaft",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.shaft.along    = 1x3 or Nx3 positions along the shaft"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.shaft.distance = scalar, distance between electrodes",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.shaft.distance = scalar, distance between electrodes"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.grid.corner1   = 1x3 position of the upper left corner point",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.grid.corner1   = 1x3 position of the upper left corner point"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.grid.corner2   = 1x3 position of the upper right corner point",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.grid.corner2   = 1x3 position of the upper right corner point"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.grid.corner3   = 1x3 position of the lower left corner point",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.grid.corner3   = 1x3 position of the lower left corner point"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.grid.corner4   = 1x3 position of the lower right corner point",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.grid.corner4   = 1x3 position of the lower right corner point"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_electroderealign",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.fshome         = string, path to freesurfer"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_electroderealign.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method         = string representing the method for aligning or placing the electrodes",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method         = string representing the method for aligning or placing the electrodes"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.warp          = string describing the spatial transformation for the template and headshape methods",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.warp          = string describing the spatial transformation for the template and headshape methods"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel        = Nx1 cell-array with selection of channels (default = 'all'),",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel        = Nx1 cell-array with selection of channels (default = 'all'),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.keepchannel    = string, 'yes' or 'no' (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.keepchannel    = string, 'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fiducial       = cell-array with the name of three fiducials used for",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fiducial       = cell-array with the name of three fiducials used for"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.casesensitive  = 'yes' or 'no', determines whether string comparisons",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.casesensitive  = 'yes' or 'no', determines whether string comparisons"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.feedback       = 'yes' or 'no' (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.feedback       = 'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.elec          = structure with electrode positions or filename, see FT_READ_SENS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.elec          = structure with electrode positions or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.target.pos(1,:) = [110 0 0]     % location of the nose",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.target.pos(1,:) = [110 0 0]     % location of the nose"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.target.pos(2,:) = [0  90 0]     % location of the left ear",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.target.pos(2,:) = [0  90 0]     % location of the left ear"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.target.pos(3,:) = [0 -90 0]     % location of the right ear",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.target.pos(3,:) = [0 -90 0]     % location of the right ear"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.target.label    = {'NAS', 'LPA', 'RPA'}",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.target.label    = {'NAS', 'LPA', 'RPA'}"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.target          = single electrode set that serves as standard",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.target          = single electrode set that serves as standard"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.target{1..N}    = list of electrode sets that will be averaged",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.target{1..N}    = list of electrode sets that will be averaged"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headshape      = a filename containing headshape, a structure containing a",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headshape      = a filename containing headshape, a structure containing a"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method         = 'headshape'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method         = 'headshape'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.warp           = 'dykstra2012', or 'hermes2010'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.warp           = 'dykstra2012', or 'hermes2010'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headshape      = a filename containing headshape, a structure containing a",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headshape      = a filename containing headshape, a structure containing a"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.feedback       = 'yes' or 'no' (default), feedback of the iteration procedure",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.feedback       = 'yes' or 'no' (default), feedback of the iteration procedure"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.maxiter        = number (default: 50), maximum number of optimization iterations",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.maxiter        = number (default: 50), maximum number of optimization iterations"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.pairmethod     = 'pos' (default) or 'label', the method for electrode",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.pairmethod     = 'pos' (default) or 'label', the method for electrode"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.isodistance    = 'yes', 'no' (default) or number, to enforce isotropic",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.isodistance    = 'yes', 'no' (default) or number, to enforce isotropic"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.deformweight   = number (default: 1), weight of deformation relative ",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.deformweight   = number (default: 1), weight of deformation relative "
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.moveinward     = number, the distance that the electrode should be moved",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.moveinward     = number, the distance that the electrode should be moved"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method         = 'headshape'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method         = 'headshape'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.warp           = 'fsaverage'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.warp           = 'fsaverage'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headshape      = string, filename containing subject headshape (e.g. <path to freesurfer\/surf\/lh.pial>)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headshape      = string, filename containing subject headshape (e.g. <path to freesurfer\/surf\/lh.pial>)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fshome         = string, path to freesurfer",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fshome         = string, path to freesurfer"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_electrodermalactivity",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.medianwindow   = scalar, length of window for median filter in seconds (default = 8)"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_electrodermalactivity.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel        = selected channel for processing, see FT_CHANNELSELECTION",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel        = selected channel for processing, see FT_CHANNELSELECTION"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.feedback       = 'yes' or 'no'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.feedback       = 'yes' or 'no'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.medianwindow   = scalar, length of window for median filter in seconds (default = 8)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.medianwindow   = scalar, length of window for median filter in seconds (default = 8)"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_examplefunction",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_examplefunction.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.option3   = value, explain it here (default is automatic)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.option3   = value, explain it here (default is automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_freqanalysis",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_freqanalysis.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method      = different methods of calculating the spectra",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method      = different methods of calculating the spectra"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.output      = 'pow'       return the power-spectra",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.output      = 'pow'       return the power-spectra"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel     = Nx1 cell-array with selection of channels (default = 'all'),",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel     = Nx1 cell-array with selection of channels (default = 'all'),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channelcmb  = Mx2 cell-array with selection of channel pairs (default = {'all' 'all'}),",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channelcmb  = Mx2 cell-array with selection of channel pairs (default = {'all' 'all'}),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trials      = 'all' or a selection given as a 1xN vector (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trials      = 'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.keeptrials  = 'yes' or 'no', return individual trials or average (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.keeptrials  = 'yes' or 'no', return individual trials or average (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.keeptapers  = 'yes' or 'no', return individual tapers or average (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.keeptapers  = 'yes' or 'no', return individual tapers or average (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.pad         = number, 'nextpow2', or 'maxperlen' (default), length",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.pad         = number, 'nextpow2', or 'maxperlen' (default), length"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.padtype     = string, type of padding (default 'zero', see",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.padtype     = string, type of padding (default 'zero', see"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.polyremoval = number (default = 0), specifying the order of the",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.polyremoval = number (default = 0), specifying the order of the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.taper      = 'dpss', 'hanning' or many others, see WINDOW (default = 'dpss')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.taper      = 'dpss', 'hanning' or many others, see WINDOW (default = 'dpss')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.foilim     = [begin end], frequency band of interest",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.foilim     = [begin end], frequency band of interest"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.foi        = vector 1 x numfoi, frequencies of interest",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.foi        = vector 1 x numfoi, frequencies of interest"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.tapsmofrq  = number, the amount of spectral smoothing through",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.tapsmofrq  = number, the amount of spectral smoothing through"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.tapsmofrq  = vector 1 x numfoi, the amount of spectral smoothing",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.tapsmofrq  = vector 1 x numfoi, the amount of spectral smoothing"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.foi        = vector 1 x numfoi, frequencies of interest",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.foi        = vector 1 x numfoi, frequencies of interest"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.foilim     = [begin end], frequency band of interest",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.foilim     = [begin end], frequency band of interest"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.toi        = vector 1 x numtoi, the times on which the analysis",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.toi        = vector 1 x numtoi, the times on which the analysis"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.width      = 'width', or number of cycles, of the wavelet (default = 7)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.width      = 'width', or number of cycles, of the wavelet (default = 7)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.gwidth     = determines the length of the used wavelets in standard",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.gwidth     = determines the length of the used wavelets in standard"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.foi        = vector 1 x numfoi, frequencies of interest",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.foi        = vector 1 x numfoi, frequencies of interest"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.foilim     = [begin end], frequency band of interest",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.foilim     = [begin end], frequency band of interest"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.width      = 'width', or number of cycles, of the wavelet (default = 7)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.width      = 'width', or number of cycles, of the wavelet (default = 7)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.gwidth     = determines the length of the used wavelets in standard",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.gwidth     = determines the length of the used wavelets in standard"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_freqanalysis_mvar",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_freqanalysis_mvar.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.foi = vector with the frequencies at which the spectral quantities",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.foi = vector with the frequencies at which the spectral quantities"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.feedback = 'none', or any of the methods supported by FT_PROGRESS,",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.feedback = 'none', or any of the methods supported by FT_PROGRESS,"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_freqbaseline",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile = one can specify output as file to save to disk"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_freqbaseline.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.baseline     = [begin end] (default = 'no'), alternatively an",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.baseline     = [begin end] (default = 'no'), alternatively an"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.baselinetype = 'absolute', 'relative', 'relchange', 'normchange', 'db' or 'zscore' (default = 'absolute')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.baselinetype = 'absolute', 'relative', 'relchange', 'normchange', 'db' or 'zscore' (default = 'absolute')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.parameter    = field for which to apply baseline normalization, or",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.parameter    = field for which to apply baseline normalization, or"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile  = one can specifiy preanalysed saved data as input",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile  = one can specifiy preanalysed saved data as input"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile = one can specify output as file to save to disk",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile = one can specify output as file to save to disk"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_freqdescriptives",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_freqdescriptives.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.variance      = 'yes' or 'no', estimate standard error in the standard way (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.variance      = 'yes' or 'no', estimate standard error in the standard way (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.jackknife     = 'yes' or 'no', estimate standard error by means of the jack-knife (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.jackknife     = 'yes' or 'no', estimate standard error by means of the jack-knife (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.keeptrials    = 'yes' or 'no', estimate single trial power (useful for fourier data) (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.keeptrials    = 'yes' or 'no', estimate single trial power (useful for fourier data) (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel       = Nx1 cell-array with selection of channels (default = 'all'),",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel       = Nx1 cell-array with selection of channels (default = 'all'),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trials        = 'all' or a selection given as a 1xN vector (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trials        = 'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.frequency     = [fmin fmax] or 'all', to specify a subset of frequencies (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.frequency     = [fmin fmax] or 'all', to specify a subset of frequencies (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.latency       = [tmin tmax] or 'all', to specify a subset of latencies (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.latency       = [tmin tmax] or 'all', to specify a subset of latencies (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_freqgrandaverage",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_freqgrandaverage.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.keepindividual = 'yes' or 'no' (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.keepindividual = 'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.foilim         = [fmin fmax] or 'all', to specify a subset of frequencies (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.foilim         = [fmin fmax] or 'all', to specify a subset of frequencies (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.toilim         = [tmin tmax] or 'all', to specify a subset of latencies (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.toilim         = [tmin tmax] or 'all', to specify a subset of latencies (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel        = Nx1 cell-array with selection of channels (default = 'all'),",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel        = Nx1 cell-array with selection of channels (default = 'all'),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.parameter      = string or cell-array of strings indicating which",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.parameter      = string or cell-array of strings indicating which"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_freqinterpolate",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_freqinterpolate.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method   = 'nan', 'linear' (default = 'nan')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method   = 'nan', 'linear' (default = 'nan')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.foilim   = Nx2 matrix with begin and end of each interval to be",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.foilim   = Nx2 matrix with begin and end of each interval to be"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_freqsimulation",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.time       = cell-array with one time axis per trial, which are for example obtained from an existing dataset"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_freqsimulation.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method     = The methods are explained in more detail below, but they can be",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method     = The methods are explained in more detail below, but they can be"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.output     = which channels should be in the output data, can be 'mixed' or 'all' (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.output     = which channels should be in the output data, can be 'mixed' or 'all' (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.randomseed = 'yes' or a number or vector with the seed value (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.randomseed = 'yes' or a number or vector with the seed value (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fsample    = simulated sample frequency",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fsample    = simulated sample frequency"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trllen     = length of simulated trials in seconds",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trllen     = length of simulated trials in seconds"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.numtrl     = number of simulated trials",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.numtrl     = number of simulated trials"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.time       = cell-array with one time axis per trial, which are for example obtained from an existing dataset",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.time       = cell-array with one time axis per trial, which are for example obtained from an existing dataset"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_freqstatistics",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_freqstatistics.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel     = Nx1 cell-array with selection of channels (default = 'all'),",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel     = Nx1 cell-array with selection of channels (default = 'all'),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.latency     = [begin end] in seconds or 'all' (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.latency     = [begin end] in seconds or 'all' (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.frequency   = [begin end], can be 'all'       (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.frequency   = [begin end], can be 'all'       (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.avgoverchan = 'yes' or 'no'                   (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.avgoverchan = 'yes' or 'no'                   (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.avgovertime = 'yes' or 'no'                   (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.avgovertime = 'yes' or 'no'                   (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.avgoverfreq = 'yes' or 'no'                   (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.avgoverfreq = 'yes' or 'no'                   (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.parameter   = string                          (default = 'powspctrm')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.parameter   = string                          (default = 'powspctrm')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.neighbours  = neighbourhood structure, see FT_PREPARE_NEIGHBOURS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.neighbours  = neighbourhood structure, see FT_PREPARE_NEIGHBOURS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method       = different methods for calculating the significance probability and\/or critical value",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method       = different methods for calculating the significance probability and\/or critical value"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.design       = Nxnumobservations: design matrix (for examples\/advice, please see the Fieldtrip wiki,",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.design       = Nxnumobservations: design matrix (for examples\/advice, please see the Fieldtrip wiki,"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_globalmeanfield",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_globalmeanfield.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method    = string, determines whether the amplitude or power should be calculated (see below, default is 'amplitude', can be 'power')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method    = string, determines whether the amplitude or power should be calculated (see below, default is 'amplitude', can be 'power')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel   = Nx1 cell-array with selection of channels (default = 'all'),",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel   = Nx1 cell-array with selection of channels (default = 'all'),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_headmovement",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.numclusters  = number of segments with constant headposition in"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_headmovement.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dataset      = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dataset      = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method       = 'updatesens' (default), 'cluster', 'avgoverrpt',",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method       = 'updatesens' (default), 'cluster', 'avgoverrpt',"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trl          = empty (default), or Nx3 matrix with the trial ",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trl          = empty (default), or Nx3 matrix with the trial "
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.numclusters  = number of segments with constant headposition in",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.numclusters  = number of segments with constant headposition in"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_heartrate",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.preproc.bpfreq   = [low high], filter frequency in Hz"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_heartrate.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel          = selected channel for processing, see FT_CHANNELSELECTION",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel          = selected channel for processing, see FT_CHANNELSELECTION"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.envelopewindow   = scalar, time in seconds",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.envelopewindow   = scalar, time in seconds"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.peakseparation   = scalar, time in seconds",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.peakseparation   = scalar, time in seconds"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.threshold        = scalar, usually between 0 and 1 (default = 0.4)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.threshold        = scalar, usually between 0 and 1 (default = 0.4)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.feedback         = 'yes' or 'no'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.feedback         = 'yes' or 'no'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.preproc.bpfilter = 'yes' or 'no'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.preproc.bpfilter = 'yes' or 'no'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.preproc.bpfreq   = [low high], filter frequency in Hz",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.preproc.bpfreq   = [low high], filter frequency in Hz"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_interactiverealign",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.template.headshapestyle = 'vertex', 'edge', 'surface' or 'both' (default = 'vertex')"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_interactiverealign.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.individual.elec           = structure",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.individual.elec           = structure"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.individual.grad           = structure",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.individual.grad           = structure"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.individual.headmodel      = structure, see FT_PREPARE_HEADMODEL",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.individual.headmodel      = structure, see FT_PREPARE_HEADMODEL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.individual.headshape      = structure, see FT_READ_HEADSHAPE",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.individual.headshape      = structure, see FT_READ_HEADSHAPE"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.individual.mri            = structure, see FT_READ_MRI",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.individual.mri            = structure, see FT_READ_MRI"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.individual.headmodelstyle = 'vertex', 'edge', 'surface' or 'both' (default = 'edge')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.individual.headmodelstyle = 'vertex', 'edge', 'surface' or 'both' (default = 'edge')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.individual.headshapestyle = 'vertex', 'edge', 'surface' or 'both' (default = 'vertex')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.individual.headshapestyle = 'vertex', 'edge', 'surface' or 'both' (default = 'vertex')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.template.axes           = string, 'yes' or 'no (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.template.axes           = string, 'yes' or 'no (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.template.elec           = structure",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.template.elec           = structure"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.template.grad           = structure",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.template.grad           = structure"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.template.headmodel      = structure, see FT_PREPARE_HEADMODEL",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.template.headmodel      = structure, see FT_PREPARE_HEADMODEL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.template.headshape      = structure, see FT_READ_HEADSHAPE",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.template.headshape      = structure, see FT_READ_HEADSHAPE"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.template.mri            = structure, see FT_READ_MRI",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.template.mri            = structure, see FT_READ_MRI"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.template.headmodelstyle = 'vertex', 'edge', 'surface' or 'both' (default = 'edge')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.template.headmodelstyle = 'vertex', 'edge', 'surface' or 'both' (default = 'edge')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.template.headshapestyle = 'vertex', 'edge', 'surface' or 'both' (default = 'vertex')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.template.headshapestyle = 'vertex', 'edge', 'surface' or 'both' (default = 'vertex')"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_interpolatenan",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_interpolatenan.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method      = string, interpolation method, see HELP INTERP1 (default = 'linear')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method      = string, interpolation method, see HELP INTERP1 (default = 'linear')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.prewindow   = value, length of data prior to interpolation window, in seconds (default = 1)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.prewindow   = value, length of data prior to interpolation window, in seconds (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.postwindow  = value, length of data after interpolation window, in seconds (default = 1)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.postwindow  = value, length of data after interpolation window, in seconds (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.feedback    = string, 'no', 'text', 'textbar', 'gui' (default = 'text')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.feedback    = string, 'no', 'text', 'textbar', 'gui' (default = 'text')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_lateralizedpotential",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_lateralizedpotential.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channelcmb = Nx2 cell-array",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channelcmb = Nx2 cell-array"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_layoutplot",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.montage"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_layoutplot.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.layout      = filename containg the layout",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.layout      = filename containg the layout"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.rotate      = number, rotation around the z-axis in degrees (default = [], which means automatic)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.rotate      = number, rotation around the z-axis in degrees (default = [], which means automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.projection  = string, 2D projection method can be 'stereographic', 'ortographic', 'polar', 'gnomic' or 'inverse' (default = 'orthographic')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.projection  = string, 2D projection method can be 'stereographic', 'ortographic', 'polar', 'gnomic' or 'inverse' (default = 'orthographic')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.elec        = structure with electrode positions or filename, see FT_READ_SENS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.elec        = structure with electrode positions or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.grad        = structure with gradiometer definition or filename, see FT_READ_SENS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.grad        = structure with gradiometer definition or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.opto        = structure with optode definition or filename, see FT_READ_SENS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.opto        = structure with optode definition or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.output      = filename to which the layout will be written (default = [])",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.output      = filename to which the layout will be written (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.montage     = 'no' or a montage structure (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.montage     = 'no' or a montage structure (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.image       = filename, use an image to construct a layout (e.g. usefull for ECoG grids)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.image       = filename, use an image to construct a layout (e.g. usefull for ECoG grids)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.visible     = string, 'yes' or 'no' whether figure will be visible (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.visible     = string, 'yes' or 'no' whether figure will be visible (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.box         = string, 'yes' or 'no' whether box should be plotted around electrode (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.box         = string, 'yes' or 'no' whether box should be plotted around electrode (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.mask        = string, 'yes' or 'no' whether the mask should be plotted (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.mask        = string, 'yes' or 'no' whether the mask should be plotted (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.layout = 'ordered'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.layout = 'ordered'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.montage",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.montage"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_math",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_math.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.parameter = string, field from the input data on which the operation is",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.parameter = string, field from the input data on which the operation is"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.operation = string, for example '(x1-x2)\/(x1+x2)' or 'x1\/6'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.operation = string, for example '(x1-x2)\/(x1+x2)' or 'x1\/6'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.scalar    = scalar value to be used in the operation",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.scalar    = scalar value to be used in the operation"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.matrix    = matrix with identical size as the data, it will be element-wise be applied",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.matrix    = matrix with identical size as the data, it will be element-wise be applied"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_megplanar",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_megplanar.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.planarmethod   = string, can be 'sincos', 'orig', 'fitplane', 'sourceproject' (default = 'sincos')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.planarmethod   = string, can be 'sincos', 'orig', 'fitplane', 'sourceproject' (default = 'sincos')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel        =  Nx1 cell-array with selection of channels (default = 'MEG'), see FT_CHANNELSELECTION for details",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel        =  Nx1 cell-array with selection of channels (default = 'MEG'), see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trials         = 'all' or a selection given as a 1xN vector (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trials         = 'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.neighbours     = neighbourhood structure, see FT_PREPARE_NEIGHBOURS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.neighbours     = neighbourhood structure, see FT_PREPARE_NEIGHBOURS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inwardshift = depth of the source layer relative to the head model surface (default = 2.5 cm, which is appropriate for a skin-based head model)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inwardshift = depth of the source layer relative to the head model surface (default = 2.5 cm, which is appropriate for a skin-based head model)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.spheremesh  = number of dipoles in the source layer (default = 642)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.spheremesh  = number of dipoles in the source layer (default = 642)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.pruneratio  = for singular values, default is 1e-3",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.pruneratio  = for singular values, default is 1e-3"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headshape   = a filename containing headshape, a structure containing a",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headshape   = a filename containing headshape, a structure containing a"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headmodel     = structure with volume conduction model, see FT_PREPARE_HEADMODEL",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headmodel     = structure with volume conduction model, see FT_PREPARE_HEADMODEL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.feedback",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.feedback"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_megrealign",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_megrealign.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.template",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.template"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inwardshift",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inwardshift"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.template       = single dataset that serves as template",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.template       = single dataset that serves as template"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.template(1..N) = datasets that are averaged into the standard",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.template(1..N) = datasets that are averaged into the standard"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headmodel   = structure, see FT_PREPARE_HEADMODEL",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headmodel   = structure, see FT_PREPARE_HEADMODEL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.spheremesh  = number of dipoles in the source layer (default = 642)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.spheremesh  = number of dipoles in the source layer (default = 642)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inwardshift = depth of the source layer relative to the headshape",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inwardshift = depth of the source layer relative to the headshape"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headshape   = a filename containing headshape, a structure containing a",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headshape   = a filename containing headshape, a structure containing a"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_meshrealign",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_meshrealign.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.coordsys        = string, can be 'ctf', 'neuromag', '4d', 'bti', 'itab'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.coordsys        = string, can be 'ctf', 'neuromag', '4d', 'bti', 'itab'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fiducial.nas    = [x y z], position of nasion",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fiducial.nas    = [x y z], position of nasion"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fiducial.lpa    = [x y z], position of LPA",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fiducial.lpa    = [x y z], position of LPA"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fiducial.rpa    = [x y z], position of RPA",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fiducial.rpa    = [x y z], position of RPA"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_movieplotER",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.inputfile   =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_movieplotER.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.parameter    = string, parameter that is color coded (default = 'avg')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.parameter    = string, parameter that is color coded (default = 'avg')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.xlim         = 'maxmin' or [xmin xmax] (default = 'maxmin')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.xlim         = 'maxmin' or [xmin xmax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.zlim         = plotting limits for color dimension, 'maxmin',",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.zlim         = plotting limits for color dimension, 'maxmin',"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.samperframe  = number, samples per fram (default = 1)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.samperframe  = number, samples per fram (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.framespersec = number, frames per second (default = 5)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.framespersec = number, frames per second (default = 5)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.framesfile   = [], no file saved, or 'string', filename of saved frames.mat (default = []);",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.framesfile   = [], no file saved, or 'string', filename of saved frames.mat (default = []);"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.layout       = specification of the layout, see below",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.layout       = specification of the layout, see below"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.baseline     = 'yes','no' or [time1 time2] (default = 'no'), see FT_TIMELOCKBASELINE",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.baseline     = 'yes','no' or [time1 time2] (default = 'no'), see FT_TIMELOCKBASELINE"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.baselinetype = 'absolute' or 'relative' (default = 'absolute')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.baselinetype = 'absolute' or 'relative' (default = 'absolute')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.colorbar     = 'yes', 'no' (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.colorbar     = 'yes', 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.colorbartext =  string indicating the text next to colorbar",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.colorbartext =  string indicating the text next to colorbar"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_movieplotTFR",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.inputfile   =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_movieplotTFR.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.parameter    = string, parameter that is color coded (default = 'avg')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.parameter    = string, parameter that is color coded (default = 'avg')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.xlim         = selection boundaries over first dimension in data (e.g., time)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.xlim         = selection boundaries over first dimension in data (e.g., time)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.ylim         = selection boundaries over second dimension in data (e.g., freq)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.ylim         = selection boundaries over second dimension in data (e.g., freq)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.zlim         = plotting limits for color dimension, 'maxmin',",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.zlim         = plotting limits for color dimension, 'maxmin',"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.samperframe  = number, samples per fram (default = 1)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.samperframe  = number, samples per fram (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.framespersec = number, frames per second (default = 5)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.framespersec = number, frames per second (default = 5)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.framesfile   = [] (optional), no file saved, or 'string', filename of saved frames.mat (default = []);",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.framesfile   = [] (optional), no file saved, or 'string', filename of saved frames.mat (default = []);"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.moviefreq    = number, movie frames are all time points at the fixed frequency moviefreq (default = []);",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.moviefreq    = number, movie frames are all time points at the fixed frequency moviefreq (default = []);"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.movietime    = number, movie frames are all frequencies at the fixed time movietime (default = []);",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.movietime    = number, movie frames are all frequencies at the fixed time movietime (default = []);"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.layout       = specification of the layout, see below",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.layout       = specification of the layout, see below"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.interactive  = 'no' or 'yes', make it interactive",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.interactive  = 'no' or 'yes', make it interactive"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.baseline     = 'yes','no' or [time1 time2] (default = 'no'), see FT_TIMELOCKBASELINE or FT_FREQBASELINE",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.baseline     = 'yes','no' or [time1 time2] (default = 'no'), see FT_TIMELOCKBASELINE or FT_FREQBASELINE"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.baselinetype = 'absolute', 'relative', 'relchange', 'normchange', 'db' or 'zscore' (default = 'absolute')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.baselinetype = 'absolute', 'relative', 'relchange', 'normchange', 'db' or 'zscore' (default = 'absolute')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.colorbar     = 'yes', 'no' (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.colorbar     = 'yes', 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.colorbartext =  string indicating the text next to colorbar",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.colorbartext =  string indicating the text next to colorbar"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_multiplotCC",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.inputfile   =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_multiplotCC.m",
					"ports": null
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_multiplotER",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.inputfile   =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_multiplotER.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.parameter     = field to be plotted on y-axis, for example 'avg', 'powspctrm' or 'cohspctrm' (default is automatic)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.parameter     = field to be plotted on y-axis, for example 'avg', 'powspctrm' or 'cohspctrm' (default is automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.maskparameter = field in the first dataset to be used for marking significant data",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.maskparameter = field in the first dataset to be used for marking significant data"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.maskstyle     = style used for masking of data, 'box', 'thickness' or 'saturation' (default = 'box')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.maskstyle     = style used for masking of data, 'box', 'thickness' or 'saturation' (default = 'box')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.maskfacealpha = mask transparency value between 0 and 1",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.maskfacealpha = mask transparency value between 0 and 1"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.xlim          = 'maxmin' or [xmin xmax] (default = 'maxmin')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.xlim          = 'maxmin' or [xmin xmax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.ylim          = 'maxmin', 'maxabs', 'zeromax', 'minzero', or [ymin ymax] (default = 'maxmin')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.ylim          = 'maxmin', 'maxabs', 'zeromax', 'minzero', or [ymin ymax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.gradscale     = number, scaling to apply to the MEG gradiometer channels prior to display",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.gradscale     = number, scaling to apply to the MEG gradiometer channels prior to display"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.magscale      = number, scaling to apply to the MEG magnetometer channels prior to display",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.magscale      = number, scaling to apply to the MEG magnetometer channels prior to display"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel       = Nx1 cell-array with selection of channels (default = 'all'), see FT_CHANNELSELECTION for details",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel       = Nx1 cell-array with selection of channels (default = 'all'), see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.refchannel    = name of reference channel for visualising connectivity, can be 'gui'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.refchannel    = name of reference channel for visualising connectivity, can be 'gui'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.baseline      = 'yes', 'no' or [time1 time2] (default = 'no'), see FT_TIMELOCKBASELINE or FT_FREQBASELINE",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.baseline      = 'yes', 'no' or [time1 time2] (default = 'no'), see FT_TIMELOCKBASELINE or FT_FREQBASELINE"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trials        = 'all' or a selection given as a 1xN vector (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trials        = 'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.axes          = string, 'yes' or 'no' whether to draw x- and y-axes for each graph (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.axes          = string, 'yes' or 'no' whether to draw x- and y-axes for each graph (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.box           = string, 'yes' or 'no' whether to draw a box around each graph (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.box           = string, 'yes' or 'no' whether to draw a box around each graph (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.showlabels    = 'yes' or 'no' (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.showlabels    = 'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.showoutline   = 'yes' or 'no' (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.showoutline   = 'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.showscale     = 'yes' or 'no' (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.showscale     = 'yes' or 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.showcomment   = 'yes' or 'no' (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.showcomment   = 'yes' or 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.comment       = string of text (default = date + limits)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.comment       = string of text (default = date + limits)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.limittext     = add user-defined text instead of cfg.comment, (default = cfg.comment)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.limittext     = add user-defined text instead of cfg.comment, (default = cfg.comment)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fontsize      = font size of comment and labels (default = 8)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fontsize      = font size of comment and labels (default = 8)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.interactive   = 'yes' or 'no', make the plot interactive (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.interactive   = 'yes' or 'no', make the plot interactive (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.renderer      = 'painters', 'zbuffer', ' opengl' or 'none' (default = [])",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.renderer      = 'painters', 'zbuffer', ' opengl' or 'none' (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.linestyle     = linestyle\/marker type, see options of the PLOT function (default = '-')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.linestyle     = linestyle\/marker type, see options of the PLOT function (default = '-')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.linewidth     = linewidth in points (default = 0.5)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.linewidth     = linewidth in points (default = 0.5)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.graphcolor    = color(s) used for plotting the dataset(s) (default = 'brgkywrgbkywrgbkywrgbkyw')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.graphcolor    = color(s) used for plotting the dataset(s) (default = 'brgkywrgbkywrgbkywrgbkyw')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.directionality = '', 'inflow' or 'outflow' specifies for connectivity measures whether the",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.directionality = '', 'inflow' or 'outflow' specifies for connectivity measures whether the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.layout        = specify the channel layout for plotting using one of the supported ways (see below).",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.layout        = specify the channel layout for plotting using one of the supported ways (see below)."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_multiplotTFR",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.inputfile   =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_multiplotTFR.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.parameter        = field to be represented as color (default depends on data.dimord)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.parameter        = field to be represented as color (default depends on data.dimord)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.maskparameter    = field in the data to be used for masking of data, can be logical (e.g. significant data points) or numerical (e.g. t-values).",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.maskparameter    = field in the data to be used for masking of data, can be logical (e.g. significant data points) or numerical (e.g. t-values)."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.maskstyle        = style used to masking, 'opacity', 'saturation', or 'outline' (default = 'opacity')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.maskstyle        = style used to masking, 'opacity', 'saturation', or 'outline' (default = 'opacity')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.maskalpha        = alpha value between 0 (transparent) and 1 (opaque) used for masking areas dictated by cfg.maskparameter (default = 1)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.maskalpha        = alpha value between 0 (transparent) and 1 (opaque) used for masking areas dictated by cfg.maskparameter (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.masknans         = 'yes' or 'no' (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.masknans         = 'yes' or 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.xlim             = 'maxmin' or [xmin xmax] (default = 'maxmin')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.xlim             = 'maxmin' or [xmin xmax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.ylim             = 'maxmin' or [ymin ymax] (default = 'maxmin')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.ylim             = 'maxmin' or [ymin ymax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.zlim             = plotting limits for color dimension, 'maxmin', 'maxabs', 'zeromax', 'minzero', or [zmin zmax] (default = 'maxmin')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.zlim             = plotting limits for color dimension, 'maxmin', 'maxabs', 'zeromax', 'minzero', or [zmin zmax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.gradscale        = number, scaling to apply to the MEG gradiometer channels prior to display",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.gradscale        = number, scaling to apply to the MEG gradiometer channels prior to display"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.magscale         = number, scaling to apply to the MEG magnetometer channels prior to display",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.magscale         = number, scaling to apply to the MEG magnetometer channels prior to display"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel          = Nx1 cell-array with selection of channels (default = 'all'), see FT_CHANNELSELECTION for details",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel          = Nx1 cell-array with selection of channels (default = 'all'), see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.refchannel       = name of reference channel for visualising connectivity, can be 'gui'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.refchannel       = name of reference channel for visualising connectivity, can be 'gui'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.baseline         = 'yes', 'no' or [time1 time2] (default = 'no'), see FT_FREQBASELINE",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.baseline         = 'yes', 'no' or [time1 time2] (default = 'no'), see FT_FREQBASELINE"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.baselinetype     = 'absolute', 'relative', 'relchange', 'normchange', 'db' or 'zscore' (default = 'absolute')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.baselinetype     = 'absolute', 'relative', 'relchange', 'normchange', 'db' or 'zscore' (default = 'absolute')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trials           = 'all' or a selection given as a 1xN vector (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trials           = 'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.box              = 'yes', 'no' (default = 'no' if maskparameter given default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.box              = 'yes', 'no' (default = 'no' if maskparameter given default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.hotkeys          = enables hotkeys (up\/down arrows) for dynamic colorbar adjustment",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.hotkeys          = enables hotkeys (up\/down arrows) for dynamic colorbar adjustment"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.colorbar         = 'yes', 'no' (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.colorbar         = 'yes', 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.colorbartext     =  string indicating the text next to colorbar",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.colorbartext     =  string indicating the text next to colorbar"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.colormap         = any sized colormap, see COLORMAP",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.colormap         = any sized colormap, see COLORMAP"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.showlabels       = 'yes', 'no' (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.showlabels       = 'yes', 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.showoutline      = 'yes', 'no' (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.showoutline      = 'yes', 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.showscale        = 'yes', 'no' (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.showscale        = 'yes', 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.showcomment      = 'yes', 'no' (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.showcomment      = 'yes', 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.comment          = string of text (default = date + limits)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.comment          = string of text (default = date + limits)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.limittext        = add user-defined text instead of cfg.comment, (default = cfg.comment)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.limittext        = add user-defined text instead of cfg.comment, (default = cfg.comment)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fontsize         = font size of comment and labels (if present) (default = 8)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fontsize         = font size of comment and labels (if present) (default = 8)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fontweight       = font weight of comment and labels (if present)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fontweight       = font weight of comment and labels (if present)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.interactive      = Interactive plot 'yes' or 'no' (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.interactive      = Interactive plot 'yes' or 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.renderer         = 'painters', 'zbuffer', ' opengl' or 'none' (default = [])",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.renderer         = 'painters', 'zbuffer', ' opengl' or 'none' (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.directionality   = '', 'inflow' or 'outflow' specifies for",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.directionality   = '', 'inflow' or 'outflow' specifies for"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.layout           = specify the channel layout for plotting using one of",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.layout           = specify the channel layout for plotting using one of"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_mvaranalysis",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.output      = 'parameters', 'model', 'residual'. If 'parameters' is"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_mvaranalysis.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method     = the name of the toolbox containing the function for the",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method     = the name of the toolbox containing the function for the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.mvarmethod = scalar (only required when cfg.method = 'biosig').",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.mvarmethod = scalar (only required when cfg.method = 'biosig')."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.order      = scalar, order of the autoregressive model (default=10)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.order      = scalar, order of the autoregressive model (default=10)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel    = 'all' (default) or list of channels for which an mvar model",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel    = 'all' (default) or list of channels for which an mvar model"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channelcmb = specify channel combinations as a",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channelcmb = specify channel combinations as a"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.keeptrials = 'no' (default) or 'yes' specifies whether the coefficients",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.keeptrials = 'no' (default) or 'yes' specifies whether the coefficients"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.jackknife  = 'no' (default) or 'yes' specifies whether the coefficients",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.jackknife  = 'no' (default) or 'yes' specifies whether the coefficients"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.zscore     = 'no' (default) or 'yes' specifies whether the channel data",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.zscore     = 'no' (default) or 'yes' specifies whether the channel data"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.demean     = 'yes' (default) or 'no' explicit removal of DC-offset",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.demean     = 'yes' (default) or 'no' explicit removal of DC-offset"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.ems        = 'no' (default) or 'yes' explicit removal ensemble mean",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.ems        = 'no' (default) or 'yes' explicit removal ensemble mean"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.t_ftimwin = the width of the sliding window on which the coefficients",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.t_ftimwin = the width of the sliding window on which the coefficients"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.toi       = [t1 t2 ... tx] the time points at which the windows are",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.toi       = [t1 t2 ... tx] the time points at which the windows are"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.keeptapers",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.keeptapers"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.taper",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.taper"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.output      = 'parameters', 'model', 'residual'. If 'parameters' is",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.output      = 'parameters', 'model', 'residual'. If 'parameters' is"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_neighbourplot",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.opto          = structure with gradiometer definition or filename, see FT_READ_SENS"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_neighbourplot.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.verbose       = string, 'yes' or 'no', whether the function will print feedback text in the command window",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.verbose       = string, 'yes' or 'no', whether the function will print feedback text in the command window"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.neighbours    = neighbourhood structure, see FT_PREPARE_NEIGHBOURS (optional)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.neighbours    = neighbourhood structure, see FT_PREPARE_NEIGHBOURS (optional)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.visible       = string, 'on' or 'off', whether figure will be visible (default = 'on')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.visible       = string, 'on' or 'off', whether figure will be visible (default = 'on')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.enableedit    = string, 'yes' or 'no', allows you to interactively add or remove edges between vertices (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.enableedit    = string, 'yes' or 'no', allows you to interactively add or remove edges between vertices (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.layout        = filename of the layout, see FT_PREPARE_LAYOUT",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.layout        = filename of the layout, see FT_PREPARE_LAYOUT"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.elec          = structure with electrode positions or filename, see FT_READ_SENS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.elec          = structure with electrode positions or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.grad          = structure with gradiometer definition or filename, see FT_READ_SENS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.grad          = structure with gradiometer definition or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.opto          = structure with gradiometer definition or filename, see FT_READ_SENS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.opto          = structure with gradiometer definition or filename, see FT_READ_SENS"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_networkanalysis",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.inputfile   =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_networkanalysis.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method    = string, specifying the graph measure that will be",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method    = string, specifying the graph measure that will be"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.parameter = string specifying the bivariate parameter in the data",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.parameter = string specifying the bivariate parameter in the data"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_prepare_headmodel",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.submethod         (optional)"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_prepare_headmodel.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method         string that specifies the forward solution, see below",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method         string that specifies the forward solution, see below"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.conductivity   a number or a vector containing the conductivities of the compartments",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.conductivity   a number or a vector containing the conductivities of the compartments"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.tissue         a string or integer, to be used in combination with a 'seg' for the",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.tissue         a string or integer, to be used in combination with a 'seg' for the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.tissue            see above; in combination with 'seg' input",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.tissue            see above; in combination with 'seg' input"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.isolatedsource    (optional)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.isolatedsource    (optional)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.tissue            see above; in combination with 'seg' input",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.tissue            see above; in combination with 'seg' input"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.order             (optional)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.order             (optional)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fitind            (optional)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fitind            (optional)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.grad",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.grad"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.tissue            see above; in combination with 'seg' input; default options are 'brain' or 'scalp'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.tissue            see above; in combination with 'seg' input; default options are 'brain' or 'scalp'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.feedback          (optional)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.feedback          (optional)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.radius            (optional)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.radius            (optional)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.maxradius         (optional)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.maxradius         (optional)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.baseline          (optional)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.baseline          (optional)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.conductivity",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.conductivity"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.tissue            see above; in combination with 'seg' input; default options are 'brain' or 'scalp'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.tissue            see above; in combination with 'seg' input; default options are 'brain' or 'scalp'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.order             (optional)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.order             (optional)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.tissue            see above; in combination with 'seg' input; default options are 'brain' or 'scalp'; must be only 1 value",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.tissue            see above; in combination with 'seg' input; default options are 'brain' or 'scalp'; must be only 1 value"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headmodel         (required) string, filename of precomputed FEM leadfield",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headmodel         (required) string, filename of precomputed FEM leadfield"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.elec              (required) structure with electrode positions or filename, see FT_READ_SENS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.elec              (required) structure with electrode positions or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile        (required) string, filename prefix for the output files",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile        (required) string, filename prefix for the output files"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.tissue",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.tissue"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.tissueval",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.tissueval"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.conductivity",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.conductivity"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.elec",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.elec"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.grad",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.grad"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.transform",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.transform"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.unit",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.unit"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.point",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.point"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.submethod         (optional)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.submethod         (optional)"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_prepare_layout",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.style       string, '2d' or '3d' (default = '2d')"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_prepare_layout.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.layout      = filename containg the input layout (*.mat or *.lay file), this can also be a layout",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.layout      = filename containg the input layout (*.mat or *.lay file), this can also be a layout"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.output      = filename (ending in .mat or .lay) to which the layout will be written (default = [])",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.output      = filename (ending in .mat or .lay) to which the layout will be written (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.elec        = structure with electrode positions or filename, see FT_READ_SENS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.elec        = structure with electrode positions or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.grad        = structure with gradiometer definition or filename, see FT_READ_SENS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.grad        = structure with gradiometer definition or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.opto        = sstructure with optode definition or filename, see FT_READ_SENS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.opto        = sstructure with optode definition or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.rotate      = number, rotation around the z-axis in degrees (default = [], which means automatic)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.rotate      = number, rotation around the z-axis in degrees (default = [], which means automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.center      = string, center and scale the electrodes in the sphere that represents the head, can be 'yes' or 'no' (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.center      = string, center and scale the electrodes in the sphere that represents the head, can be 'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.projection  = string, 2D projection method can be 'stereographic', 'orthographic', 'polar' or 'gnomic' (default = 'polar')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.projection  = string, 2D projection method can be 'stereographic', 'orthographic', 'polar' or 'gnomic' (default = 'polar')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.viewpoint   = string indicating the view point that is used for orthographic projection of 3-D sensor",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.viewpoint   = string indicating the view point that is used for orthographic projection of 3-D sensor"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outline     = string, how to create the outline, can be 'circle', 'square', 'convex', 'headshape', 'mri' or 'no' (default is automatic)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outline     = string, how to create the outline, can be 'circle', 'square', 'convex', 'headshape', 'mri' or 'no' (default is automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.mask        = string, how to create the mask, can be 'circle', 'square', 'convex', 'headshape', 'mri' or 'no' (default is automatic)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.mask        = string, how to create the mask, can be 'circle', 'square', 'convex', 'headshape', 'mri' or 'no' (default is automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headshape   = surface mesh (e.g. pial, head, etc) to be used for generating an outline, see FT_READ_HEADSHAPE for details",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headshape   = surface mesh (e.g. pial, head, etc) to be used for generating an outline, see FT_READ_HEADSHAPE for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.mri         = segmented anatomical MRI to be used for generating an outline, see FT_READ_MRI and FT_VOLUMESEGMENT for details",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.mri         = segmented anatomical MRI to be used for generating an outline, see FT_READ_MRI and FT_VOLUMESEGMENT for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.montage     = 'no' or a montage structure (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.montage     = 'no' or a montage structure (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.image       = filename, use an image to construct a layout (e.g. useful for ECoG grids)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.image       = filename, use an image to construct a layout (e.g. useful for ECoG grids)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.bw          = 'yes' or 'no', if an image is used and this option is true, the image is transformed in black and white (default = 'no', i.e. do not transform)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.bw          = 'yes' or 'no', if an image is used and this option is true, the image is transformed in black and white (default = 'no', i.e. do not transform)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.overlap     = string, how to deal with overlapping channels when the layout is constructed from a sensor configuration structure. This can be",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.overlap     = string, how to deal with overlapping channels when the layout is constructed from a sensor configuration structure. This can be"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel     = 'all', or Nx1 cell-array with selection of channels, see FT_CHANNELSELECTION for details",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel     = 'all', or Nx1 cell-array with selection of channels, see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.boxchannel  = 'all', or Nx1 cell-array with selection of channels, see FT_CHANNELSELECTION for details",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.boxchannel  = 'all', or Nx1 cell-array with selection of channels, see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.skipscale   = 'yes' or 'no', whether the scale should be included in the layout or not (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.skipscale   = 'yes' or 'no', whether the scale should be included in the layout or not (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.skipcomnt   = 'yes' or 'no', whether the comment should be included in the layout or not (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.skipcomnt   = 'yes' or 'no', whether the comment should be included in the layout or not (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.layout = 'ordered'    will give you a NxN ordered layout",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.layout = 'ordered'    will give you a NxN ordered layout"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.layout = 'vertical'   will give you a Nx1 ordered layout",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.layout = 'vertical'   will give you a Nx1 ordered layout"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.layout = 'horizontal' will give you a 1xN ordered layout",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.layout = 'horizontal' will give you a 1xN ordered layout"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.layout = 'butterfly'  will give you a layout with all channels on top of each other",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.layout = 'butterfly'  will give you a layout with all channels on top of each other"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.layout = 'circular'   will distribute the channels on a circle",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.layout = 'circular'   will distribute the channels on a circle"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.width  = scalar (default is automatic)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.width  = scalar (default is automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.height = scalar (default is automatic)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.height = scalar (default is automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.direction = string, can be any of 'LR', 'RL' (for horizontal), 'TB', 'BT' (for vertical)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.direction = string, can be any of 'LR', 'RL' (for horizontal), 'TB', 'BT' (for vertical)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.rows      = number of rows (default is automatic)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.rows      = number of rows (default is automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.columns   = number of columns (default is automatic)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.columns   = number of columns (default is automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.direction = string, can be any of 'LRTB', 'RLTB', 'LRBT', 'RLBT', 'TBLR', 'TBRL', 'BTLR', 'BTRL' (default = 'LRTB')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.direction = string, can be any of 'LRTB', 'RLTB', 'LRBT', 'RLBT', 'TBLR', 'TBRL', 'BTLR', 'BTRL' (default = 'LRTB')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.style       string, '2d' or '3d' (default = '2d')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.style       string, '2d' or '3d' (default = '2d')"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_prepare_leadfield",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.inputfile   =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_prepare_leadfield.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel            = Nx1 cell-array with selection of channels (default = 'all'),",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel            = Nx1 cell-array with selection of channels (default = 'all'),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.sourcemodel.xgrid      = vector (e.g. -20:1:20) or 'auto' (default = 'auto')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.sourcemodel.xgrid      = vector (e.g. -20:1:20) or 'auto' (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.sourcemodel.ygrid      = vector (e.g. -20:1:20) or 'auto' (default = 'auto')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.sourcemodel.ygrid      = vector (e.g. -20:1:20) or 'auto' (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.sourcemodel.zgrid      = vector (e.g.   0:1:20) or 'auto' (default = 'auto')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.sourcemodel.zgrid      = vector (e.g.   0:1:20) or 'auto' (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.sourcemodel.resolution = number (e.g. 1 cm) for automatic sourcemodel generation",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.sourcemodel.resolution = number (e.g. 1 cm) for automatic sourcemodel generation"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.sourcemodel.pos        = N*3 matrix with position of each source",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.sourcemodel.pos        = N*3 matrix with position of each source"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.sourcemodel.inside     = N*1 vector with boolean value whether sourcemodel point is inside brain (optional)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.sourcemodel.inside     = N*1 vector with boolean value whether sourcemodel point is inside brain (optional)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.sourcemodel.dim        = [Nx Ny Nz] vector with dimensions in case of 3-D sourcemodel (optional)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.sourcemodel.dim        = [Nx Ny Nz] vector with dimensions in case of 3-D sourcemodel (optional)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headmodel     = structure with volume conduction model, see FT_PREPARE_HEADMODEL",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headmodel     = structure with volume conduction model, see FT_PREPARE_HEADMODEL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.elec          = structure with electrode positions or filename, see FT_READ_SENS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.elec          = structure with electrode positions or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.grad          = structure with gradiometer definition or filename, see FT_READ_SENS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.grad          = structure with gradiometer definition or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.reducerank      = 'no', or number (default = 3 for EEG, 2 for MEG)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.reducerank      = 'no', or number (default = 3 for EEG, 2 for MEG)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.normalize       = 'yes' or 'no' (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.normalize       = 'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.normalizeparam  = depth normalization parameter (default = 0.5)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.normalizeparam  = depth normalization parameter (default = 0.5)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.backproject     = 'yes' or 'no' (default = 'yes') determines when reducerank is applied",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.backproject     = 'yes' or 'no' (default = 'yes') determines when reducerank is applied"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.openmeeg.batchsize    = scalar (default 100e3), number of dipoles",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.openmeeg.batchsize    = scalar (default 100e3), number of dipoles"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.openmeeg.dsm          = 'no'\/'yes', reuse existing DSM if provided",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.openmeeg.dsm          = 'no'\/'yes', reuse existing DSM if provided"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.openmeeg.keepdsm      = 'no'\/'yes', option to retain DSM (no by default)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.openmeeg.keepdsm      = 'no'\/'yes', option to retain DSM (no by default)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.openmeeg.nonadaptive  = 'no'\/'yes'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.openmeeg.nonadaptive  = 'no'\/'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.singleshell.batchsize = scalar or 'all' (default 1), number of dipoles",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.singleshell.batchsize = scalar or 'all' (default 1), number of dipoles"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_prepare_mesh",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.method = {'singlesphere' 'concentricspheres' 'localspheres'}"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_prepare_mesh.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method      = string, can be 'interactive', 'projectmesh', 'iso2mesh', 'isosurface',",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method      = string, can be 'interactive', 'projectmesh', 'iso2mesh', 'isosurface',"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.tissue      = cell-array with tissue types or numeric vector with integer values",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.tissue      = cell-array with tissue types or numeric vector with integer values"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.numvertices = numeric vector, should have same number of elements as cfg.tissue",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.numvertices = numeric vector, should have same number of elements as cfg.tissue"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.downsample  = integer number (default = 1, i.e. no downsampling), see FT_VOLUMEDOWNSAMPLE",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.downsample  = integer number (default = 1, i.e. no downsampling), see FT_VOLUMEDOWNSAMPLE"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.spmversion  = string, 'spm2', 'spm8', 'spm12' (default = 'spm8')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.spmversion  = string, 'spm2', 'spm8', 'spm12' (default = 'spm8')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headshape   = a filename containing headshape, a Nx3 matrix with surface",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headshape   = a filename containing headshape, a Nx3 matrix with surface"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headshape   = string, filename containing the pial surface computed by freesurfer recon-all",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headshape   = string, filename containing the pial surface computed by freesurfer recon-all"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headshape   = a filename containing headshape",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headshape   = a filename containing headshape"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.template    = a filename containing headshape",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.template    = a filename containing headshape"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.output      = {'scalp', 'skull', 'brain'};",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.output      = {'scalp', 'skull', 'brain'};"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.tissue      = {'scalp', 'skull', 'brain'};",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.tissue      = {'scalp', 'skull', 'brain'};"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.numvertices = [800, 1600, 2400];",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.numvertices = [800, 1600, 2400];"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method      = 'cortexhull';",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method      = 'cortexhull';"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headshape   = '\/path\/to\/surf\/lh.pial';",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headshape   = '\/path\/to\/surf\/lh.pial';"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fshome      = '\/path\/to\/freesurfer dir';",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fshome      = '\/path\/to\/freesurfer dir';"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headmodel     = structure with volume conduction model, see FT_PREPARE_HEADMODEL",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headmodel     = structure with volume conduction model, see FT_PREPARE_HEADMODEL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headshape     = name of file containing the volume conduction model, see FT_READ_HEADMODEL",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headshape     = name of file containing the volume conduction model, see FT_READ_HEADMODEL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method = {'singlesphere' 'concentricspheres' 'localspheres'}",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method = {'singlesphere' 'concentricspheres' 'localspheres'}"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_prepare_montage",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.refchannel    = cell-array with new EEG reference channel(s), this can be 'all' for a common average reference"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_prepare_montage.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.refmethod     = 'avg', 'bioloar', 'comp' (default = 'avg')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.refmethod     = 'avg', 'bioloar', 'comp' (default = 'avg')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.implicitref   = string with the label of the implicit reference, or empty (default = [])",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.implicitref   = string with the label of the implicit reference, or empty (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.refchannel    = cell-array with new EEG reference channel(s), this can be 'all' for a common average reference",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.refchannel    = cell-array with new EEG reference channel(s), this can be 'all' for a common average reference"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_prepare_neighbours",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.layout        = filename of the layout, see FT_PREPARE_LAYOUT"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_prepare_neighbours.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method        = 'distance', 'triangulation' or 'template'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method        = 'distance', 'triangulation' or 'template'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.template      = name of the template file, e.g. CTF275_neighb.mat",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.template      = name of the template file, e.g. CTF275_neighb.mat"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.neighbourdist = number, maximum distance between neighbouring sensors (only for 'distance')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.neighbourdist = number, maximum distance between neighbouring sensors (only for 'distance')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel       = channels for which neighbours should be found",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel       = channels for which neighbours should be found"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.feedback      = 'yes' or 'no' (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.feedback      = 'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.elec          = structure with electrode positions or filename, see FT_READ_SENS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.elec          = structure with electrode positions or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.grad          = structure with gradiometer definition or filename, see FT_READ_SENS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.grad          = structure with gradiometer definition or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.layout        = filename of the layout, see FT_PREPARE_LAYOUT",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.layout        = filename of the layout, see FT_PREPARE_LAYOUT"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_prepare_sourcemodel",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.spmversion    = string, 'spm2', 'spm8', 'spm12' (default = 'spm8')"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_prepare_sourcemodel.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.xgrid      = vector (e.g. -20:1:20) or 'auto' (default = 'auto')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.xgrid      = vector (e.g. -20:1:20) or 'auto' (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.ygrid      = vector (e.g. -20:1:20) or 'auto' (default = 'auto')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.ygrid      = vector (e.g. -20:1:20) or 'auto' (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.zgrid      = vector (e.g.   0:1:20) or 'auto' (default = 'auto')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.zgrid      = vector (e.g.   0:1:20) or 'auto' (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.resolution = number (e.g. 1 cm) for automatic grid generation",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.resolution = number (e.g. 1 cm) for automatic grid generation"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.sourcemodel.pos        = N*3 matrix with position of each source",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.sourcemodel.pos        = N*3 matrix with position of each source"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.sourcemodel.inside     = N*1 vector with boolean value whether position is inside brain (optional)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.sourcemodel.inside     = N*1 vector with boolean value whether position is inside brain (optional)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.sourcemodel.dim        = [Nx Ny Nz] vector with dimensions in case of 3D grid (optional)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.sourcemodel.dim        = [Nx Ny Nz] vector with dimensions in case of 3D grid (optional)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.sourcemodel.leadfield",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.sourcemodel.leadfield"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.sourcemodel.filter",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.sourcemodel.filter"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.sourcemodel.subspace",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.sourcemodel.subspace"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.sourcemodel.lbex",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.sourcemodel.lbex"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.mri        = structure with anatomical MRI model or filename, see FT_READ_MRI",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.mri        = structure with anatomical MRI model or filename, see FT_READ_MRI"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.warpmni    = 'yes'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.warpmni    = 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.resolution = number (e.g. 6) of the resolution of the",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.resolution = number (e.g. 6) of the resolution of the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.template   = specification of a template grid (grid structure), or a",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.template   = specification of a template grid (grid structure), or a"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.nonlinear  = 'no' (or 'yes'), use non-linear normalization",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.nonlinear  = 'no' (or 'yes'), use non-linear normalization"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.mri           = can be filename, MRI structure or segmented MRI structure",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.mri           = can be filename, MRI structure or segmented MRI structure"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.threshold     = 0.1, relative to the maximum value in the segmentation",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.threshold     = 0.1, relative to the maximum value in the segmentation"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.smooth        = 5, smoothing in voxels",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.smooth        = 5, smoothing in voxels"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headshape     = string, should be a *.fif file",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headshape     = string, should be a *.fif file"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.elec          = structure with electrode positions or filename, see FT_READ_SENS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.elec          = structure with electrode positions or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.grad          = structure with gradiometer definition or filename, see FT_READ_SENS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.grad          = structure with gradiometer definition or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headmodel     = structure with volume conduction model or filename, see FT_PREPARE_HEADMODEL",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headmodel     = structure with volume conduction model or filename, see FT_PREPARE_HEADMODEL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.unit          = string, can be 'mm', 'cm', 'm' (default is automatic)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.unit          = string, can be 'mm', 'cm', 'm' (default is automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.tight         = 'yes' or 'no' (default is automatic)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.tight         = 'yes' or 'no' (default is automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inwardshift   = number, how much should the innermost surface be moved inward to constrain",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inwardshift   = number, how much should the innermost surface be moved inward to constrain"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.moveinward    = number, move dipoles inward to ensure a certain distance to the innermost",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.moveinward    = number, move dipoles inward to ensure a certain distance to the innermost"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.spherify      = 'yes' or 'no', scale the source model so that it fits inside a sperical",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.spherify      = 'yes' or 'no', scale the source model so that it fits inside a sperical"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.symmetry      = 'x', 'y' or 'z' symmetry for two dipoles, can be empty (default = [])",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.symmetry      = 'x', 'y' or 'z' symmetry for two dipoles, can be empty (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headshape     = a filename for the headshape, a structure containing a single surface,",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headshape     = a filename for the headshape, a structure containing a single surface,"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.spmversion    = string, 'spm2', 'spm8', 'spm12' (default = 'spm8')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.spmversion    = string, 'spm2', 'spm8', 'spm12' (default = 'spm8')"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_preprocessing",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.export.dataformat = string describing the output file format, see FT_WRITE_DATA"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_preprocessing.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dataset      = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dataset      = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trl          = Nx3 matrix with the trial definition, see FT_DEFINETRIAL",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trl          = Nx3 matrix with the trial definition, see FT_DEFINETRIAL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.padding      = length (in seconds) to which the trials are padded for filtering (default = 0)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.padding      = length (in seconds) to which the trials are padded for filtering (default = 0)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.padtype      = string, type of padding (default: 'data' padding or",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.padtype      = string, type of padding (default: 'data' padding or"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.continuous   = 'yes' or 'no' whether the file contains continuous data",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.continuous   = 'yes' or 'no' whether the file contains continuous data"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.datafile     = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.datafile     = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headerfile   = string with the filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headerfile   = string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel      = Nx1 cell-array with selection of channels (default = 'all'),",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel      = Nx1 cell-array with selection of channels (default = 'all'),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.chantype     = string or Nx1 cell-array with channel types to be read (only for NeuroOmega)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.chantype     = string or Nx1 cell-array with channel types to be read (only for NeuroOmega)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.lpfilter      = 'no' or 'yes'  lowpass filter (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.lpfilter      = 'no' or 'yes'  lowpass filter (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.hpfilter      = 'no' or 'yes'  highpass filter (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.hpfilter      = 'no' or 'yes'  highpass filter (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.bpfilter      = 'no' or 'yes'  bandpass filter (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.bpfilter      = 'no' or 'yes'  bandpass filter (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.bsfilter      = 'no' or 'yes'  bandstop filter (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.bsfilter      = 'no' or 'yes'  bandstop filter (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dftfilter     = 'no' or 'yes'  line noise removal using discrete fourier transform (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dftfilter     = 'no' or 'yes'  line noise removal using discrete fourier transform (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.medianfilter  = 'no' or 'yes'  jump preserving median filter (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.medianfilter  = 'no' or 'yes'  jump preserving median filter (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.lpfreq        = lowpass  frequency in Hz",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.lpfreq        = lowpass  frequency in Hz"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.hpfreq        = highpass frequency in Hz",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.hpfreq        = highpass frequency in Hz"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.bpfreq        = bandpass frequency range, specified as [lowFreq highFreq] in Hz",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.bpfreq        = bandpass frequency range, specified as [lowFreq highFreq] in Hz"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.bsfreq        = bandstop frequency range, specified as [low high] in Hz (or as Nx2 matrix for notch filter)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.bsfreq        = bandstop frequency range, specified as [low high] in Hz (or as Nx2 matrix for notch filter)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dftfreq       = line noise frequencies in Hz for DFT filter (default = [50 100 150])",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dftfreq       = line noise frequencies in Hz for DFT filter (default = [50 100 150])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.lpfiltord     = lowpass  filter order (default set in low-level function)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.lpfiltord     = lowpass  filter order (default set in low-level function)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.hpfiltord     = highpass filter order (default set in low-level function)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.hpfiltord     = highpass filter order (default set in low-level function)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.bpfiltord     = bandpass filter order (default set in low-level function)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.bpfiltord     = bandpass filter order (default set in low-level function)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.bsfiltord     = bandstop filter order (default set in low-level function)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.bsfiltord     = bandstop filter order (default set in low-level function)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.lpfilttype    = digital filter type, 'but' or 'firws' or 'fir' or 'firls' (default = 'but')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.lpfilttype    = digital filter type, 'but' or 'firws' or 'fir' or 'firls' (default = 'but')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.hpfilttype    = digital filter type, 'but' or 'firws' or 'fir' or 'firls' (default = 'but')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.hpfilttype    = digital filter type, 'but' or 'firws' or 'fir' or 'firls' (default = 'but')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.bpfilttype    = digital filter type, 'but' or 'firws' or 'fir' or 'firls' (default = 'but')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.bpfilttype    = digital filter type, 'but' or 'firws' or 'fir' or 'firls' (default = 'but')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.bsfilttype    = digital filter type, 'but' or 'firws' or 'fir' or 'firls' (default = 'but')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.bsfilttype    = digital filter type, 'but' or 'firws' or 'fir' or 'firls' (default = 'but')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.lpfiltdir     = filter direction, 'twopass' (default), 'onepass' or 'onepass-reverse' or 'onepass-zerophase' (default for firws) or 'onepass-minphase' (firws, non-linear!)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.lpfiltdir     = filter direction, 'twopass' (default), 'onepass' or 'onepass-reverse' or 'onepass-zerophase' (default for firws) or 'onepass-minphase' (firws, non-linear!)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.hpfiltdir     = filter direction, 'twopass' (default), 'onepass' or 'onepass-reverse' or 'onepass-zerophase' (default for firws) or 'onepass-minphase' (firws, non-linear!)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.hpfiltdir     = filter direction, 'twopass' (default), 'onepass' or 'onepass-reverse' or 'onepass-zerophase' (default for firws) or 'onepass-minphase' (firws, non-linear!)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.bpfiltdir     = filter direction, 'twopass' (default), 'onepass' or 'onepass-reverse' or 'onepass-zerophase' (default for firws) or 'onepass-minphase' (firws, non-linear!)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.bpfiltdir     = filter direction, 'twopass' (default), 'onepass' or 'onepass-reverse' or 'onepass-zerophase' (default for firws) or 'onepass-minphase' (firws, non-linear!)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.bsfiltdir     = filter direction, 'twopass' (default), 'onepass' or 'onepass-reverse' or 'onepass-zerophase' (default for firws) or 'onepass-minphase' (firws, non-linear!)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.bsfiltdir     = filter direction, 'twopass' (default), 'onepass' or 'onepass-reverse' or 'onepass-zerophase' (default for firws) or 'onepass-minphase' (firws, non-linear!)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.lpinstabilityfix = deal with filter instability, 'no', 'reduce', 'split' (default  = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.lpinstabilityfix = deal with filter instability, 'no', 'reduce', 'split' (default  = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.hpinstabilityfix = deal with filter instability, 'no', 'reduce', 'split' (default  = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.hpinstabilityfix = deal with filter instability, 'no', 'reduce', 'split' (default  = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.bpinstabilityfix = deal with filter instability, 'no', 'reduce', 'split' (default  = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.bpinstabilityfix = deal with filter instability, 'no', 'reduce', 'split' (default  = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.bsinstabilityfix = deal with filter instability, 'no', 'reduce', 'split' (default  = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.bsinstabilityfix = deal with filter instability, 'no', 'reduce', 'split' (default  = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.lpfiltdf      = lowpass transition width (firws, overrides order, default set in low-level function)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.lpfiltdf      = lowpass transition width (firws, overrides order, default set in low-level function)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.hpfiltdf      = highpass transition width (firws, overrides order, default set in low-level function)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.hpfiltdf      = highpass transition width (firws, overrides order, default set in low-level function)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.bpfiltdf      = bandpass transition width (firws, overrides order, default set in low-level function)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.bpfiltdf      = bandpass transition width (firws, overrides order, default set in low-level function)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.bsfiltdf      = bandstop transition width (firws, overrides order, default set in low-level function)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.bsfiltdf      = bandstop transition width (firws, overrides order, default set in low-level function)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.lpfiltwintype = lowpass window type, 'hann' or 'hamming' (default) or 'blackman' or 'kaiser' (firws)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.lpfiltwintype = lowpass window type, 'hann' or 'hamming' (default) or 'blackman' or 'kaiser' (firws)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.hpfiltwintype = highpass window type, 'hann' or 'hamming' (default) or 'blackman' or 'kaiser' (firws)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.hpfiltwintype = highpass window type, 'hann' or 'hamming' (default) or 'blackman' or 'kaiser' (firws)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.bpfiltwintype = bandpass window type, 'hann' or 'hamming' (default) or 'blackman' or 'kaiser' (firws)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.bpfiltwintype = bandpass window type, 'hann' or 'hamming' (default) or 'blackman' or 'kaiser' (firws)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.bsfiltwintype = bandstop window type, 'hann' or 'hamming' (default) or 'blackman' or 'kaiser' (firws)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.bsfiltwintype = bandstop window type, 'hann' or 'hamming' (default) or 'blackman' or 'kaiser' (firws)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.lpfiltdev     = lowpass max passband deviation (firws with 'kaiser' window, default 0.001 set in low-level function)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.lpfiltdev     = lowpass max passband deviation (firws with 'kaiser' window, default 0.001 set in low-level function)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.hpfiltdev     = highpass max passband deviation (firws with 'kaiser' window, default 0.001 set in low-level function)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.hpfiltdev     = highpass max passband deviation (firws with 'kaiser' window, default 0.001 set in low-level function)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.bpfiltdev     = bandpass max passband deviation (firws with 'kaiser' window, default 0.001 set in low-level function)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.bpfiltdev     = bandpass max passband deviation (firws with 'kaiser' window, default 0.001 set in low-level function)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.bsfiltdev     = bandstop max passband deviation (firws with 'kaiser' window, default 0.001 set in low-level function)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.bsfiltdev     = bandstop max passband deviation (firws with 'kaiser' window, default 0.001 set in low-level function)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dftreplace    = 'zero' or 'neighbour', method used to reduce line noise, 'zero' implies DFT filter, 'neighbour' implies spectrum interpolation (default = 'zero')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dftreplace    = 'zero' or 'neighbour', method used to reduce line noise, 'zero' implies DFT filter, 'neighbour' implies spectrum interpolation (default = 'zero')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dftbandwidth  = bandwidth of line noise frequencies, applies to spectrum interpolation, in Hz (default = [1 2 3])",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dftbandwidth  = bandwidth of line noise frequencies, applies to spectrum interpolation, in Hz (default = [1 2 3])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dftneighbourwidth = bandwidth of frequencies neighbouring line noise frequencies, applies to spectrum interpolation, in Hz (default = [2 2 2])",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dftneighbourwidth = bandwidth of frequencies neighbouring line noise frequencies, applies to spectrum interpolation, in Hz (default = [2 2 2])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.plotfiltresp  = 'no' or 'yes', plot filter responses (firws, default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.plotfiltresp  = 'no' or 'yes', plot filter responses (firws, default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.usefftfilt    = 'no' or 'yes', use fftfilt instead of filter (firws, default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.usefftfilt    = 'no' or 'yes', use fftfilt instead of filter (firws, default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.medianfiltord = length of median filter (default = 9)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.medianfiltord = length of median filter (default = 9)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.demean        = 'no' or 'yes', whether to apply baseline correction (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.demean        = 'no' or 'yes', whether to apply baseline correction (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.baselinewindow = [begin end] in seconds, the default is the complete trial (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.baselinewindow = [begin end] in seconds, the default is the complete trial (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.detrend       = 'no' or 'yes', remove linear trend from the data (done per trial) (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.detrend       = 'no' or 'yes', remove linear trend from the data (done per trial) (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.polyremoval   = 'no' or 'yes', remove higher order trend from the data (done per trial) (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.polyremoval   = 'no' or 'yes', remove higher order trend from the data (done per trial) (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.polyorder     = polynome order for poly trend removal (default = 2; note that all lower-order trends will also be removed when using cfg.polyremoval)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.polyorder     = polynome order for poly trend removal (default = 2; note that all lower-order trends will also be removed when using cfg.polyremoval)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.derivative    = 'no' or 'yes', computes the first order derivative of the data (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.derivative    = 'no' or 'yes', computes the first order derivative of the data (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.hilbert       = 'no', 'abs', 'complex', 'real', 'imag', 'absreal', 'absimag' or 'angle' (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.hilbert       = 'no', 'abs', 'complex', 'real', 'imag', 'absreal', 'absimag' or 'angle' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.rectify       = 'no' or 'yes' (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.rectify       = 'no' or 'yes' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.precision     = 'single' or 'double' (default = 'double')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.precision     = 'single' or 'double' (default = 'double')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.absdiff       = 'no' or 'yes', computes absolute derivative (i.e. first derivative then rectify)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.absdiff       = 'no' or 'yes', computes absolute derivative (i.e. first derivative then rectify)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.coordsys      = string, 'head' or 'dewar' (default = 'head')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.coordsys      = string, 'head' or 'dewar' (default = 'head')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.coilaccuracy  = can be empty or a number (0, 1 or 2) to specify the accuracy (default = [])",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.coilaccuracy  = can be empty or a number (0, 1 or 2) to specify the accuracy (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.reref         = 'no' or 'yes' (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.reref         = 'no' or 'yes' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.refchannel    = cell-array with new EEG reference channel(s), this can be 'all' for a common average reference",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.refchannel    = cell-array with new EEG reference channel(s), this can be 'all' for a common average reference"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.refmethod     = 'avg', 'median', or 'bipolar' for bipolar derivation of sequential channels (default = 'avg')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.refmethod     = 'avg', 'median', or 'bipolar' for bipolar derivation of sequential channels (default = 'avg')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.implicitref   = 'label' or empty, add the implicit EEG reference as zeros (default = [])",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.implicitref   = 'label' or empty, add the implicit EEG reference as zeros (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.montage       = 'no' or a montage structure, see FT_APPLY_MONTAGE (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.montage       = 'no' or a montage structure, see FT_APPLY_MONTAGE (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trials        = 'all' or a selection given as a 1xN vector (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trials        = 'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method        = 'trial' or 'channel', read data per trial or per channel (default = 'trial')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method        = 'trial' or 'channel', read data per trial or per channel (default = 'trial')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.export.dataset    = string with the output file name",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.export.dataset    = string with the output file name"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.export.dataformat = string describing the output file format, see FT_WRITE_DATA",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.export.dataformat = string describing the output file format, see FT_WRITE_DATA"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_qualitycheck",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.plotunit  = scalar, the length of time to be plotted in one panel (default = 3600)"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_qualitycheck.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dataset = a string (e.g. 'dataset.ds')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dataset = a string (e.g. 'dataset.ds')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.analyze   = string, 'yes' or 'no' to analyze the dataset (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.analyze   = string, 'yes' or 'no' to analyze the dataset (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.savemat   = string, 'yes' or 'no' to save the analysis (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.savemat   = string, 'yes' or 'no' to save the analysis (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.matfile   = string, filename (e.g. 'previousoutput.mat'), preferably in combination",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.matfile   = string, filename (e.g. 'previousoutput.mat'), preferably in combination"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.visualize = string, 'yes' or 'no' to visualize the analysis (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.visualize = string, 'yes' or 'no' to visualize the analysis (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.saveplot  = string, 'yes' or 'no' to save the visualization (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.saveplot  = string, 'yes' or 'no' to save the visualization (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.linefreq  = scalar, frequency of power line (default = 50)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.linefreq  = scalar, frequency of power line (default = 50)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.plotunit  = scalar, the length of time to be plotted in one panel (default = 3600)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.plotunit  = scalar, the length of time to be plotted in one panel (default = 3600)"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_recodeevent",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.output      = 'event'             the event itself"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_recodeevent.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.eventtype   = empty, 'string' or cell-array with multiple strings",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.eventtype   = empty, 'string' or cell-array with multiple strings"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.eventvalue  = empty or a list of event values (can be numeric or string)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.eventvalue  = empty or a list of event values (can be numeric or string)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.searchrange = 'anywhere'      search anywhere for the event, (default)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.searchrange = 'anywhere'      search anywhere for the event, (default)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.nearestto   = 'trialzero'     compare with time t=0 for each trial (default)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.nearestto   = 'trialzero'     compare with time t=0 for each trial (default)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.match       = 'exact' or 'nearest'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.match       = 'exact' or 'nearest'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.output      = 'event'             the event itself",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.output      = 'event'             the event itself"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_redefinetrial",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_redefinetrial.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trials    = 'all' or a selection given as a 1xN vector (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trials    = 'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.minlength = length in seconds, can be 'maxperlen' (default = [])",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.minlength = length in seconds, can be 'maxperlen' (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.offset    = single number or Nx1 vector, expressed in samples relative to current t=0",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.offset    = single number or Nx1 vector, expressed in samples relative to current t=0"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.toilim    = [tmin tmax] to specify a latency window in seconds, can be Nx2 vector",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.toilim    = [tmin tmax] to specify a latency window in seconds, can be Nx2 vector"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.begsample = single number or Nx1 vector, expressed in samples relative to the start of the input trial",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.begsample = single number or Nx1 vector, expressed in samples relative to the start of the input trial"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.endsample = single number or Nx1 vector, expressed in samples relative to the start of the input trial",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.endsample = single number or Nx1 vector, expressed in samples relative to the start of the input trial"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trl       = Nx3 matrix with the trial definition, see FT_DEFINETRIAL",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trl       = Nx3 matrix with the trial definition, see FT_DEFINETRIAL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.length    = single number (in unit of time, typically seconds) of the required snippets",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.length    = single number (in unit of time, typically seconds) of the required snippets"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.overlap   = single number (between 0 and 1 (exclusive)) specifying the fraction of overlap between snippets (0 = no overlap)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.overlap   = single number (between 0 and 1 (exclusive)) specifying the fraction of overlap between snippets (0 = no overlap)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_regressconfound",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.statistics  = string, 'yes' or 'no', whether to add the statistics"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_regressconfound.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.confound    = matrix, [Ntrials X Nconfounds], may not contain NaNs",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.confound    = matrix, [Ntrials X Nconfounds], may not contain NaNs"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.reject      = vector, [1 X Nconfounds], listing the confounds that",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.reject      = vector, [1 X Nconfounds], listing the confounds that"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.normalize   = string, 'yes' or 'no', normalization to",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.normalize   = string, 'yes' or 'no', normalization to"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.output      = 'residual' (default), 'beta', or 'model'.",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.output      = 'residual' (default), 'beta', or 'model'."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.ftest       = string array, {N X Nconfounds}, to F-test whether",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.ftest       = string array, {N X Nconfounds}, to F-test whether"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.statistics  = string, 'yes' or 'no', whether to add the statistics",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.statistics  = string, 'yes' or 'no', whether to add the statistics"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_rejectartifact",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.inputfile   =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_rejectartifact.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.reject          = 'none', 'partial', 'complete', 'nan', or 'value' (default = 'complete')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.reject          = 'none', 'partial', 'complete', 'nan', or 'value' (default = 'complete')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.minaccepttim    = when using partial rejection, minimum length",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.minaccepttim    = when using partial rejection, minimum length"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.crittoilim      = when using complete rejection, reject trial only when artifacts occur within",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.crittoilim      = when using complete rejection, reject trial only when artifacts occur within"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.feedback        = 'yes' or 'no' (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.feedback        = 'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.invert          = 'yes' or 'no' (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.invert          = 'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.value           = scalar value to replace the data in the artifact segments (default = nan)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.value           = scalar value to replace the data in the artifact segments (default = nan)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.eog.artifact    = Nx2 matrix with artifact segments, this is added to the cfg by using FT_ARTIFACT_EOG",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.eog.artifact    = Nx2 matrix with artifact segments, this is added to the cfg by using FT_ARTIFACT_EOG"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.jump.artifact   = Nx2 matrix with artifact segments, this is added to the cfg by using FT_ARTIFACT_JUMP",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.jump.artifact   = Nx2 matrix with artifact segments, this is added to the cfg by using FT_ARTIFACT_JUMP"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.muscle.artifact = Nx2 matrix with artifact segments, this is added to the cfg by using FT_ARTIFACT_MUSCLE",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.muscle.artifact = Nx2 matrix with artifact segments, this is added to the cfg by using FT_ARTIFACT_MUSCLE"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.zvalue.artifact = Nx2 matrix with artifact segments, this is added to the cfg by using FT_ARTIFACT_ZVALUE",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.zvalue.artifact = Nx2 matrix with artifact segments, this is added to the cfg by using FT_ARTIFACT_ZVALUE"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.visual.artifact = Nx2 matrix with artifact segments, this is added to the cfg by using FT_DATABROWSER",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.visual.artifact = Nx2 matrix with artifact segments, this is added to the cfg by using FT_DATABROWSER"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artfctdef.xxx.artifact    = Nx2 matrix with artifact segments, this could be added by your own artifact detection function",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artfctdef.xxx.artifact    = Nx2 matrix with artifact segments, this could be added by your own artifact detection function"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_rejectcomponent",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_rejectcomponent.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.component  = list of components to remove, e.g. [1 4 7] or see FT_CHANNELSELECTION",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.component  = list of components to remove, e.g. [1 4 7] or see FT_CHANNELSELECTION"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.demean     = 'no' or 'yes', whether to demean the input data (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.demean     = 'no' or 'yes', whether to demean the input data (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.updatesens = 'no' or 'yes' (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.updatesens = 'no' or 'yes' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_rejectvisual",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_rejectvisual.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method      = string, describes how the data should be shown, this can be",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method      = string, describes how the data should be shown, this can be"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel     = Nx1 cell-array with selection of channels (default = 'all'),",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel     = Nx1 cell-array with selection of channels (default = 'all'),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.keepchannel = string, determines how to deal with channels that are not selected, can be",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.keepchannel = string, determines how to deal with channels that are not selected, can be"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.neighbours  = neighbourhood structure, see also FT_PREPARE_NEIGHBOURS (required for repairing channels)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.neighbours  = neighbourhood structure, see also FT_PREPARE_NEIGHBOURS (required for repairing channels)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trials      = 'all' or a selection given as a 1xN vector (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trials      = 'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.keeptrial   = string, determines how to deal with trials that are",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.keeptrial   = string, determines how to deal with trials that are"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.metric      = string, describes the metric that should be computed in summary mode",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.metric      = string, describes the metric that should be computed in summary mode"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.latency     = [begin end] in seconds, or 'all', 'minperiod', 'maxperiod',",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.latency     = [begin end] in seconds, or 'all', 'minperiod', 'maxperiod',"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.alim        = value that determines the amplitude scaling for the",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.alim        = value that determines the amplitude scaling for the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.eegscale    = number, scaling to apply to the EEG channels prior to display",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.eegscale    = number, scaling to apply to the EEG channels prior to display"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.eogscale    = number, scaling to apply to the EOG channels prior to display",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.eogscale    = number, scaling to apply to the EOG channels prior to display"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.ecgscale    = number, scaling to apply to the ECG channels prior to display",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.ecgscale    = number, scaling to apply to the ECG channels prior to display"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.emgscale    = number, scaling to apply to the EMG channels prior to display",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.emgscale    = number, scaling to apply to the EMG channels prior to display"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.megscale    = number, scaling to apply to the MEG channels prior to display",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.megscale    = number, scaling to apply to the MEG channels prior to display"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.gradscale   = number, scaling to apply to the MEG gradiometer channels prior to display (in addition to the cfg.megscale factor)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.gradscale   = number, scaling to apply to the MEG gradiometer channels prior to display (in addition to the cfg.megscale factor)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.magscale    = number, scaling to apply to the MEG magnetometer channels prior to display (in addition to the cfg.megscale factor)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.magscale    = number, scaling to apply to the MEG magnetometer channels prior to display (in addition to the cfg.megscale factor)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.preproc.bpfilter    = 'yes'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.preproc.bpfilter    = 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.preproc.bpfilttype  = 'but'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.preproc.bpfilttype  = 'but'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.preproc.bpfreq      = [1 15]",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.preproc.bpfreq      = [1 15]"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.preproc.bpfiltord   = 4",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.preproc.bpfiltord   = 4"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.preproc.rectify     = 'yes'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.preproc.rectify     = 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.preproc.bpfilter    = 'yes'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.preproc.bpfilter    = 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.preproc.bpfreq      = [110 140]",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.preproc.bpfreq      = [110 140]"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.preproc.bpfiltord   =  8",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.preproc.bpfiltord   =  8"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.preproc.bpfilttype  = 'but'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.preproc.bpfilttype  = 'but'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.preproc.rectify     = 'yes'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.preproc.rectify     = 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.preproc.boxcar      = 0.2",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.preproc.boxcar      = 0.2"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_removetemplateartifact",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_removetemplateartifact.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel  = Nx1 cell-array with selection of channels (default = 'all'), see FT_CHANNELSELECTION for details",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel  = Nx1 cell-array with selection of channels (default = 'all'), see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.artifact = Mx2 matrix with sample numbers of the artifact segments, e.g. obtained from FT_ARTIFACT_EOG",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.artifact = Mx2 matrix with sample numbers of the artifact segments, e.g. obtained from FT_ARTIFACT_EOG"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_reproducescript",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.reproducescript = string, directory with the script and intermediate data"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_reproducescript.m",
					"ports": {
						"input": true,
						"output": true,
						"visible": true,
						"editable": true,
						"name": "cfg.reproducescript = string, directory with the script and intermediate data",
						"code": [
							{
								"language": "fieldtrip",
								"argument": {
									"name": "cfg.reproducescript = string, directory with the script and intermediate data"
								}
							}
						]
					}
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_resampledata",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_resampledata.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.resamplefs      = frequency at which the data will be resampled (default = 256 Hz)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.resamplefs      = frequency at which the data will be resampled (default = 256 Hz)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.detrend         = 'no' or 'yes', detrend the data prior to resampling (no default specified, see below)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.detrend         = 'no' or 'yes', detrend the data prior to resampling (no default specified, see below)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.demean          = 'no' or 'yes', whether to apply baseline correction (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.demean          = 'no' or 'yes', whether to apply baseline correction (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.baselinewindow  = [begin end] in seconds, the default is the complete trial (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.baselinewindow  = [begin end] in seconds, the default is the complete trial (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.feedback        = 'no', 'text', 'textbar', 'gui' (default = 'text')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.feedback        = 'no', 'text', 'textbar', 'gui' (default = 'text')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trials          = 'all' or a selection given as a 1xN vector (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trials          = 'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.sampleindex     = 'no' or 'yes', add a channel with the original sample indices (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.sampleindex     = 'no' or 'yes', add a channel with the original sample indices (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.time        = cell-array with one time axis per trial (i.e. from another dataset)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.time        = cell-array with one time axis per trial (i.e. from another dataset)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method      = interpolation method, see INTERP1 (default = 'pchip')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method      = interpolation method, see INTERP1 (default = 'pchip')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_respiration",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.preproc.bpfreq   = [low high], filter frequency in Hz"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_respiration.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel          = selected channel for processing, see FT_CHANNELSELECTION",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel          = selected channel for processing, see FT_CHANNELSELECTION"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.peakseparation   = scalar, time in seconds",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.peakseparation   = scalar, time in seconds"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.envelopewindow   = scalar, time in seconds",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.envelopewindow   = scalar, time in seconds"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.feedback         = 'yes' or 'no'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.feedback         = 'yes' or 'no'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.preproc.bpfilter = 'yes' or 'no' (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.preproc.bpfilter = 'yes' or 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.preproc.bpfreq   = [low high], filter frequency in Hz",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.preproc.bpfreq   = [low high], filter frequency in Hz"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_scalpcurrentdensity",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_scalpcurrentdensity.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method       = 'finite' for finite-difference method or",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method       = 'finite' for finite-difference method or"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.elec         = structure with electrode positions or filename, see FT_READ_SENS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.elec         = structure with electrode positions or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trials       = 'all' or a selection given as a 1xN vector (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trials       = 'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.feedback     = string, 'no', 'text', 'textbar', 'gui' (default = 'text')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.feedback     = string, 'no', 'text', 'textbar', 'gui' (default = 'text')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.conductivity = conductivity of the skin (default = 0.33 S\/m)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.conductivity = conductivity of the skin (default = 0.33 S\/m)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.conductivity = conductivity of the skin (default = 0.33 S\/m)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.conductivity = conductivity of the skin (default = 0.33 S\/m)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.lambda       = regularization parameter (default = 1e-05)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.lambda       = regularization parameter (default = 1e-05)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.order        = order of the splines (default = 4)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.order        = order of the splines (default = 4)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.degree       = degree of legendre polynomials (default for",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.degree       = degree of legendre polynomials (default for"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.neighbours   = neighbourhood structure, see FT_PREPARE_NEIGHBOURS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.neighbours   = neighbourhood structure, see FT_PREPARE_NEIGHBOURS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.badchannel      = cell-array, see FT_CHANNELSELECTION for details (default = [])",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.badchannel      = cell-array, see FT_CHANNELSELECTION for details (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_singleplotER",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.inputfile   =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_singleplotER.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.parameter     = field to be plotted on y-axis (default depends on data.dimord)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.parameter     = field to be plotted on y-axis (default depends on data.dimord)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.maskparameter = field in the first dataset to be used for masking of data",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.maskparameter = field in the first dataset to be used for masking of data"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.maskstyle     = style used for masking of data, 'box', 'thickness' or 'saturation' (default = 'box')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.maskstyle     = style used for masking of data, 'box', 'thickness' or 'saturation' (default = 'box')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.maskfacealpha = mask transparency value between 0 and 1",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.maskfacealpha = mask transparency value between 0 and 1"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.xlim          = 'maxmin' or [xmin xmax] (default = 'maxmin')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.xlim          = 'maxmin' or [xmin xmax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.ylim          = 'maxmin', 'maxabs', 'zeromax', 'minzero', or [ymin ymax] (default = 'maxmin')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.ylim          = 'maxmin', 'maxabs', 'zeromax', 'minzero', or [ymin ymax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel       = nx1 cell-array with selection of channels (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel       = nx1 cell-array with selection of channels (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.title          = string, title of plot",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.title          = string, title of plot"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.refchannel    = name of reference channel for visualising connectivity, can be 'gui'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.refchannel    = name of reference channel for visualising connectivity, can be 'gui'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.baseline      = 'yes', 'no' or [time1 time2] (default = 'no'), see ft_timelockbaseline",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.baseline      = 'yes', 'no' or [time1 time2] (default = 'no'), see ft_timelockbaseline"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.baselinetype  = 'absolute' or 'relative' (default = 'absolute')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.baselinetype  = 'absolute' or 'relative' (default = 'absolute')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trials        = 'all' or a selection given as a 1xn vector (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trials        = 'all' or a selection given as a 1xn vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fontsize      = font size of title (default = 8)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fontsize      = font size of title (default = 8)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.hotkeys       = enables hotkeys (leftarrow\/rightarrow\/uparrow\/downarrow\/m) for dynamic zoom and translation (ctrl+) of the axes",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.hotkeys       = enables hotkeys (leftarrow\/rightarrow\/uparrow\/downarrow\/m) for dynamic zoom and translation (ctrl+) of the axes"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.interactive   = interactive plot 'yes' or 'no' (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.interactive   = interactive plot 'yes' or 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.renderer      = 'painters', 'zbuffer', ' opengl' or 'none' (default = [])",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.renderer      = 'painters', 'zbuffer', ' opengl' or 'none' (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.linestyle     = linestyle\/marker type, see options of the PLOT function (default = '-')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.linestyle     = linestyle\/marker type, see options of the PLOT function (default = '-')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.linewidth     = linewidth in points (default = 0.5)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.linewidth     = linewidth in points (default = 0.5)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.graphcolor    = color(s) used for plotting the dataset(s) (default = 'brgkywrgbkywrgbkywrgbkyw')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.graphcolor    = color(s) used for plotting the dataset(s) (default = 'brgkywrgbkywrgbkywrgbkyw')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.directionality = '', 'inflow' or 'outflow' specifies for",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.directionality = '', 'inflow' or 'outflow' specifies for"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_singleplotTFR",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.directionality = '', 'inflow' or 'outflow' specifies for"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_singleplotTFR.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.parameter      = field to be plotted on z-axis, e.g. 'powspcrtrm' (default depends on data.dimord)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.parameter      = field to be plotted on z-axis, e.g. 'powspcrtrm' (default depends on data.dimord)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.maskparameter  = field in the data to be used for masking of data, can be logical (e.g. significant data points) or numerical (e.g. t-values).",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.maskparameter  = field in the data to be used for masking of data, can be logical (e.g. significant data points) or numerical (e.g. t-values)."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.maskstyle      = style used to masking, 'opacity', 'saturation', or 'outline' (default = 'opacity')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.maskstyle      = style used to masking, 'opacity', 'saturation', or 'outline' (default = 'opacity')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.maskalpha      = alpha value between 0 (transparent) and 1 (opaque) used for masking areas dictated by cfg.maskparameter (default = 1)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.maskalpha      = alpha value between 0 (transparent) and 1 (opaque) used for masking areas dictated by cfg.maskparameter (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.masknans       = 'yes' or 'no' (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.masknans       = 'yes' or 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.xlim           = 'maxmin' or [xmin xmax] (default = 'maxmin')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.xlim           = 'maxmin' or [xmin xmax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.ylim           = 'maxmin' or [ymin ymax] (default = 'maxmin')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.ylim           = 'maxmin' or [ymin ymax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.zlim           = plotting limits for color dimension, 'maxmin', 'maxabs', 'zeromax', 'minzero', or [zmin zmax] (default = 'maxmin')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.zlim           = plotting limits for color dimension, 'maxmin', 'maxabs', 'zeromax', 'minzero', or [zmin zmax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.baseline       = 'yes', 'no' or [time1 time2] (default = 'no'), see FT_FREQBASELINE",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.baseline       = 'yes', 'no' or [time1 time2] (default = 'no'), see FT_FREQBASELINE"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.baselinetype   = 'absolute', 'relative', 'relchange', 'normchange', 'db' or 'zscore' (default = 'absolute')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.baselinetype   = 'absolute', 'relative', 'relchange', 'normchange', 'db' or 'zscore' (default = 'absolute')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trials         = 'all' or a selection given as a 1xN vector (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trials         = 'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel        = Nx1 cell-array with selection of channels (default = 'all'),",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel        = Nx1 cell-array with selection of channels (default = 'all'),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.title          = string, title of plot",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.title          = string, title of plot"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.refchannel     = name of reference channel for visualising connectivity, can be 'gui'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.refchannel     = name of reference channel for visualising connectivity, can be 'gui'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fontsize       = font size of title (default = 8)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fontsize       = font size of title (default = 8)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.hotkeys        = enables hotkeys (leftarrow\/rightarrow\/uparrow\/downarrow\/pageup\/pagedown\/m) for dynamic zoom and translation (ctrl+) of the axes and color limits",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.hotkeys        = enables hotkeys (leftarrow\/rightarrow\/uparrow\/downarrow\/pageup\/pagedown\/m) for dynamic zoom and translation (ctrl+) of the axes and color limits"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.colormap       = any sized colormap, see COLORMAP",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.colormap       = any sized colormap, see COLORMAP"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.colorbar       = 'yes', 'no' (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.colorbar       = 'yes', 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.colorbartext   =  string indicating the text next to colorbar",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.colorbartext   =  string indicating the text next to colorbar"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.interactive    = Interactive plot 'yes' or 'no' (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.interactive    = Interactive plot 'yes' or 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.renderer       = 'painters', 'zbuffer', ' opengl' or 'none' (default = [])",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.renderer       = 'painters', 'zbuffer', ' opengl' or 'none' (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.directionality = '', 'inflow' or 'outflow' specifies for",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.directionality = '', 'inflow' or 'outflow' specifies for"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_sliceinterp",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.directionality = '', 'inflow' or 'outflow' specifies for"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_sliceinterp.m",
					"ports": null
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_sourceanalysis",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_sourceanalysis.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method     = 'lcmv'    linear constrained minimum variance beamformer",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method     = 'lcmv'    linear constrained minimum variance beamformer"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.xgrid               = vector (e.g. -20:1:20) or 'auto' (default = 'auto')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.xgrid               = vector (e.g. -20:1:20) or 'auto' (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.ygrid               = vector (e.g. -20:1:20) or 'auto' (default = 'auto')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.ygrid               = vector (e.g. -20:1:20) or 'auto' (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.zgrid               = vector (e.g.   0:1:20) or 'auto' (default = 'auto')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.zgrid               = vector (e.g.   0:1:20) or 'auto' (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.resolution          = number (e.g. 1 cm) for automatic grid generation",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.resolution          = number (e.g. 1 cm) for automatic grid generation"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.sourcemodel.pos     = N*3 matrix with the vertex positions of the cortical sheet",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.sourcemodel.pos     = N*3 matrix with the vertex positions of the cortical sheet"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.sourcemodel.tri     = M*3 matrix that describes the triangles connecting the vertices",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.sourcemodel.tri     = M*3 matrix that describes the triangles connecting the vertices"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.sourcemodel.pos     = N*3 matrix with position of each source",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.sourcemodel.pos     = N*3 matrix with position of each source"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.sourcemodel.inside  = N*1 vector with boolean value whether grid point is inside brain (optional)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.sourcemodel.inside  = N*1 vector with boolean value whether grid point is inside brain (optional)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.sourcemodel.dim     = [Nx Ny Nz] vector with dimensions in case of 3-D grid (optional)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.sourcemodel.dim     = [Nx Ny Nz] vector with dimensions in case of 3-D grid (optional)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.sourcemodel.filter",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.sourcemodel.filter"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.sourcemodel.leadfield",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.sourcemodel.leadfield"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.rawtrial      = 'no' or 'yes'   construct filter from single trials, apply to single trials. Note that you also may want to set cfg.keeptrials='yes' to keep all trial information, especially if using in combination with sourcemodel.filter",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.rawtrial      = 'no' or 'yes'   construct filter from single trials, apply to single trials. Note that you also may want to set cfg.keeptrials='yes' to keep all trial information, especially if using in combination with sourcemodel.filter"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.jackknife     = 'no' or 'yes'   jackknife resampling of trials",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.jackknife     = 'no' or 'yes'   jackknife resampling of trials"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.pseudovalue   = 'no' or 'yes'   pseudovalue resampling of trials",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.pseudovalue   = 'no' or 'yes'   pseudovalue resampling of trials"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.bootstrap     = 'no' or 'yes'   bootstrap resampling of trials",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.bootstrap     = 'no' or 'yes'   bootstrap resampling of trials"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.numbootstrap  = number of bootstrap replications (e.g. number of original trials)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.numbootstrap  = number of bootstrap replications (e.g. number of original trials)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.randomization      = 'no' or 'yes'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.randomization      = 'no' or 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.permutation        = 'no' or 'yes'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.permutation        = 'no' or 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.numrandomization   = number, e.g. 500",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.numrandomization   = number, e.g. 500"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.numpermutation     = number, e.g. 500 or 'all'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.numpermutation     = number, e.g. 500 or 'all'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.reducerank  = 'no', or number (default = 3 for EEG, 2 for MEG)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.reducerank  = 'no', or number (default = 3 for EEG, 2 for MEG)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.normalize   = 'no' or 'yes' (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.normalize   = 'no' or 'yes' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel       = Nx1 cell-array with selection of channels (default = 'all'),",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel       = Nx1 cell-array with selection of channels (default = 'all'),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.frequency     = single number (in Hz)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.frequency     = single number (in Hz)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.latency       = single number in seconds, for time-frequency analysis",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.latency       = single number in seconds, for time-frequency analysis"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.lambda        = number or empty for automatic default",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.lambda        = number or empty for automatic default"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.kappa         = number or empty for automatic default",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.kappa         = number or empty for automatic default"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.tol           = number or empty for automatic default",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.tol           = number or empty for automatic default"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.refchan       = reference channel label (for coherence)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.refchan       = reference channel label (for coherence)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.refdip        = reference dipole location (for coherence)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.refdip        = reference dipole location (for coherence)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.supchan       = suppressed channel label(s)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.supchan       = suppressed channel label(s)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.supdip        = suppressed dipole location(s)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.supdip        = suppressed dipole location(s)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.keeptrials    = 'no' or 'yes'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.keeptrials    = 'no' or 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.keepleadfield = 'no' or 'yes'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.keepleadfield = 'no' or 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.projectnoise  = 'no' or 'yes'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.projectnoise  = 'no' or 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.keepfilter    = 'no' or 'yes'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.keepfilter    = 'no' or 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.keepcsd       = 'no' or 'yes'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.keepcsd       = 'no' or 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.keepmom       = 'no' or 'yes'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.keepmom       = 'no' or 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.feedback      = 'no', 'text', 'textbar', 'gui' (default = 'text')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.feedback      = 'no', 'text', 'textbar', 'gui' (default = 'text')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headmodel     = structure with volume conduction model, see FT_PREPARE_HEADMODEL",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headmodel     = structure with volume conduction model, see FT_PREPARE_HEADMODEL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.elec          = structure with electrode positions or filename, see FT_READ_SENS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.elec          = structure with electrode positions or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.grad          = structure with gradiometer definition or filename, see FT_READ_SENS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.grad          = structure with gradiometer definition or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_sourcedescriptives",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_sourcedescriptives.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.cohmethod        = 'regular', 'lambda1', 'canonical'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.cohmethod        = 'regular', 'lambda1', 'canonical'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.powmethod        = 'regular', 'lambda1', 'trace', 'none'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.powmethod        = 'regular', 'lambda1', 'trace', 'none'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.supmethod        = 'chan_dip', 'chan', 'dip', 'none' (default)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.supmethod        = 'chan_dip', 'chan', 'dip', 'none' (default)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.projectmom       = 'yes' or 'no' (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.projectmom       = 'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.eta              = 'yes' or 'no' (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.eta              = 'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.kurtosis         = 'yes' or 'no' (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.kurtosis         = 'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.keeptrials       = 'yes' or 'no' (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.keeptrials       = 'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.keepcsd          = 'yes' or 'no' (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.keepcsd          = 'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.keepnoisecsd     = 'yes' or 'no' (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.keepnoisecsd     = 'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.keepmom          = 'yes' or 'no' (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.keepmom          = 'yes' or 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.keepnoisemom     = 'yes' or 'no' (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.keepnoisemom     = 'yes' or 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.resolutionmatrix = 'yes' or 'no' (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.resolutionmatrix = 'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.feedback         = 'no', 'text' (default), 'textbar', 'gui'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.feedback         = 'no', 'text' (default), 'textbar', 'gui'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fixedori         = 'within_trials' or 'over_trials' (default = 'over_trials')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fixedori         = 'within_trials' or 'over_trials' (default = 'over_trials')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_sourcegrandaverage",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.c2                 = list with subjects belonging to condition 2 (or B)"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_sourcegrandaverage.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.parameter          = string, describing the functional data to be processed, e.g. 'pow', 'nai' or 'coh'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.parameter          = string, describing the functional data to be processed, e.g. 'pow', 'nai' or 'coh'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.keepindividual     = 'no' or 'yes'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.keepindividual     = 'no' or 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.randomization      = 'no' or 'yes'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.randomization      = 'no' or 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.permutation        = 'no' or 'yes'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.permutation        = 'no' or 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.numrandomization   = number, e.g. 500",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.numrandomization   = number, e.g. 500"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.numpermutation     = number, e.g. 500 or 'all'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.numpermutation     = number, e.g. 500 or 'all'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.c1                 = list with subjects belonging to condition 1 (or A)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.c1                 = list with subjects belonging to condition 1 (or A)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.c2                 = list with subjects belonging to condition 2 (or B)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.c2                 = list with subjects belonging to condition 2 (or B)"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_sourceinterpolate",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_sourceinterpolate.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.parameter     = string (or cell-array) of the parameter(s) to be interpolated",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.parameter     = string (or cell-array) of the parameter(s) to be interpolated"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.downsample    = integer number (default = 1, i.e. no downsampling)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.downsample    = integer number (default = 1, i.e. no downsampling)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.interpmethod  = string, can be 'nearest', 'linear', 'cubic',  'spline', 'sphere_avg' or 'smudge' (default = 'linear for interpolating two 3D volumes, 'nearest' for all other cases)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.interpmethod  = string, can be 'nearest', 'linear', 'cubic',  'spline', 'sphere_avg' or 'smudge' (default = 'linear for interpolating two 3D volumes, 'nearest' for all other cases)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_sourcemovie",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.inputfile   =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_sourcemovie.m",
					"ports": {
						"input": true,
						"output": true,
						"visible": true,
						"editable": true,
						"name": "cfg.inputfile   =  ...",
						"code": [
							{
								"language": "fieldtrip",
								"argument": {
									"name": "cfg.inputfile   =  ..."
								}
							}
						]
					}
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_sourceparcellate",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.parameter    = cell-array with strings, fields that should be parcellated (default = 'all')"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_sourceparcellate.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method       = string, method to combine the values, see below (default = 'mean')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method       = string, method to combine the values, see below (default = 'mean')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.parcellation = string, fieldname that contains the desired parcellation",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.parcellation = string, fieldname that contains the desired parcellation"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.parameter    = cell-array with strings, fields that should be parcellated (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.parameter    = cell-array with strings, fields that should be parcellated (default = 'all')"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_sourceplot",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.markercolor   = [1x3] marker color in RGB (default = [1 1 1], i.e. white) (orig: from sliceinterp)"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_sourceplot.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method        = 'slice',      plots the data on a number of slices in the same plane",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method        = 'slice',      plots the data on a number of slices in the same plane"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.anaparameter  = string, field in data with the anatomical data (default = 'anatomy' if present in data)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.anaparameter  = string, field in data with the anatomical data (default = 'anatomy' if present in data)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.funparameter  = string, field in data with the functional parameter of interest (default = [])",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.funparameter  = string, field in data with the functional parameter of interest (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.maskparameter = string, field in the data to be used for opacity masking of fun data (default = [])",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.maskparameter = string, field in the data to be used for opacity masking of fun data (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.downsample    = downsampling for resolution reduction, integer value (default = 1) (orig: from surface)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.downsample    = downsampling for resolution reduction, integer value (default = 1) (orig: from surface)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.atlas         = string, filename of atlas to use (default = []) see FT_READ_ATLAS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.atlas         = string, filename of atlas to use (default = []) see FT_READ_ATLAS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.visible       = string, 'on' or 'off', whether figure will be visible (default = 'on')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.visible       = string, 'on' or 'off', whether figure will be visible (default = 'on')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.funcolormap   = colormap for functional data, see COLORMAP (default = 'auto')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.funcolormap   = colormap for functional data, see COLORMAP (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.funcolorlim   = color range of the functional data (default = 'auto')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.funcolorlim   = color range of the functional data (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.colorbar      = 'yes' or 'no' (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.colorbar      = 'yes' or 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.colorbartext  =  string indicating the text next to colorbar",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.colorbartext  =  string indicating the text next to colorbar"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.latency       = scalar or string, can be 'all', 'prestim', 'poststim', or [beg end], specify time range in seconds",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.latency       = scalar or string, can be 'all', 'prestim', 'poststim', or [beg end], specify time range in seconds"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.avgovertime   = string, can be 'yes' or 'no' (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.avgovertime   = string, can be 'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.frequency     = scalar or string, can be 'all', or [beg end], specify frequency range in Hz",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.frequency     = scalar or string, can be 'all', or [beg end], specify frequency range in Hz"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.avgoverfreq   = string, can be 'yes' or 'no' (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.avgoverfreq   = string, can be 'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.maskstyle     = 'opacity', or 'colormix'. If 'opacity', low-level",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.maskstyle     = 'opacity', or 'colormix'. If 'opacity', low-level"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.opacitymap    = opacitymap for mask data, see ALPHAMAP (default = 'auto')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.opacitymap    = opacitymap for mask data, see ALPHAMAP (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.opacitylim    = range of mask values to which opacitymap is scaled (default = 'auto')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.opacitylim    = range of mask values to which opacitymap is scaled (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.roi           = string or cell of strings, region(s) of interest from anatomical atlas (see cfg.atlas above)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.roi           = string or cell of strings, region(s) of interest from anatomical atlas (see cfg.atlas above)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.location      = location of cut, (default = 'auto')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.location      = location of cut, (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.locationcoordinates = coordinate system used in cfg.location, 'head' or 'voxel' (default = 'head')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.locationcoordinates = coordinate system used in cfg.location, 'head' or 'voxel' (default = 'head')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.crosshair     = 'yes' or 'no' (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.crosshair     = 'yes' or 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.axis          = 'on' or 'off' (default = 'on')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.axis          = 'on' or 'off' (default = 'on')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.queryrange    = number, in atlas voxels (default 3)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.queryrange    = number, in atlas voxels (default 3)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.clim          = lower and upper anatomical MRI limits (default = [0 1])",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.clim          = lower and upper anatomical MRI limits (default = [0 1])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.nslices       = number of slices, (default = 20)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.nslices       = number of slices, (default = 20)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.slicerange    = range of slices in data, (default = 'auto')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.slicerange    = range of slices in data, (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.slicedim      = dimension to slice 1 (x-axis) 2(y-axis) 3(z-axis) (default = 3)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.slicedim      = dimension to slice 1 (x-axis) 2(y-axis) 3(z-axis) (default = 3)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.title         = string, title of the plot",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.title         = string, title of the plot"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.figurename    = string, title of the figure window",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.figurename    = string, title of the figure window"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.surffile       = string, file that contains the surface (default = 'surface_white_both.mat')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.surffile       = string, file that contains the surface (default = 'surface_white_both.mat')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.surfinflated   = string, file that contains the inflated surface (default = [])",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.surfinflated   = string, file that contains the inflated surface (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.surfdownsample = number (default = 1, i.e. no downsampling)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.surfdownsample = number (default = 1, i.e. no downsampling)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.projmethod     = projection method, how functional volume data is projected onto surface",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.projmethod     = projection method, how functional volume data is projected onto surface"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.projvec        = vector (in mm) to allow different projections that",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.projvec        = vector (in mm) to allow different projections that"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.projcomb       = 'mean', 'max', method to combine the different projections",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.projcomb       = 'mean', 'max', method to combine the different projections"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.projweight     = vector of weights for the different projections (default = 1)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.projweight     = vector of weights for the different projections (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.projthresh     = implements thresholding on the surface level",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.projthresh     = implements thresholding on the surface level"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.sphereradius   = maximum distance from each voxel to the surface to be",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.sphereradius   = maximum distance from each voxel to the surface to be"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.distmat        = precomputed distance matrix (default = [])",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.distmat        = precomputed distance matrix (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.camlight       = 'yes' or 'no' (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.camlight       = 'yes' or 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.renderer       = 'painters', 'zbuffer', ' opengl' or 'none' (default = 'opengl')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.renderer       = 'painters', 'zbuffer', ' opengl' or 'none' (default = 'opengl')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.facecolor      = [r g b] values or string, for example 'brain', 'cortex', 'skin', 'black', 'red', 'r',",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.facecolor      = [r g b] values or string, for example 'brain', 'cortex', 'skin', 'black', 'red', 'r',"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.vertexcolor    = [r g b] values or string, for example 'brain', 'cortex', 'skin', 'black', 'red', 'r',",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.vertexcolor    = [r g b] values or string, for example 'brain', 'cortex', 'skin', 'black', 'red', 'r',"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.edgecolor      = [r g b] values or string, for example 'brain', 'cortex', 'skin', 'black', 'red', 'r'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.edgecolor      = [r g b] values or string, for example 'brain', 'cortex', 'skin', 'black', 'red', 'r'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.cloudtype       = 'point' plots a single point at each sensor position",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.cloudtype       = 'point' plots a single point at each sensor position"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.radius          = scalar, maximum radius of cloud (default = 4)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.radius          = scalar, maximum radius of cloud (default = 4)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.colorgrad       = 'white' or a scalar (e.g. 1), degree to which color of points in cloud",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.colorgrad       = 'white' or a scalar (e.g. 1), degree to which color of points in cloud"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.slice           = requires 'anatomical' as input (default = 'none')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.slice           = requires 'anatomical' as input (default = 'none')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.ori             = 'x', 'y', or 'z', specifies the orthogonal plane which will be plotted (default = 'y')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.ori             = 'x', 'y', or 'z', specifies the orthogonal plane which will be plotted (default = 'y')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.slicepos        = 'auto' or Nx1 vector specifying the position of the",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.slicepos        = 'auto' or Nx1 vector specifying the position of the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.nslices         = scalar, number of slices to plot if 'slicepos' = 'auto (default = 1)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.nslices         = scalar, number of slices to plot if 'slicepos' = 'auto (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.minspace        = scalar, minimum spacing between slices if nslices>1 (default = 1)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.minspace        = scalar, minimum spacing between slices if nslices>1 (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.marker        = [Nx3] array defining N marker positions to display (orig: from sliceinterp)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.marker        = [Nx3] array defining N marker positions to display (orig: from sliceinterp)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.markersize    = radius of markers (default = 5)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.markersize    = radius of markers (default = 5)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.markercolor   = [1x3] marker color in RGB (default = [1 1 1], i.e. white) (orig: from sliceinterp)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.markercolor   = [1x3] marker color in RGB (default = [1 1 1], i.e. white) (orig: from sliceinterp)"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_sourcestatistics",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.inputcoord   = 'mni' or 'tal', the coordinate system in which your source"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_sourcestatistics.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.parameter  = string, describing the functional data to be processed, e.g. 'pow', 'nai' or 'coh'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.parameter  = string, describing the functional data to be processed, e.g. 'pow', 'nai' or 'coh'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method       = different methods for calculating the probability of the null-hypothesis,",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method       = different methods for calculating the probability of the null-hypothesis,"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.atlas        = filename of the atlas",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.atlas        = filename of the atlas"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.roi          = string or cell of strings, region(s) of interest from anatomical atlas",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.roi          = string or cell of strings, region(s) of interest from anatomical atlas"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.avgoverroi   = 'yes' or 'no' (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.avgoverroi   = 'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.hemisphere   = 'left', 'right', 'both', 'combined', specifying this is",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.hemisphere   = 'left', 'right', 'both', 'combined', specifying this is"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputcoord   = 'mni' or 'tal', the coordinate system in which your source",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputcoord   = 'mni' or 'tal', the coordinate system in which your source"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_sourcewrite",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.inputfile   =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_sourcewrite.m",
					"ports": {
						"input": true,
						"output": true,
						"visible": true,
						"editable": true,
						"name": "cfg.inputfile   =  ...",
						"code": [
							{
								"language": "fieldtrip",
								"argument": {
									"name": "cfg.inputfile   =  ..."
								}
							}
						]
					}
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_statistics_analytic",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.statistic       = 'indepsamplesT'           independent samples T-statistic,"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_statistics_analytic.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.statistic        = string, statistic to compute for each sample or voxel (see below)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.statistic        = string, statistic to compute for each sample or voxel (see below)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.correctm         = string, apply multiple-comparison correction, 'no', 'bonferroni', 'holm', 'hochberg', 'fdr' (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.correctm         = string, apply multiple-comparison correction, 'no', 'bonferroni', 'holm', 'hochberg', 'fdr' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.alpha            = number, critical value for rejecting the null-hypothesis (default = 0.05)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.alpha            = number, critical value for rejecting the null-hypothesis (default = 0.05)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.tail             = number, -1, 1 or 0 (default = 0)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.tail             = number, -1, 1 or 0 (default = 0)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.ivar             = number or list with indices, independent variable(s)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.ivar             = number or list with indices, independent variable(s)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.uvar             = number or list with indices, unit variable(s)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.uvar             = number or list with indices, unit variable(s)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.wvar             = number or list with indices, within-block variable(s)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.wvar             = number or list with indices, within-block variable(s)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.statistic       = 'indepsamplesT'           independent samples T-statistic,",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.statistic       = 'indepsamplesT'           independent samples T-statistic,"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_statistics_crossvalidate",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.resample      = true\/false; upsample less occurring classes during"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_statistics_crossvalidate.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.mva           = a multivariate analysis (default = {dml.standardizer dml.svm})",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.mva           = a multivariate analysis (default = {dml.standardizer dml.svm})"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.statistic     = a cell-array of statistics to report (default = {'accuracy' 'binomial'})",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.statistic     = a cell-array of statistics to report (default = {'accuracy' 'binomial'})"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.nfolds        = number of cross-validation folds (default = 5)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.nfolds        = number of cross-validation folds (default = 5)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.resample      = true\/false; upsample less occurring classes during",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.resample      = true\/false; upsample less occurring classes during"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_statistics_montecarlo",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.precondition     before|after|[], for the statfun"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_statistics_montecarlo.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.numrandomization = number of randomizations, can be 'all'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.numrandomization = number of randomizations, can be 'all'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.correctm         = string, apply multiple-comparison correction, 'no', 'max', cluster', 'bonferroni', 'holm', 'hochberg', 'fdr' (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.correctm         = string, apply multiple-comparison correction, 'no', 'max', cluster', 'bonferroni', 'holm', 'hochberg', 'fdr' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.alpha            = number, critical value for rejecting the null-hypothesis per tail (default = 0.05)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.alpha            = number, critical value for rejecting the null-hypothesis per tail (default = 0.05)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.tail             = number, -1, 1 or 0 (default = 0)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.tail             = number, -1, 1 or 0 (default = 0)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.correcttail      = string, correct p-values or alpha-values when doing a two-sided test, 'alpha','prob' or 'no' (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.correcttail      = string, correct p-values or alpha-values when doing a two-sided test, 'alpha','prob' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.ivar             = number or list with indices, independent variable(s)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.ivar             = number or list with indices, independent variable(s)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.uvar             = number or list with indices, unit variable(s)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.uvar             = number or list with indices, unit variable(s)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.wvar             = number or list with indices, within-cell variable(s)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.wvar             = number or list with indices, within-cell variable(s)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.cvar             = number or list with indices, control variable(s)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.cvar             = number or list with indices, control variable(s)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.feedback         = string, 'gui', 'text', 'textbar' or 'no' (default = 'text')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.feedback         = string, 'gui', 'text', 'textbar' or 'no' (default = 'text')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.randomseed       = string, 'yes', 'no' or a number (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.randomseed       = string, 'yes', 'no' or a number (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.clusterstatistic = how to combine the single samples that belong to a cluster, 'maxsum', 'maxsize', 'wcm' (default = 'maxsum')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.clusterstatistic = how to combine the single samples that belong to a cluster, 'maxsum', 'maxsize', 'wcm' (default = 'maxsum')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.clusterthreshold = method for single-sample threshold, 'parametric', 'nonparametric_individual', 'nonparametric_common' (default = 'parametric')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.clusterthreshold = method for single-sample threshold, 'parametric', 'nonparametric_individual', 'nonparametric_common' (default = 'parametric')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.clusteralpha     = for either parametric or nonparametric thresholding per tail (default = 0.05)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.clusteralpha     = for either parametric or nonparametric thresholding per tail (default = 0.05)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.clustercritval   = for parametric thresholding (default is determined by the statfun)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.clustercritval   = for parametric thresholding (default is determined by the statfun)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.clustertail      = -1, 1 or 0 (default = 0)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.clustertail      = -1, 1 or 0 (default = 0)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.neighbours       = neighbourhood structure, see FT_PREPARE_NEIGHBOURS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.neighbours       = neighbourhood structure, see FT_PREPARE_NEIGHBOURS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.statistic       = 'indepsamplesT'           independent samples T-statistic,",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.statistic       = 'indepsamplesT'           independent samples T-statistic,"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.resampling       permutation, bootstrap",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.resampling       permutation, bootstrap"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.computecritval   yes|no, for the statfun",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.computecritval   yes|no, for the statfun"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.computestat      yes|no, for the statfun",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.computestat      yes|no, for the statfun"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.computeprob      yes|no, for the statfun",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.computeprob      yes|no, for the statfun"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.voxelstatistic   deprecated",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.voxelstatistic   deprecated"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.voxelthreshold   deprecated",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.voxelthreshold   deprecated"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.precondition     before|after|[], for the statfun",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.precondition     before|after|[], for the statfun"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_statistics_mvpa",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.mvpa.stratify        = if 1, the class proportions are approximately"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_statistics_mvpa.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.searchlight     = 'yes' or 'no', performs searchlight analysis",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.searchlight     = 'yes' or 'no', performs searchlight analysis"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.timextime       = 'yes' or 'no', performs time x time",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.timextime       = 'yes' or 'no', performs time x time"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.mvpa            = structure that contains detailed options for the",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.mvpa            = structure that contains detailed options for the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.mvpa.classifier      = 'lda'          Regularised linear discriminant analysis",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.mvpa.classifier      = 'lda'          Regularised linear discriminant analysis"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.mvpa.metric          = string, performance metric. Possible metrics:",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.mvpa.metric          = string, performance metric. Possible metrics:"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.mvpa.param           = struct, structure with hyperparameters for the",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.mvpa.param           = struct, structure with hyperparameters for the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.mvpa.balance         = string, for imbalanced data that does not have",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.mvpa.balance         = string, for imbalanced data that does not have"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.mvpa.cv              = string, cross-validation type, either 'kfold', 'leaveout'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.mvpa.cv              = string, cross-validation type, either 'kfold', 'leaveout'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.mvpa.k               = number of folds in k-fold cross-validation (default 5)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.mvpa.k               = number of folds in k-fold cross-validation (default 5)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.mvpa.repeat          = number of times the cross-validation is repeated",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.mvpa.repeat          = number of times the cross-validation is repeated"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.mvpa.p               = if cfg.cv is 'holdout', p is the fraction of test",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.mvpa.p               = if cfg.cv is 'holdout', p is the fraction of test"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.mvpa.stratify        = if 1, the class proportions are approximately",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.mvpa.stratify        = if 1, the class proportions are approximately"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_statistics_stats",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.statistic = 'ttest'          test against a mean of zero"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_statistics_stats.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.alpha     = number, critical value for rejecting the null-hypothesis (default = 0.05)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.alpha     = number, critical value for rejecting the null-hypothesis (default = 0.05)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.tail      = number, -1, 1 or 0 (default = 0)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.tail      = number, -1, 1 or 0 (default = 0)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.feedback  = string, 'gui', 'text', 'textbar' or 'no' (default = 'textbar')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.feedback  = string, 'gui', 'text', 'textbar' or 'no' (default = 'textbar')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method    = 'stats'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method    = 'stats'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.statistic = 'ttest'          test against a mean of zero",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.statistic = 'ttest'          test against a mean of zero"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_steadystatesimulation",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.stimulus2.kernelduration  = in seconds (default = 0.75*isi)"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_steadystatesimulation.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fsample   = scalar, sampling frequency in Hz (default = 512)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fsample   = scalar, sampling frequency in Hz (default = 512)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.duration  = scalar, trial length in seconds (default = 4.56)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.duration  = scalar, trial length in seconds (default = 4.56)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.baseline  = scalar, baseline length in seconds (default = 0)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.baseline  = scalar, baseline length in seconds (default = 0)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.ntrials   = integer N, number of trials (default = 320)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.ntrials   = integer N, number of trials (default = 320)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.iti       = scalar, inter-trial interval in seconds (default = 1)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.iti       = scalar, inter-trial interval in seconds (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.level1.condition = scalar, or vector of length L1 (default = 1)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.level1.condition = scalar, or vector of length L1 (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.level1.gain      = scalar, or vector of length L1 (default = 1)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.level1.gain      = scalar, or vector of length L1 (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.level2.condition = scalar, or vector of length L2 (default = 1)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.level2.condition = scalar, or vector of length L2 (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.level2.gain      = scalar, or vector of length L2 (default = 1)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.level2.gain      = scalar, or vector of length L2 (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.level3.condition = scalar, or vector of length L3 (default = 1)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.level3.condition = scalar, or vector of length L3 (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.level3.gain      = scalar, or vector of length L3 (default = 1)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.level3.gain      = scalar, or vector of length L3 (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.stimulus1.mode = 'periodic', 'transient' or 'off' (default = 'periodic')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.stimulus1.mode = 'periodic', 'transient' or 'off' (default = 'periodic')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.stimulus2.mode = 'periodic', 'transient' or 'off' (default = 'transient')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.stimulus2.mode = 'periodic', 'transient' or 'off' (default = 'transient')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.stimulus1.number          = does not apply for periodic stimuli",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.stimulus1.number          = does not apply for periodic stimuli"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.stimulus1.onset           = in seconds, first stimulus relative to the start of the trial (default = 0)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.stimulus1.onset           = in seconds, first stimulus relative to the start of the trial (default = 0)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.stimulus1.onsetjitter     = in seconds, max jitter that is added to the onset (default = 0)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.stimulus1.onsetjitter     = in seconds, max jitter that is added to the onset (default = 0)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.stimulus1.isi             = in seconds, i.e. for 10Hz you would specify 0.1 seconds as the interstimulus interval (default = 0.1176)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.stimulus1.isi             = in seconds, i.e. for 10Hz you would specify 0.1 seconds as the interstimulus interval (default = 0.1176)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.stimulus1.isijitter       = in seconds, max jitter relative to the previous stimulus (default = 0)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.stimulus1.isijitter       = in seconds, max jitter relative to the previous stimulus (default = 0)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.stimulus2.condition       = does not apply for periodic stimuli",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.stimulus2.condition       = does not apply for periodic stimuli"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.stimulus2.gain            = does not apply for periodic stimuli",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.stimulus2.gain            = does not apply for periodic stimuli"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.stimulus1.kernelshape     = 'sine'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.stimulus1.kernelshape     = 'sine'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.stimulus1.kernelduration  = in seconds (default = isi)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.stimulus1.kernelduration  = in seconds (default = isi)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.stimulus2.number          = scalar M, how many transients are to be presented per trial (default = 4)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.stimulus2.number          = scalar M, how many transients are to be presented per trial (default = 4)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.stimulus2.onset           = in seconds, first stimulus relative to the start of the trial (default = 0.7)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.stimulus2.onset           = in seconds, first stimulus relative to the start of the trial (default = 0.7)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.stimulus2.onsetjitter     = in seconds, max jitter that is added to the onset (default = 0.2)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.stimulus2.onsetjitter     = in seconds, max jitter that is added to the onset (default = 0.2)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.stimulus2.isi             = in seconds as the interstimulus interval (default = 0.7)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.stimulus2.isi             = in seconds as the interstimulus interval (default = 0.7)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.stimulus2.isijitter       = in seconds, max jitter relative to the previous stimulus ((default = 0.2)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.stimulus2.isijitter       = in seconds, max jitter relative to the previous stimulus ((default = 0.2)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.stimulus2.condition       = 1xM vector with condition codes for each transient within a trial (default = [1 1 2 2])",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.stimulus2.condition       = 1xM vector with condition codes for each transient within a trial (default = [1 1 2 2])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.stimulus2.gain            = 1xM vector with gain for each condition for each transient within a trial(default = [1 1 1 1])",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.stimulus2.gain            = 1xM vector with gain for each condition for each transient within a trial(default = [1 1 1 1])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.stimulus2.kernelshape     = 'hanning'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.stimulus2.kernelshape     = 'hanning'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.stimulus2.kernelduration  = in seconds (default = 0.75*isi)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.stimulus2.kernelduration  = in seconds (default = 0.75*isi)"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_stratify",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.channel     = 'all' or list with indices ( default = 'all')"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_stratify.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method      = 'histogram'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method      = 'histogram'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.equalbinavg = 'yes'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.equalbinavg = 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.numbin      = 10",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.numbin      = 10"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.numiter     = 2000",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.numiter     = 2000"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.pairtrials  = 'spikesort', 'linkage' or 'no' (default = 'spikesort')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.pairtrials  = 'spikesort', 'linkage' or 'no' (default = 'spikesort')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel     = 'all' or list with indices ( default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel     = 'all' or list with indices ( default = 'all')"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_timelockanalysis",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_timelockanalysis.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel            = Nx1 cell-array with selection of channels (default = 'all'),",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel            = Nx1 cell-array with selection of channels (default = 'all'),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trials             = 'all' or a selection given as a 1xN vector (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trials             = 'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.latency            = [begin end] in seconds, or 'all', 'minperiod', 'maxperiod',",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.latency            = [begin end] in seconds, or 'all', 'minperiod', 'maxperiod',"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.covariance         = 'no' or 'yes' (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.covariance         = 'no' or 'yes' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.covariancewindow   = [begin end] in seconds, or 'all', 'minperiod', 'maxperiod',",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.covariancewindow   = [begin end] in seconds, or 'all', 'minperiod', 'maxperiod',"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.keeptrials         = 'yes' or 'no', return individual trials or average (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.keeptrials         = 'yes' or 'no', return individual trials or average (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.removemean         = 'no' or 'yes' for covariance computation (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.removemean         = 'no' or 'yes' for covariance computation (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_timelockbaseline",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.version"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_timelockbaseline.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.baseline     = [begin end] (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.baseline     = [begin end] (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel      = cell-array, see FT_CHANNELSELECTION",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel      = cell-array, see FT_CHANNELSELECTION"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.parameter    = field for which to apply baseline normalization, or",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.parameter    = field for which to apply baseline normalization, or"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.baselinewindow",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.baselinewindow"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.previous",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.previous"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.version",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.version"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_timelockgrandaverage",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_timelockgrandaverage.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_timelocksimulation",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.noise.ampl  = number (default = 0.1)"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_timelocksimulation.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fsample    = simulated sample frequency (default = 1000)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fsample    = simulated sample frequency (default = 1000)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trllen     = length of simulated trials in seconds (default = 1)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trllen     = length of simulated trials in seconds (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.numtrl     = number of simulated trials (default = 10)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.numtrl     = number of simulated trials (default = 10)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.baseline   = number (default = 0.3)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.baseline   = number (default = 0.3)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.s1.numcycli = number (default = 1)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.s1.numcycli = number (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.s1.ampl     = number (default = 1.0)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.s1.ampl     = number (default = 1.0)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.s2.numcycli = number (default = 2)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.s2.numcycli = number (default = 2)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.s2.ampl     = number (default = 0.7)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.s2.ampl     = number (default = 0.7)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.s3.numcycli = number (default = 4)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.s3.numcycli = number (default = 4)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.s3.ampl     = number (default = 0.2)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.s3.ampl     = number (default = 0.2)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.noise.ampl  = number (default = 0.1)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.noise.ampl  = number (default = 0.1)"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_timelockstatistics",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_timelockstatistics.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel     = Nx1 cell-array with selection of channels (default = 'all'),",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel     = Nx1 cell-array with selection of channels (default = 'all'),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.latency     = [begin end] in seconds or 'all' (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.latency     = [begin end] in seconds or 'all' (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.avgoverchan = 'yes' or 'no'                   (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.avgoverchan = 'yes' or 'no'                   (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.avgovertime = 'yes' or 'no'                   (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.avgovertime = 'yes' or 'no'                   (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.parameter   = string                          (default = 'trial' or 'avg')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.parameter   = string                          (default = 'trial' or 'avg')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method       = different methods for calculating the significance probability and\/or critical value",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method       = different methods for calculating the significance probability and\/or critical value"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_topoplotCC",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.inputfile   =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_topoplotCC.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.feedback    = string (default = 'textbar')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.feedback    = string (default = 'textbar')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.layout      = specification of the layout, see FT_PREPARE_LAYOUT",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.layout      = specification of the layout, see FT_PREPARE_LAYOUT"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.foi         = the frequency of interest which is to be plotted (default is the first frequency bin)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.foi         = the frequency of interest which is to be plotted (default is the first frequency bin)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.widthparam  = string, parameter to be used to control the line width (see below)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.widthparam  = string, parameter to be used to control the line width (see below)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.alphaparam  = string, parameter to be used to control the opacity (see below)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.alphaparam  = string, parameter to be used to control the opacity (see below)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.colorparam  = string, parameter to be used to control the line color",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.colorparam  = string, parameter to be used to control the line color"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_topoplotER",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.interpolatenan     = string 'yes', 'no' (default = 'yes')"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_topoplotER.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.parameter          = field that contains the data to be plotted as color, for example 'avg', 'powspctrm' or 'cohspctrm' (default is automatic)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.parameter          = field that contains the data to be plotted as color, for example 'avg', 'powspctrm' or 'cohspctrm' (default is automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.maskparameter      = field in the data to be used for masking of data. It should have alues between 0 and 1, where 0 corresponds to transparent.",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.maskparameter      = field in the data to be used for masking of data. It should have alues between 0 and 1, where 0 corresponds to transparent."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.xlim               = limit for 1st dimension in data (e.g., time), can be 'maxmin' or [xmin xmax] (default = 'maxmin')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.xlim               = limit for 1st dimension in data (e.g., time), can be 'maxmin' or [xmin xmax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.zlim               = limits for color dimension, 'maxmin', 'maxabs', 'zeromax', 'minzero', or [zmin zmax] (default = 'maxmin')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.zlim               = limits for color dimension, 'maxmin', 'maxabs', 'zeromax', 'minzero', or [zmin zmax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel            = Nx1 cell-array with selection of channels (default = 'all'), see FT_CHANNELSELECTION for details",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel            = Nx1 cell-array with selection of channels (default = 'all'), see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.refchannel         = name of reference channel for visualising connectivity, can be 'gui'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.refchannel         = name of reference channel for visualising connectivity, can be 'gui'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.baseline           = 'yes','no' or [time1 time2] (default = 'no'), see FT_TIMELOCKBASELINE or FT_FREQBASELINE",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.baseline           = 'yes','no' or [time1 time2] (default = 'no'), see FT_TIMELOCKBASELINE or FT_FREQBASELINE"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.baselinetype       = 'absolute' or 'relative' (default = 'absolute')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.baselinetype       = 'absolute' or 'relative' (default = 'absolute')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trials             = 'all' or a selection given as a 1xN vector (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trials             = 'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.colormap           = any sized colormap, see COLORMAP",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.colormap           = any sized colormap, see COLORMAP"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.marker             = 'on', 'labels', 'numbers', 'off'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.marker             = 'on', 'labels', 'numbers', 'off'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.markersymbol       = channel marker symbol (default = 'o')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.markersymbol       = channel marker symbol (default = 'o')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.markercolor        = channel marker color (default = [0 0 0] (black))",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.markercolor        = channel marker color (default = [0 0 0] (black))"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.markersize         = channel marker size (default = 2)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.markersize         = channel marker size (default = 2)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.markerfontsize     = font size of channel labels (default = 8 pt)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.markerfontsize     = font size of channel labels (default = 8 pt)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.highlight          = 'off', 'on', 'labels', 'numbers'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.highlight          = 'off', 'on', 'labels', 'numbers'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.highlightchannel   =  Nx1 cell-array with selection of channels, or vector containing channel indices see FT_CHANNELSELECTION",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.highlightchannel   =  Nx1 cell-array with selection of channels, or vector containing channel indices see FT_CHANNELSELECTION"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.highlightsymbol    = highlight marker symbol (default = 'o')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.highlightsymbol    = highlight marker symbol (default = 'o')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.highlightcolor     = highlight marker color (default = [0 0 0] (black))",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.highlightcolor     = highlight marker color (default = [0 0 0] (black))"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.highlightsize      = highlight marker size (default = 6)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.highlightsize      = highlight marker size (default = 6)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.highlightfontsize  = highlight marker size (default = 8)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.highlightfontsize  = highlight marker size (default = 8)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.hotkeys            = enables hotkeys (pageup\/pagedown\/m) for dynamic zoom and translation (ctrl+) of the color limits",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.hotkeys            = enables hotkeys (pageup\/pagedown\/m) for dynamic zoom and translation (ctrl+) of the color limits"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.colorbar           = 'yes'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.colorbar           = 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.colorbartext       =  string indicating the text next to colorbar",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.colorbartext       =  string indicating the text next to colorbar"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.interplimits       = limits for interpolation (default = 'head')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.interplimits       = limits for interpolation (default = 'head')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.interpolation      = 'linear','cubic','nearest','v4' (default = 'v4') see GRIDDATA",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.interpolation      = 'linear','cubic','nearest','v4' (default = 'v4') see GRIDDATA"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.style              = plot style (default = 'both')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.style              = plot style (default = 'both')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.gridscale          = scaling grid size (default = 67)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.gridscale          = scaling grid size (default = 67)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.shading            = 'flat' or 'interp' (default = 'flat')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.shading            = 'flat' or 'interp' (default = 'flat')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.comment            = 'no', 'auto' or 'xlim' (default = 'auto')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.comment            = 'no', 'auto' or 'xlim' (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.commentpos         = string or two numbers, position of the comment (default = 'leftbottom')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.commentpos         = string or two numbers, position of the comment (default = 'leftbottom')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.interactive        = Interactive plot 'yes' or 'no' (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.interactive        = Interactive plot 'yes' or 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.directionality     = '', 'inflow' or 'outflow' specifies for",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.directionality     = '', 'inflow' or 'outflow' specifies for"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.layout             = specify the channel layout for plotting using one of",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.layout             = specify the channel layout for plotting using one of"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.interpolatenan     = string 'yes', 'no' (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.interpolatenan     = string 'yes', 'no' (default = 'yes')"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_topoplotIC",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.title              = string or 'auto' or 'off', specify a figure"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_topoplotIC.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.component          = field that contains the independent component(s) to be plotted as color",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.component          = field that contains the independent component(s) to be plotted as color"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.layout             = specification of the layout, see below",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.layout             = specification of the layout, see below"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.colormap           = any sized colormap, see COLORMAP",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.colormap           = any sized colormap, see COLORMAP"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.zlim               = plotting limits for color dimension, 'maxmin', 'maxabs', 'zeromax', 'minzero', or [zmin zmax] (default = 'maxmin')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.zlim               = plotting limits for color dimension, 'maxmin', 'maxabs', 'zeromax', 'minzero', or [zmin zmax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.marker             = 'on', 'labels', 'numbers', 'off'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.marker             = 'on', 'labels', 'numbers', 'off'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.markersymbol       = channel marker symbol (default = 'o')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.markersymbol       = channel marker symbol (default = 'o')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.markercolor        = channel marker color (default = [0 0 0] (black))",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.markercolor        = channel marker color (default = [0 0 0] (black))"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.markersize         = channel marker size (default = 2)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.markersize         = channel marker size (default = 2)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.markerfontsize     = font size of channel labels (default = 8 pt)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.markerfontsize     = font size of channel labels (default = 8 pt)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.highlight          = 'on', 'labels', 'numbers', 'off'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.highlight          = 'on', 'labels', 'numbers', 'off'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.highlightchannel   =  Nx1 cell-array with selection of channels, or vector containing channel indices see FT_CHANNELSELECTION",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.highlightchannel   =  Nx1 cell-array with selection of channels, or vector containing channel indices see FT_CHANNELSELECTION"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.highlightsymbol    = highlight marker symbol (default = 'o')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.highlightsymbol    = highlight marker symbol (default = 'o')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.highlightcolor     = highlight marker color (default = [0 0 0] (black))",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.highlightcolor     = highlight marker color (default = [0 0 0] (black))"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.highlightsize      = highlight marker size (default = 6)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.highlightsize      = highlight marker size (default = 6)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.highlightfontsize  = highlight marker size (default = 8)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.highlightfontsize  = highlight marker size (default = 8)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.colorbar           = 'yes'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.colorbar           = 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.colorbartext       =  string indicating the text next to colorbar",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.colorbartext       =  string indicating the text next to colorbar"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.interplimits       = limits for interpolation (default = 'head')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.interplimits       = limits for interpolation (default = 'head')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.interpolation      = 'linear','cubic','nearest','v4' (default = 'v4') see GRIDDATA",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.interpolation      = 'linear','cubic','nearest','v4' (default = 'v4') see GRIDDATA"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.style              = plot style (default = 'both')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.style              = plot style (default = 'both')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.gridscale          = scaling grid size (default = 67)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.gridscale          = scaling grid size (default = 67)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.shading            = 'flat' 'interp' (default = 'flat')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.shading            = 'flat' 'interp' (default = 'flat')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.comment            = string 'no' 'auto' or 'xlim' (default = 'auto')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.comment            = string 'no' 'auto' or 'xlim' (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.commentpos         = string or two numbers, position of comment (default 'leftbottom')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.commentpos         = string or two numbers, position of comment (default 'leftbottom')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.title              = string or 'auto' or 'off', specify a figure",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.title              = string or 'auto' or 'off', specify a figure"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_topoplotTFR",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.inputfile   =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_topoplotTFR.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.parameter          = field that contains the data to be plotted as color, for example 'avg', 'powspctrm' or 'cohspctrm' (default is automatic)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.parameter          = field that contains the data to be plotted as color, for example 'avg', 'powspctrm' or 'cohspctrm' (default is automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.maskparameter      = field in the data to be used for masking of data. It should have alues between 0 and 1, where 0 corresponds to transparent.",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.maskparameter      = field in the data to be used for masking of data. It should have alues between 0 and 1, where 0 corresponds to transparent."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.xlim               = limit for 1st dimension in data (e.g., time), can be 'maxmin' or [xmin xmax] (default = 'maxmin')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.xlim               = limit for 1st dimension in data (e.g., time), can be 'maxmin' or [xmin xmax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.ylim               = limit for 2nd dimension in data (e.g., freq), can be 'maxmin' or [ymin ymax] (default = 'maxmin')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.ylim               = limit for 2nd dimension in data (e.g., freq), can be 'maxmin' or [ymin ymax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.zlim               = limits for color dimension, 'maxmin', 'maxabs', 'zeromax', 'minzero', or [zmin zmax] (default = 'maxmin')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.zlim               = limits for color dimension, 'maxmin', 'maxabs', 'zeromax', 'minzero', or [zmin zmax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.channel            = Nx1 cell-array with selection of channels (default = 'all'), see FT_CHANNELSELECTION for details",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.channel            = Nx1 cell-array with selection of channels (default = 'all'), see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.refchannel         = name of reference channel for visualising connectivity, can be 'gui'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.refchannel         = name of reference channel for visualising connectivity, can be 'gui'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.baseline           = 'yes','no' or [time1 time2] (default = 'no'), see FT_TIMELOCKBASELINE or FT_FREQBASELINE",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.baseline           = 'yes','no' or [time1 time2] (default = 'no'), see FT_TIMELOCKBASELINE or FT_FREQBASELINE"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.baselinetype       = 'absolute' or 'relative' (default = 'absolute')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.baselinetype       = 'absolute' or 'relative' (default = 'absolute')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.trials             = 'all' or a selection given as a 1xN vector (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.trials             = 'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.colormap           = any sized colormap, see COLORMAP",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.colormap           = any sized colormap, see COLORMAP"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.marker             = 'on', 'labels', 'numbers', 'off'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.marker             = 'on', 'labels', 'numbers', 'off'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.markersymbol       = channel marker symbol (default = 'o')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.markersymbol       = channel marker symbol (default = 'o')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.markercolor        = channel marker color (default = [0 0 0] (black))",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.markercolor        = channel marker color (default = [0 0 0] (black))"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.markersize         = channel marker size (default = 2)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.markersize         = channel marker size (default = 2)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.markerfontsize     = font size of channel labels (default = 8 pt)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.markerfontsize     = font size of channel labels (default = 8 pt)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.highlight          = 'off', 'on', 'labels', 'numbers'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.highlight          = 'off', 'on', 'labels', 'numbers'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.highlightchannel   =  Nx1 cell-array with selection of channels, or vector containing channel indices see FT_CHANNELSELECTION",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.highlightchannel   =  Nx1 cell-array with selection of channels, or vector containing channel indices see FT_CHANNELSELECTION"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.highlightsymbol    = highlight marker symbol (default = 'o')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.highlightsymbol    = highlight marker symbol (default = 'o')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.highlightcolor     = highlight marker color (default = [0 0 0] (black))",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.highlightcolor     = highlight marker color (default = [0 0 0] (black))"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.highlightsize      = highlight marker size (default = 6)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.highlightsize      = highlight marker size (default = 6)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.highlightfontsize  = highlight marker size (default = 8)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.highlightfontsize  = highlight marker size (default = 8)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.hotkeys            = enables hotkeys (pageup\/pagedown\/m) for dynamic zoom and translation (ctrl+) of the color limits",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.hotkeys            = enables hotkeys (pageup\/pagedown\/m) for dynamic zoom and translation (ctrl+) of the color limits"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.colorbar           = 'yes'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.colorbar           = 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.colorbartext       =  string indicating the text next to colorbar",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.colorbartext       =  string indicating the text next to colorbar"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.interplimits       = limits for interpolation (default = 'head')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.interplimits       = limits for interpolation (default = 'head')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.interpolation      = 'linear','cubic','nearest','v4' (default = 'v4') see GRIDDATA",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.interpolation      = 'linear','cubic','nearest','v4' (default = 'v4') see GRIDDATA"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.style              = plot style (default = 'both')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.style              = plot style (default = 'both')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.gridscale          = scaling grid size (default = 67)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.gridscale          = scaling grid size (default = 67)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.shading            = 'flat' or 'interp' (default = 'flat')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.shading            = 'flat' or 'interp' (default = 'flat')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.comment            = 'no', 'auto' or 'xlim' (default = 'auto')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.comment            = 'no', 'auto' or 'xlim' (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.commentpos         = string or two numbers, position of the comment (default = 'leftbottom')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.commentpos         = string or two numbers, position of the comment (default = 'leftbottom')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.interactive        = Interactive plot 'yes' or 'no' (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.interactive        = Interactive plot 'yes' or 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.directionality     = '', 'inflow' or 'outflow' specifies for",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.directionality     = '', 'inflow' or 'outflow' specifies for"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.layout             = specify the channel layout for plotting using one of",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.layout             = specify the channel layout for plotting using one of"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.interpolatenan     = string 'yes', 'no' (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.interpolatenan     = string 'yes', 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_volumebiascorrect",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.opts           = struct, containing spmversion specific options."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_volumebiascorrect.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.spmversion     = string, 'spm8', 'spm12' (default = 'spm8')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.spmversion     = string, 'spm8', 'spm12' (default = 'spm8')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.opts           = struct, containing spmversion specific options.",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.opts           = struct, containing spmversion specific options."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_volumedownsample",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_volumedownsample.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.downsample = integer number (default = 1, i.e. no downsampling)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.downsample = integer number (default = 1, i.e. no downsampling)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.parameter  = string, data field to downsample (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.parameter  = string, data field to downsample (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.smooth     = 'no' or the FWHM of the gaussian kernel in voxels (default = 'no')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.smooth     = 'no' or the FWHM of the gaussian kernel in voxels (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.keepinside = 'yes' or 'no', keep the inside\/outside labeling (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.keepinside = 'yes' or 'no', keep the inside\/outside labeling (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.spmversion = string, 'spm2', 'spm8', 'spm12' (default = 'spm8')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.spmversion = string, 'spm2', 'spm8', 'spm12' (default = 'spm8')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_volumelookup",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.round2nearestvoxel  = 'yes' or 'no', voxel closest to POI is calculated (default = 'yes')"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_volumelookup.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputcoord          = 'mni' or 'tal', coordinate system of the mri\/source\/stat",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputcoord          = 'mni' or 'tal', coordinate system of the mri\/source\/stat"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.atlas               = string, filename of atlas to use, see FT_READ_ATLAS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.atlas               = string, filename of atlas to use, see FT_READ_ATLAS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.roi                 = string or cell-array of strings, ROI from anatomical atlas",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.roi                 = string or cell-array of strings, ROI from anatomical atlas"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.roi                 = Nx3 vector, coordinates of the POI",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.roi                 = Nx3 vector, coordinates of the POI"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.sphere              = radius of each sphere in cm\/mm dep on unit of input",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.sphere              = radius of each sphere in cm\/mm dep on unit of input"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.box                 = Nx3 vector, size of each box in cm\/mm dep on unit of input",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.box                 = Nx3 vector, size of each box in cm\/mm dep on unit of input"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.round2nearestvoxel  = 'yes' or 'no' (default = 'no'), voxel closest to point of interest is calculated",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.round2nearestvoxel  = 'yes' or 'no' (default = 'no'), voxel closest to point of interest is calculated"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputcoord          = 'mni' or 'tal', coordinate system of the mri\/source\/stat",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputcoord          = 'mni' or 'tal', coordinate system of the mri\/source\/stat"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.atlas               = string, filename of atlas to use, see FT_READ_ATLAS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.atlas               = string, filename of atlas to use, see FT_READ_ATLAS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.maskparameter       = string, field in volume to be looked up, data in field should be logical",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.maskparameter       = string, field in volume to be looked up, data in field should be logical"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.minqueryrange       = number, should be odd and <= to maxqueryrange (default = 1)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.minqueryrange       = number, should be odd and <= to maxqueryrange (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.maxqueryrange       = number, should be odd and >= to minqueryrange (default = 1)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.maxqueryrange       = number, should be odd and >= to minqueryrange (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.output              = 'single' always outputs one label; if several POI are provided, they are considered together as describing a ROI (default)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.output              = 'single' always outputs one label; if several POI are provided, they are considered together as describing a ROI (default)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.roi                 = Nx3 vector, coordinates of the POI",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.roi                 = Nx3 vector, coordinates of the POI"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputcoord          = 'mni' or 'tal', coordinate system of the mri\/source\/stat",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputcoord          = 'mni' or 'tal', coordinate system of the mri\/source\/stat"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.atlas               = string, filename of atlas to use, see FT_READ_ATLAS",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.atlas               = string, filename of atlas to use, see FT_READ_ATLAS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.minqueryrange       = number, should be odd and <= to maxqueryrange (default = 1)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.minqueryrange       = number, should be odd and <= to maxqueryrange (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.maxqueryrange       = number, should be odd and >= to minqueryrange (default = 1)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.maxqueryrange       = number, should be odd and >= to minqueryrange (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.querymethod         = 'sphere' searches voxels around the ROI in a sphere (default)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.querymethod         = 'sphere' searches voxels around the ROI in a sphere (default)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.round2nearestvoxel  = 'yes' or 'no', voxel closest to POI is calculated (default = 'yes')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.round2nearestvoxel  = 'yes' or 'no', voxel closest to POI is calculated (default = 'yes')"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_volumenormalise",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.spmparams        = one can feed in parameters from a prior normalisation"
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_volumenormalise.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.spmversion  = string, 'spm2', 'spm8', 'spm12' (default = 'spm8')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.spmversion  = string, 'spm2', 'spm8', 'spm12' (default = 'spm8')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.template    = string, filename of the template anatomical MRI (default = 'T1.mnc'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.template    = string, filename of the template anatomical MRI (default = 'T1.mnc'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.parameter   = cell-array with the functional data to be normalised (default = 'all')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.parameter   = cell-array with the functional data to be normalised (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.downsample  = integer number (default = 1, i.e. no downsampling)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.downsample  = integer number (default = 1, i.e. no downsampling)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.name        = string for output filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.name        = string for output filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.write       = 'no' (default) or 'yes', writes the segmented volumes to SPM2",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.write       = 'no' (default) or 'yes', writes the segmented volumes to SPM2"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.nonlinear   = 'yes' (default) or 'no', estimates a nonlinear transformation",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.nonlinear   = 'yes' (default) or 'no', estimates a nonlinear transformation"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.keepintermediate = 'yes' or 'no'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.keepintermediate = 'yes' or 'no'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.intermediatename = prefix of the the coregistered images and of the",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.intermediatename = prefix of the the coregistered images and of the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.spmparams        = one can feed in parameters from a prior normalisation",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.spmparams        = one can feed in parameters from a prior normalisation"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_volumerealign",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_volumerealign.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method         = string representing the method for aligning",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method         = string representing the method for aligning"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.coordsys       = string specifying the origin and the axes of the coordinate",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.coordsys       = string specifying the origin and the axes of the coordinate"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.clim           = [min max], scaling of the anatomy color (default",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.clim           = [min max], scaling of the anatomy color (default"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.parameter      = 'anatomy' the parameter which is used for the",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.parameter      = 'anatomy' the parameter which is used for the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.viewresult     = string, 'yes' or 'no', whether or not to visualize aligned volume(s)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.viewresult     = string, 'yes' or 'no', whether or not to visualize aligned volume(s)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fiducial.nas    = [i j k], position of nasion",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fiducial.nas    = [i j k], position of nasion"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fiducial.lpa    = [i j k], position of LPA",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fiducial.lpa    = [i j k], position of LPA"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fiducial.rpa    = [i j k], position of RPA",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fiducial.rpa    = [i j k], position of RPA"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fiducial.zpoint = [i j k], a point on the positive z-axis. This is",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fiducial.zpoint = [i j k], a point on the positive z-axis. This is"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fiducial.ac      = [i j k], position of anterior commissure",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fiducial.ac      = [i j k], position of anterior commissure"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fiducial.pc      = [i j k], position of posterior commissure",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fiducial.pc      = [i j k], position of posterior commissure"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fiducial.xzpoint = [i j k], point on the midsagittal-plane with a",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fiducial.xzpoint = [i j k], point on the midsagittal-plane with a"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.viewmode    = 'ortho' or 'surface', visualize the anatomical MRI as three",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.viewmode    = 'ortho' or 'surface', visualize the anatomical MRI as three"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.snapshot     = 'no' ('yes'), making a snapshot of the image once a",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.snapshot     = 'no' ('yes'), making a snapshot of the image once a"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.snapshotfile = 'ft_volumerealign_snapshot' or string, the root of",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.snapshotfile = 'ft_volumerealign_snapshot' or string, the root of"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headshape.headshape      = string pointing to a file describing a headshape or a",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headshape.headshape      = string pointing to a file describing a headshape or a"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headshape.scalpsmooth    = scalar, smoothing parameter for the scalp",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headshape.scalpsmooth    = scalar, smoothing parameter for the scalp"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headshape.scalpthreshold = scalar, threshold parameter for the scalp",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headshape.scalpthreshold = scalar, threshold parameter for the scalp"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headshape.interactive    = 'yes' or 'no', use interactive realignment to",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headshape.interactive    = 'yes' or 'no', use interactive realignment to"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.headshape.icp            = 'yes' or 'no', use automatic realignment",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.headshape.icp            = 'yes' or 'no', use automatic realignment"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fsl.path         = string, specifying the path to fsl",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fsl.path         = string, specifying the path to fsl"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fsl.costfun      = string, specifying the cost-function used for",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fsl.costfun      = string, specifying the cost-function used for"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fsl.interpmethod = string, specifying the interpolation method, can be",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fsl.interpmethod = string, specifying the interpolation method, can be"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fsl.dof          = scalar, specifying the number of parameters for the",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fsl.dof          = scalar, specifying the number of parameters for the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fsl.reslice      = string, specifying whether the output image will be",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fsl.reslice      = string, specifying whether the output image will be"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.spmversion       = string, 'spm2', 'spm8', 'spm12' (default = 'spm8')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.spmversion       = string, 'spm2', 'spm8', 'spm12' (default = 'spm8')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.spm.regtype      = 'subj', 'rigid'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.spm.regtype      = 'subj', 'rigid'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.spm.smosrc       = scalar value",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.spm.smosrc       = scalar value"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.spm.smoref       = scalar value",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.spm.smoref       = scalar value"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.spm.sep          = optimisation sampling steps (mm), default: [4 2]",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.spm.sep          = optimisation sampling steps (mm), default: [4 2]"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.spm.params       = starting estimates (6 elements), default: [0 0 0  0 0 0]",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.spm.params       = starting estimates (6 elements), default: [0 0 0  0 0 0]"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.spm.cost_fun     = cost function string:",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.spm.cost_fun     = cost function string:"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.spm.tol          = tolerences for accuracy of each param, default: [0.02 0.02 0.02 0.001 0.001 0.001]",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.spm.tol          = tolerences for accuracy of each param, default: [0.02 0.02 0.02 0.001 0.001 0.001]"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.spm.fwhm         = smoothing to apply to 256x256 joint histogram, default: [7 7]",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.spm.fwhm         = smoothing to apply to 256x256 joint histogram, default: [7 7]"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_volumereslice",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_volumereslice.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.method     = string, 'flip', 'nearest', 'linear', 'cubic' or 'spline' (default = 'linear')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.method     = string, 'flip', 'nearest', 'linear', 'cubic' or 'spline' (default = 'linear')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.downsample = integer number (default = 1, i.e. no downsampling)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.downsample = integer number (default = 1, i.e. no downsampling)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.resolution = number, in physical units",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.resolution = number, in physical units"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.xrange     = [min max], in physical units",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.xrange     = [min max], in physical units"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.yrange     = [min max], in physical units",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.yrange     = [min max], in physical units"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.zrange     = [min max], in physical units",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.zrange     = [min max], in physical units"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.dim        = [nx ny nz], size of the volume in each direction",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.dim        = [nx ny nz], size of the volume in each direction"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_volumesegment",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.outputfile  =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_volumesegment.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.output         = string or cell-array of strings, see below (default = 'tpm')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.output         = string or cell-array of strings, see below (default = 'tpm')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.spmversion     = string, 'spm2', 'spm8', 'spm12' (default = 'spm12')",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.spmversion     = string, 'spm2', 'spm8', 'spm12' (default = 'spm12')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.spmmethod      = string, 'old', 'new', 'mars' (default = 'old'). This pertains ",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.spmmethod      = string, 'old', 'new', 'mars' (default = 'old'). This pertains "
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.opts           = struct, containing spm-version specific options. See",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.opts           = struct, containing spm-version specific options. See"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.template       = filename of the template anatomical MRI (default = '\/spm2\/templates\/T1.mnc'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.template       = filename of the template anatomical MRI (default = '\/spm2\/templates\/T1.mnc'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.tpm            = cell-array containing the filenames of the tissue probability maps",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.tpm            = cell-array containing the filenames of the tissue probability maps"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.name           = string for output filename",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.name           = string for output filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.write          = 'no' or 'yes' (default = 'no'),",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.write          = 'no' or 'yes' (default = 'no'),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.brainsmooth    = 'no', or scalar, the FWHM of the gaussian kernel in voxels, (default = 5)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.brainsmooth    = 'no', or scalar, the FWHM of the gaussian kernel in voxels, (default = 5)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.scalpsmooth    = 'no', or scalar, the FWHM of the gaussian kernel in voxels, (default = 5)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.scalpsmooth    = 'no', or scalar, the FWHM of the gaussian kernel in voxels, (default = 5)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.skullsmooth    = 'no', or scalar, the FWHM of the gaussian kernel in voxels, (default = 5)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.skullsmooth    = 'no', or scalar, the FWHM of the gaussian kernel in voxels, (default = 5)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.brainthreshold = 'no', or scalar, relative threshold value which is used to threshold the",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.brainthreshold = 'no', or scalar, relative threshold value which is used to threshold the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.scalpthreshold = 'no', or scalar, relative threshold value which is used to threshold the",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.scalpthreshold = 'no', or scalar, relative threshold value which is used to threshold the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.skullthreshold = 'no', or scalar, relative threshold value which is used to threshold the",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.skullthreshold = 'no', or scalar, relative threshold value which is used to threshold the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.downsample     = integer, amount of downsampling before segmentation",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.downsample     = integer, amount of downsampling before segmentation"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.output = 'skullstrip';",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.output = 'skullstrip';"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.output = {'brain' 'scalp' 'skull'};",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.output = {'brain' 'scalp' 'skull'};"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.output = {'scalp'};",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.output = {'scalp'};"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.output    = {'tpm'};",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.output    = {'tpm'};"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.output    = {'brain'};",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.output    = {'brain'};"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.outputfile  =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.outputfile  =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_volumewrite",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.inputfile   =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_volumewrite.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.parameter     = string, describing the functional data to be processed,",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.parameter     = string, describing the functional data to be processed,"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.filename      = filename without the extension",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.filename      = filename without the extension"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.filetype      = 'analyze', 'nifti', 'nifti_img', 'analyze_spm', 'mgz',",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.filetype      = 'analyze', 'nifti', 'nifti_img', 'analyze_spm', 'mgz',"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.vmpversion    = 1 or 2 (default) version of the vmp-format to use",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.vmpversion    = 1 or 2 (default) version of the vmp-format to use"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.datatype      = 'bit1', 'uint8', 'int16', 'int32', 'float' or 'double'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.datatype      = 'bit1', 'uint8', 'int16', 'int32', 'float' or 'double'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.scaling       = 'yes' or 'no'",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.scaling       = 'yes' or 'no'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.downsample    = integer number (default = 1, i.e. no downsampling)",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.downsample    = integer number (default = 1, i.e. no downsampling)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fiducial.nas  = [x y z] position of nasion",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fiducial.nas  = [x y z] position of nasion"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fiducial.lpa  = [x y z] position of LPA",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fiducial.lpa  = [x y z] position of LPA"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.fiducial.rpa  = [x y z] position of RPA",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.fiducial.rpa  = [x y z] position of RPA"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.markfiducial  = 'yes' or 'no', mark the fiducials",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.markfiducial  = 'yes' or 'no', mark the fiducials"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.markorigin    = 'yes' or 'no', mark the origin",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.markorigin    = 'yes' or 'no', mark the origin"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.markcorner    = 'yes' or 'no', mark the first corner of the volume",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.markcorner    = 'yes' or 'no', mark the first corner of the volume"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cfg.inputfile   =  ...",
							"code": [
								{
									"language": "fieldtrip",
									"argument": {
										"name": "cfg.inputfile   =  ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_wizard",
					"code": [
						{
							"language": "fieldtrip",
							"argument": {
								"name": "cfg.inputfile   =  ..."
							}
						}
					],
					"web_url": "https:\/\/github.com\/fieldtrip\/fieldtrip\/tree\/master\/ft_wizard.m",
					"ports": null
				}
			]
		}
	]
}
