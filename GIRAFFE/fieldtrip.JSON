{
	"toolboxes": [
		{
			"name": "fieldtrip",
			"nodes": [
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_analysispipeline",
					"code": [
						{
							"call": "ft_analysispipeline(cfg, data)",
							"language": "fieldtrip",
							"argout": "[pipeline]",
							"cfgfield": {
								"name": "inputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_analysispipeline.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "filename",
							"code": [
								{
									"call": "ft_analysispipeline(cfg, data)",
									"language": "fieldtrip",
									"argout": "[pipeline]",
									"cfgfield": {
										"name": "filename",
										"comment": "string, filename without the extension"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "filetype",
							"code": [
								{
									"call": "ft_analysispipeline(cfg, data)",
									"language": "fieldtrip",
									"argout": "[pipeline]",
									"cfgfield": {
										"name": "filetype",
										"comment": "string, can be 'matlab', 'html' or 'dot'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "feedback",
							"code": [
								{
									"call": "ft_analysispipeline(cfg, data)",
									"language": "fieldtrip",
									"argout": "[pipeline]",
									"cfgfield": {
										"name": "feedback",
										"comment": "string, 'no', 'text', 'gui' or 'yes', whether text and/or"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "showinfo",
							"code": [
								{
									"call": "ft_analysispipeline(cfg, data)",
									"language": "fieldtrip",
									"argout": "[pipeline]",
									"cfgfield": {
										"name": "showinfo",
										"comment": "string or cell-array of strings, information to display"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "remove",
							"code": [
								{
									"call": "ft_analysispipeline(cfg, data)",
									"language": "fieldtrip",
									"argout": "[pipeline]",
									"cfgfield": {
										"name": "remove",
										"comment": "cell-array with strings, determines which objects will"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_analysispipeline(cfg, data)",
									"language": "fieldtrip",
									"argout": "[pipeline]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_annotate",
					"code": [
						{
							"call": "ft_annotate(cfg, datain)",
							"language": "fieldtrip",
							"argout": "dataout",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_annotate.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "comment",
							"code": [
								{
									"call": "ft_annotate(cfg, datain)",
									"language": "fieldtrip",
									"argout": "dataout",
									"cfgfield": {
										"name": "comment",
										"comment": "string"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_annotate(cfg, datain)",
									"language": "fieldtrip",
									"argout": "dataout",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_annotate(cfg, datain)",
									"language": "fieldtrip",
									"argout": "dataout",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_anonymizedata",
					"code": [
						{
							"call": "ft_anonymizedata(cfg, data)",
							"language": "fieldtrip",
							"argout": "data",
							"cfgfield": {
								"name": "outputfile",
								"comment": "..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_anonymizedata.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "keepnumeric",
							"code": [
								{
									"call": "ft_anonymizedata(cfg, data)",
									"language": "fieldtrip",
									"argout": "data",
									"cfgfield": {
										"name": "keepnumeric",
										"comment": "'yes' or 'no', keep numeric fields (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "keepfield",
							"code": [
								{
									"call": "ft_anonymizedata(cfg, data)",
									"language": "fieldtrip",
									"argout": "data",
									"cfgfield": {
										"name": "keepfield",
										"comment": "cell-array with strings, fields to keep (default = {})"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "removefield",
							"code": [
								{
									"call": "ft_anonymizedata(cfg, data)",
									"language": "fieldtrip",
									"argout": "data",
									"cfgfield": {
										"name": "removefield",
										"comment": "cell-array with strings, fields to remove (default = {})"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "keepvalue",
							"code": [
								{
									"call": "ft_anonymizedata(cfg, data)",
									"language": "fieldtrip",
									"argout": "data",
									"cfgfield": {
										"name": "keepvalue",
										"comment": "cell-array with strings, values to keep (default = {})"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "removevalue",
							"code": [
								{
									"call": "ft_anonymizedata(cfg, data)",
									"language": "fieldtrip",
									"argout": "data",
									"cfgfield": {
										"name": "removevalue",
										"comment": "cell-array with strings, values to remove (default = {})"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_anonymizedata(cfg, data)",
									"language": "fieldtrip",
									"argout": "data",
									"cfgfield": {
										"name": "inputfile",
										"comment": "..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_anonymizedata(cfg, data)",
									"language": "fieldtrip",
									"argout": "data",
									"cfgfield": {
										"name": "outputfile",
										"comment": "..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_appenddata",
					"code": [
						{
							"call": "ft_appenddata(cfg, varargin)",
							"language": "fieldtrip",
							"argout": "[data]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_appenddata.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "keepsampleinfo",
							"code": [
								{
									"call": "ft_appenddata(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "keepsampleinfo",
										"comment": "'yes', 'no', 'ifmakessense' (default = 'ifmakessense')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_appenddata(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_appenddata(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_appendfreq",
					"code": [
						{
							"call": "ft_appendfreq(cfg, varargin)",
							"language": "fieldtrip",
							"argout": "[freq]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_appendfreq.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "parameter",
							"code": [
								{
									"call": "ft_appendfreq(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "parameter",
										"comment": "string, the name of the field to concatenate"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "appenddim",
							"code": [
								{
									"call": "ft_appendfreq(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "appenddim",
										"comment": "string, the dimension to concatenate over (default is automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "tolerance",
							"code": [
								{
									"call": "ft_appendfreq(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "tolerance",
										"comment": "scalar, tolerance to determine how different the frequency and/or"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_appendfreq(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_appendfreq(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_appendlayout",
					"code": [
						{
							"call": "ft_appendlayout(cfg, varargin)",
							"language": "fieldtrip",
							"argout": "[combined]",
							"cfgfield": {
								"name": "yscale",
								"comment": "number, scaling to apply to input layouts along the vertical direction (default = 1)"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_appendlayout.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "direction",
							"code": [
								{
									"call": "ft_appendlayout(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[combined]",
									"cfgfield": {
										"name": "direction",
										"comment": "string, 'horizontal' or 'vertical' (default = 'horizontal')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "align",
							"code": [
								{
									"call": "ft_appendlayout(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[combined]",
									"cfgfield": {
										"name": "align",
										"comment": "string, 'center', 'left', 'right', 'top' or 'bottom' (default = 'center')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "distance",
							"code": [
								{
									"call": "ft_appendlayout(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[combined]",
									"cfgfield": {
										"name": "distance",
										"comment": "number, distance between layouts (default is automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "xscale",
							"code": [
								{
									"call": "ft_appendlayout(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[combined]",
									"cfgfield": {
										"name": "xscale",
										"comment": "number, scaling to apply to input layouts along the horizontal direction (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "yscale",
							"code": [
								{
									"call": "ft_appendlayout(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[combined]",
									"cfgfield": {
										"name": "yscale",
										"comment": "number, scaling to apply to input layouts along the vertical direction (default = 1)"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_appendsens",
					"code": [
						{
							"call": "ft_appendsens(cfg, varargin)",
							"language": "fieldtrip",
							"argout": "[sens]"
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_appendsens.m",
					"ports": null
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_appendsource",
					"code": [
						{
							"call": "ft_appendsource(cfg, varargin)",
							"language": "fieldtrip",
							"argout": "[source]"
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_appendsource.m",
					"ports": null
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_appendspike",
					"code": [
						{
							"call": "ft_appendspike(cfg, varargin)",
							"language": "fieldtrip",
							"argout": "[data]"
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_appendspike.m",
					"ports": null
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_appendtimelock",
					"code": [
						{
							"call": "ft_appendtimelock(cfg, varargin)",
							"language": "fieldtrip",
							"argout": "[timelock]",
							"cfgfield": {
								"name": "keepsampleinfo",
								"comment": "'yes', 'no', 'ifmakessense' (default = 'ifmakessense')"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_appendtimelock.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "appenddim",
							"code": [
								{
									"call": "ft_appendtimelock(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[timelock]",
									"cfgfield": {
										"name": "appenddim",
										"comment": "string, the dimension to concatenate over which to append,"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "tolerance",
							"code": [
								{
									"call": "ft_appendtimelock(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[timelock]",
									"cfgfield": {
										"name": "tolerance",
										"comment": "scalar, tolerance to determine how different the time axes"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "keepsampleinfo",
							"code": [
								{
									"call": "ft_appendtimelock(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[timelock]",
									"cfgfield": {
										"name": "keepsampleinfo",
										"comment": "'yes', 'no', 'ifmakessense' (default = 'ifmakessense')"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_artifact_clip",
					"code": [
						{
							"call": "ft_artifact_clip(cfg, data)",
							"language": "fieldtrip",
							"argout": "[cfg, artifact]",
							"cfgfield": {
								"name": "inputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_artifact_clip.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dataset",
							"code": [
								{
									"call": "ft_artifact_clip(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "dataset",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headerfile",
							"code": [
								{
									"call": "ft_artifact_clip(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "headerfile",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "datafile",
							"code": [
								{
									"call": "ft_artifact_clip(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "datafile",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headerformat",
							"code": [
								{
									"call": "ft_artifact_clip(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "headerformat",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dataformat",
							"code": [
								{
									"call": "ft_artifact_clip(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "dataformat",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.clip.channel",
							"code": [
								{
									"call": "ft_artifact_clip(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.clip.channel",
										"comment": "Nx1 cell-array with selection of channels, see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.clip.pretim",
							"code": [
								{
									"call": "ft_artifact_clip(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.clip.pretim",
										"comment": "0.000;  pre-artifact rejection-interval in seconds"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.clip.psttim",
							"code": [
								{
									"call": "ft_artifact_clip(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.clip.psttim",
										"comment": "0.000;  post-artifact rejection-interval in seconds"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.clip.timethreshold",
							"code": [
								{
									"call": "ft_artifact_clip(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.clip.timethreshold",
										"comment": "number, minimum duration in seconds of a datasegment with consecutive identical samples to be considered as 'clipped'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.clip.amplthreshold",
							"code": [
								{
									"call": "ft_artifact_clip(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.clip.amplthreshold",
										"comment": "number, minimum amplitude difference in consecutive samples to be considered as 'clipped' (default = 0)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "continuous",
							"code": [
								{
									"call": "ft_artifact_clip(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "continuous",
										"comment": "'yes' or 'no' whether the file contains continuous data"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_artifact_clip(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_artifact_ecg",
					"code": [
						{
							"call": "ft_artifact_ecg(cfg, data)",
							"language": "fieldtrip",
							"argout": "[cfg, artifact]",
							"cfgfield": {
								"name": "inputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_artifact_ecg.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dataset",
							"code": [
								{
									"call": "ft_artifact_ecg(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "dataset",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headerfile",
							"code": [
								{
									"call": "ft_artifact_ecg(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "headerfile",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "datafile",
							"code": [
								{
									"call": "ft_artifact_ecg(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "datafile",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headerformat",
							"code": [
								{
									"call": "ft_artifact_ecg(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "headerformat",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dataformat",
							"code": [
								{
									"call": "ft_artifact_ecg(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "dataformat",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trl",
							"code": [
								{
									"call": "ft_artifact_ecg(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "trl",
										"comment": "structure that defines the data segments of interest. See FT_DEFINETRIAL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "continuous",
							"code": [
								{
									"call": "ft_artifact_ecg(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "continuous",
										"comment": "'yes' or 'no' whether the file contains continuous data"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.ecg.channel",
							"code": [
								{
									"call": "ft_artifact_ecg(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.ecg.channel",
										"comment": "Nx1 cell-array with selection of channels, see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.ecg.pretim",
							"code": [
								{
									"call": "ft_artifact_ecg(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.ecg.pretim",
										"comment": "0.05; pre-artifact rejection-interval in seconds"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.ecg.psttim",
							"code": [
								{
									"call": "ft_artifact_ecg(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.ecg.psttim",
										"comment": "0.3;  post-artifact rejection-interval in seconds"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.ecg.method",
							"code": [
								{
									"call": "ft_artifact_ecg(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.ecg.method",
										"comment": "'zvalue'; peak-detection method"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.ecg.cutoff",
							"code": [
								{
									"call": "ft_artifact_ecg(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.ecg.cutoff",
										"comment": "3; peak-threshold"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.ecg.inspect",
							"code": [
								{
									"call": "ft_artifact_ecg(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.ecg.inspect",
										"comment": "Nx1 list of channels which will be shown in a QRS-locked average"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_artifact_ecg(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_artifact_eog",
					"code": [
						{
							"call": "ft_artifact_eog(cfg, data)",
							"language": "fieldtrip",
							"argout": "[cfg, artifact]",
							"cfgfield": {
								"name": "inputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_artifact_eog.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dataset",
							"code": [
								{
									"call": "ft_artifact_eog(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "dataset",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headerfile",
							"code": [
								{
									"call": "ft_artifact_eog(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "headerfile",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "datafile",
							"code": [
								{
									"call": "ft_artifact_eog(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "datafile",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headerformat",
							"code": [
								{
									"call": "ft_artifact_eog(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "headerformat",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dataformat",
							"code": [
								{
									"call": "ft_artifact_eog(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "dataformat",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trl",
							"code": [
								{
									"call": "ft_artifact_eog(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "trl",
										"comment": "structure that defines the data segments of interest. See FT_DEFINETRIAL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "continuous",
							"code": [
								{
									"call": "ft_artifact_eog(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "continuous",
										"comment": "'yes' or 'no' whether the file contains continuous data"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.eog.bpfilter",
							"code": [
								{
									"call": "ft_artifact_eog(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.eog.bpfilter",
										"comment": "'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.eog.bpfilttype",
							"code": [
								{
									"call": "ft_artifact_eog(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.eog.bpfilttype",
										"comment": "'but'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.eog.bpfreq",
							"code": [
								{
									"call": "ft_artifact_eog(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.eog.bpfreq",
										"comment": "[1 15]"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.eog.bpfiltord",
							"code": [
								{
									"call": "ft_artifact_eog(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.eog.bpfiltord",
										"comment": "4"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.eog.hilbert",
							"code": [
								{
									"call": "ft_artifact_eog(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.eog.hilbert",
										"comment": "'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.eog.channel",
							"code": [
								{
									"call": "ft_artifact_eog(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.eog.channel",
										"comment": "Nx1 cell-array with selection of channels, see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.eog.cutoff",
							"code": [
								{
									"call": "ft_artifact_eog(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.eog.cutoff",
										"comment": "z-value at which to threshold (default = 4)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.eog.trlpadding",
							"code": [
								{
									"call": "ft_artifact_eog(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.eog.trlpadding",
										"comment": "0.5"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.eog.fltpadding",
							"code": [
								{
									"call": "ft_artifact_eog(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.eog.fltpadding",
										"comment": "0.1"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.eog.artpadding",
							"code": [
								{
									"call": "ft_artifact_eog(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.eog.artpadding",
										"comment": "0.1"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_artifact_eog(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_artifact_jump",
					"code": [
						{
							"call": "ft_artifact_jump(cfg, data)",
							"language": "fieldtrip",
							"argout": "[cfg, artifact]",
							"cfgfield": {
								"name": "inputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_artifact_jump.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dataset",
							"code": [
								{
									"call": "ft_artifact_jump(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "dataset",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headerfile",
							"code": [
								{
									"call": "ft_artifact_jump(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "headerfile",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "datafile",
							"code": [
								{
									"call": "ft_artifact_jump(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "datafile",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headerformat",
							"code": [
								{
									"call": "ft_artifact_jump(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "headerformat",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dataformat",
							"code": [
								{
									"call": "ft_artifact_jump(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "dataformat",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trl",
							"code": [
								{
									"call": "ft_artifact_jump(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "trl",
										"comment": "structure that defines the data segments of interest. See FT_DEFINETRIAL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "continuous",
							"code": [
								{
									"call": "ft_artifact_jump(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "continuous",
										"comment": "'yes' or 'no' whether the file contains continuous data"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.jump.medianfilter",
							"code": [
								{
									"call": "ft_artifact_jump(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.jump.medianfilter",
										"comment": "'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.jump.medianfiltord",
							"code": [
								{
									"call": "ft_artifact_jump(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.jump.medianfiltord",
										"comment": "9"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.jump.absdiff",
							"code": [
								{
									"call": "ft_artifact_jump(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.jump.absdiff",
										"comment": "'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.jump.channel",
							"code": [
								{
									"call": "ft_artifact_jump(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.jump.channel",
										"comment": "Nx1 cell-array with selection of channels, see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.jump.cutoff",
							"code": [
								{
									"call": "ft_artifact_jump(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.jump.cutoff",
										"comment": "z-value at which to threshold (default = 20)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.jump.trlpadding",
							"code": [
								{
									"call": "ft_artifact_jump(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.jump.trlpadding",
										"comment": "automatically determined based on the filter padding (cfg.padding)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.jump.artpadding",
							"code": [
								{
									"call": "ft_artifact_jump(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.jump.artpadding",
										"comment": "automatically determined based on the filter padding (cfg.padding)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_artifact_jump(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_artifact_muscle",
					"code": [
						{
							"call": "ft_artifact_muscle(cfg, data)",
							"language": "fieldtrip",
							"argout": "[cfg, artifact]",
							"cfgfield": {
								"name": "inputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_artifact_muscle.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dataset",
							"code": [
								{
									"call": "ft_artifact_muscle(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "dataset",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headerfile",
							"code": [
								{
									"call": "ft_artifact_muscle(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "headerfile",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "datafile",
							"code": [
								{
									"call": "ft_artifact_muscle(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "datafile",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headerformat",
							"code": [
								{
									"call": "ft_artifact_muscle(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "headerformat",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dataformat",
							"code": [
								{
									"call": "ft_artifact_muscle(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "dataformat",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trl",
							"code": [
								{
									"call": "ft_artifact_muscle(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "trl",
										"comment": "structure that defines the data segments of interest. See FT_DEFINETRIAL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "continuous",
							"code": [
								{
									"call": "ft_artifact_muscle(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "continuous",
										"comment": "'yes' or 'no' whether the file contains continuous data"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.muscle.bpfilter",
							"code": [
								{
									"call": "ft_artifact_muscle(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.muscle.bpfilter",
										"comment": "'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.muscle.bpfreq",
							"code": [
								{
									"call": "ft_artifact_muscle(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.muscle.bpfreq",
										"comment": "[110 140]"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.muscle.bpfiltord",
							"code": [
								{
									"call": "ft_artifact_muscle(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.muscle.bpfiltord",
										"comment": "8"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.muscle.bpfilttype",
							"code": [
								{
									"call": "ft_artifact_muscle(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.muscle.bpfilttype",
										"comment": "'but'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.muscle.hilbert",
							"code": [
								{
									"call": "ft_artifact_muscle(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.muscle.hilbert",
										"comment": "'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.muscle.boxcar",
							"code": [
								{
									"call": "ft_artifact_muscle(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.muscle.boxcar",
										"comment": "0.2"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.muscle.channel",
							"code": [
								{
									"call": "ft_artifact_muscle(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.muscle.channel",
										"comment": "Nx1 cell-array with selection of channels, see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.muscle.cutoff",
							"code": [
								{
									"call": "ft_artifact_muscle(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.muscle.cutoff",
										"comment": "z-value at which to threshold (default = 4)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.muscle.trlpadding",
							"code": [
								{
									"call": "ft_artifact_muscle(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.muscle.trlpadding",
										"comment": "0.1"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.muscle.fltpadding",
							"code": [
								{
									"call": "ft_artifact_muscle(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.muscle.fltpadding",
										"comment": "0.1"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.muscle.artpadding",
							"code": [
								{
									"call": "ft_artifact_muscle(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.muscle.artpadding",
										"comment": "0.1"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_artifact_muscle(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_artifact_nan",
					"code": [
						{
							"call": "ft_artifact_nan(cfg, data)",
							"language": "fieldtrip",
							"argout": "[cfg, artifact]",
							"cfgfield": {
								"name": "inputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_artifact_nan.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.nan.channel",
							"code": [
								{
									"call": "ft_artifact_nan(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.nan.channel",
										"comment": "Nx1 cell-array with selection of channels, see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_artifact_nan(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_artifact_threshold",
					"code": [
						{
							"call": "ft_artifact_threshold(cfg, data)",
							"language": "fieldtrip",
							"argout": "[cfg, artifact]",
							"cfgfield": {
								"name": "inputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_artifact_threshold.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dataset",
							"code": [
								{
									"call": "ft_artifact_threshold(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "dataset",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headerfile",
							"code": [
								{
									"call": "ft_artifact_threshold(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "headerfile",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "datafile",
							"code": [
								{
									"call": "ft_artifact_threshold(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "datafile",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headerformat",
							"code": [
								{
									"call": "ft_artifact_threshold(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "headerformat",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dataformat",
							"code": [
								{
									"call": "ft_artifact_threshold(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "dataformat",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trl",
							"code": [
								{
									"call": "ft_artifact_threshold(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "trl",
										"comment": "structure that defines the data segments of interest, see FT_DEFINETRIAL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "continuous",
							"code": [
								{
									"call": "ft_artifact_threshold(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "continuous",
										"comment": "'yes' or 'no' whether the file contains continuous data"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.threshold.channel",
							"code": [
								{
									"call": "ft_artifact_threshold(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.threshold.channel",
										"comment": "cell-array with channel labels"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.threshold.bpfilter",
							"code": [
								{
									"call": "ft_artifact_threshold(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.threshold.bpfilter",
										"comment": "'no' or 'yes' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.threshold.bpfreq",
							"code": [
								{
									"call": "ft_artifact_threshold(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.threshold.bpfreq",
										"comment": "[0.3 30]"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.threshold.bpfiltord",
							"code": [
								{
									"call": "ft_artifact_threshold(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.threshold.bpfiltord",
										"comment": "4"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.threshold.range",
							"code": [
								{
									"call": "ft_artifact_threshold(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.threshold.range",
										"comment": "value in uV or T, default  inf"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.threshold.min",
							"code": [
								{
									"call": "ft_artifact_threshold(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.threshold.min",
										"comment": "value in uV or T, default -inf"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.threshold.max",
							"code": [
								{
									"call": "ft_artifact_threshold(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.threshold.max",
										"comment": "value in uV or T, default  inf"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.threshold.onset",
							"code": [
								{
									"call": "ft_artifact_threshold(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.threshold.onset",
										"comment": "value in uV or T, default  inf"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.threshold.offset",
							"code": [
								{
									"call": "ft_artifact_threshold(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.threshold.offset",
										"comment": "value in uV or T, default  inf"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_artifact_threshold(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_artifact_tms",
					"code": [
						{
							"call": "ft_artifact_tms(cfg, data)",
							"language": "fieldtrip",
							"argout": "[cfg, artifact]",
							"cfgfield": {
								"name": "inputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_artifact_tms.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dataset",
							"code": [
								{
									"call": "ft_artifact_tms(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "dataset",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headerfile",
							"code": [
								{
									"call": "ft_artifact_tms(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "headerfile",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "datafile",
							"code": [
								{
									"call": "ft_artifact_tms(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "datafile",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headerformat",
							"code": [
								{
									"call": "ft_artifact_tms(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "headerformat",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dataformat",
							"code": [
								{
									"call": "ft_artifact_tms(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "dataformat",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trl",
							"code": [
								{
									"call": "ft_artifact_tms(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "trl",
										"comment": "structure that defines the data segments of interest, see FT_DEFINETRIAL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "continuous",
							"code": [
								{
									"call": "ft_artifact_tms(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "continuous",
										"comment": "'yes' or 'no' whether the file contains continuous data (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_artifact_tms(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "method",
										"comment": "'detect' or 'marker', see below."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "prestim",
							"code": [
								{
									"call": "ft_artifact_tms(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "prestim",
										"comment": "scalar, time in seconds prior to onset of detected event to mark as artifactual (default = 0.005 seconds)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "poststim",
							"code": [
								{
									"call": "ft_artifact_tms(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "poststim",
										"comment": "scalar, time in seconds post onset of detected even to mark as artifactual (default = 0.010 seconds)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.tms.derivative",
							"code": [
								{
									"call": "ft_artifact_tms(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.tms.derivative",
										"comment": "'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.tms.channel",
							"code": [
								{
									"call": "ft_artifact_tms(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.tms.channel",
										"comment": "Nx1 cell-array with selection of channels, see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.tms.cutoff",
							"code": [
								{
									"call": "ft_artifact_tms(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.tms.cutoff",
										"comment": "z-value at which to threshold (default = 4)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.tms.trlpadding",
							"code": [
								{
									"call": "ft_artifact_tms(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.tms.trlpadding",
										"comment": "0.1"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.tms.fltpadding",
							"code": [
								{
									"call": "ft_artifact_tms(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.tms.fltpadding",
										"comment": "0.1"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.tms.artpadding",
							"code": [
								{
									"call": "ft_artifact_tms(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.tms.artpadding",
										"comment": "0.01"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trialfun",
							"code": [
								{
									"call": "ft_artifact_tms(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "trialfun",
										"comment": "function name, see below (default = 'ft_trialfun_general')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trialdef.eventtype",
							"code": [
								{
									"call": "ft_artifact_tms(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "trialdef.eventtype",
										"comment": "'string'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trialdef.eventvalue",
							"code": [
								{
									"call": "ft_artifact_tms(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "trialdef.eventvalue",
										"comment": "number, string or list with numbers or strings"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_artifact_tms(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_artifact_zvalue",
					"code": [
						{
							"call": "ft_artifact_zvalue(cfg, data)",
							"language": "fieldtrip",
							"argout": "[cfg, artifact]",
							"cfgfield": {
								"name": "artfctdef.zvalue.rectify",
								"comment": "'no' or 'yes'"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_artifact_zvalue.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dataset",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "dataset",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headerfile",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "headerfile",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "datafile",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "datafile",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headerformat",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "headerformat",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dataformat",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "dataformat",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trl",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "trl",
										"comment": "structure that defines the data segments of interest. See FT_DEFINETRIAL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "continuous",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "continuous",
										"comment": "'yes' or 'no' whether the file contains continuous data (default   = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.zvalue.channel",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.zvalue.channel",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.zvalue.cutoff",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.zvalue.cutoff",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.zvalue.trlpadding",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.zvalue.trlpadding",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.zvalue.fltpadding",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.zvalue.fltpadding",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.zvalue.artpadding",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.zvalue.artpadding",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "memory",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "memory",
										"comment": "'low' or 'high', whether to be memory or computationally efficient, respectively (default = 'high')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.zvalue.artfctpeak",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.zvalue.artfctpeak",
										"comment": "'yes' or 'no'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.zvalue.interactive",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.zvalue.interactive",
										"comment": "'yes' or 'no'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.zvalue.lpfilter",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.zvalue.lpfilter",
										"comment": "'no' or 'yes'  lowpass filter"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.zvalue.hpfilter",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.zvalue.hpfilter",
										"comment": "'no' or 'yes'  highpass filter"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.zvalue.bpfilter",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.zvalue.bpfilter",
										"comment": "'no' or 'yes'  bandpass filter"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.zvalue.bsfilter",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.zvalue.bsfilter",
										"comment": "'no' or 'yes'  bandstop filter for line noise removal"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.zvalue.dftfilter",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.zvalue.dftfilter",
										"comment": "'no' or 'yes'  line noise removal using discrete fourier transform"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.zvalue.medianfilter",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.zvalue.medianfilter",
										"comment": "'no' or 'yes'  jump preserving median filter"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.zvalue.lpfreq",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.zvalue.lpfreq",
										"comment": "lowpass  frequency in Hz"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.zvalue.hpfreq",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.zvalue.hpfreq",
										"comment": "highpass frequency in Hz"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.zvalue.bpfreq",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.zvalue.bpfreq",
										"comment": "bandpass frequency range, specified as [low high] in Hz"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.zvalue.bsfreq",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.zvalue.bsfreq",
										"comment": "bandstop frequency range, specified as [low high] in Hz"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.zvalue.lpfiltord",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.zvalue.lpfiltord",
										"comment": "lowpass  filter order"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.zvalue.hpfiltord",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.zvalue.hpfiltord",
										"comment": "highpass filter order"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.zvalue.bpfiltord",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.zvalue.bpfiltord",
										"comment": "bandpass filter order"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.zvalue.bsfiltord",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.zvalue.bsfiltord",
										"comment": "bandstop filter order"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.zvalue.medianfiltord",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.zvalue.medianfiltord",
										"comment": "length of median filter"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.zvalue.lpfilttype",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.zvalue.lpfilttype",
										"comment": "digital filter type, 'but' (default) or 'firws' or 'fir' or 'firls'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.zvalue.hpfilttype",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.zvalue.hpfilttype",
										"comment": "digital filter type, 'but' (default) or 'firws' or 'fir' or 'firls'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.zvalue.bpfilttype",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.zvalue.bpfilttype",
										"comment": "digital filter type, 'but' (default) or 'firws' or 'fir' or 'firls'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.zvalue.bsfilttype",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.zvalue.bsfilttype",
										"comment": "digital filter type, 'but' (default) or 'firws' or 'fir' or 'firls'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.zvalue.detrend",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.zvalue.detrend",
										"comment": "'no' or 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.zvalue.demean",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.zvalue.demean",
										"comment": "'no' or 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.zvalue.baselinewindow",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.zvalue.baselinewindow",
										"comment": "[begin end] in seconds, the default is the complete trial"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.zvalue.hilbert",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.zvalue.hilbert",
										"comment": "'no' or 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.zvalue.rectify",
							"code": [
								{
									"call": "ft_artifact_zvalue(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, artifact]",
									"cfgfield": {
										"name": "artfctdef.zvalue.rectify",
										"comment": "'no' or 'yes'"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_audiovideobrowser",
					"code": [
						{
							"call": null,
							"language": "fieldtrip",
							"cfgfield": {
								"name": "interactive",
								"comment": "'yes' or 'no' (default = 'yes')"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_audiovideobrowser.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "datahdr",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "datahdr",
										"comment": "header structure of the EEG/MEG data, see FT_READ_HEADER"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "audiohdr",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "audiohdr",
										"comment": "header structure of the audio data, see FT_READ_HEADER"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "videohdr",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "videohdr",
										"comment": "header structure of the video data, see FT_READ_HEADER"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "audiofile",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "audiofile",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "videofile",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "videofile",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trl",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "trl",
										"comment": "Nx3 matrix, expressed in the MEG/EEG data samples, see FT_DEFINETRIAL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "anonimize",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "anonimize",
										"comment": "[x1 x2 y1 y2], range in pixels for placing a bar over the eyes (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "interactive",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "interactive",
										"comment": "'yes' or 'no' (default = 'yes')"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_channelnormalise",
					"code": [
						{
							"call": "ft_channelnormalise(cfg, data)",
							"language": "fieldtrip",
							"argout": "[dataout]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_channelnormalise.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_channelnormalise(cfg, data)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "channel",
										"comment": "'all', or a selection of channels"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trials",
							"code": [
								{
									"call": "ft_channelnormalise(cfg, data)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "trials",
										"comment": "'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "demean",
							"code": [
								{
									"call": "ft_channelnormalise(cfg, data)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "demean",
										"comment": "'yes' or 'no' (or boolean value) (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "scale",
							"code": [
								{
									"call": "ft_channelnormalise(cfg, data)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "scale",
										"comment": "scalar value used for scaling (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_channelnormalise(cfg, data)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "method",
										"comment": "'perchannel', or 'acrosschannel', computes the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_channelnormalise(cfg, data)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_channelnormalise(cfg, data)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_channelrepair",
					"code": [
						{
							"call": "ft_channelrepair(cfg, data)",
							"language": "fieldtrip",
							"argout": "[data]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_channelrepair.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_channelrepair(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "method",
										"comment": "'weighted', 'average', 'spline', 'slap' or 'nan' (default = 'weighted')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "badchannel",
							"code": [
								{
									"call": "ft_channelrepair(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "badchannel",
										"comment": "cell-array, see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "missingchannel",
							"code": [
								{
									"call": "ft_channelrepair(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "missingchannel",
										"comment": "cell-array, see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "neighbours",
							"code": [
								{
									"call": "ft_channelrepair(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "neighbours",
										"comment": "neighbourhood structure, see also FT_PREPARE_NEIGHBOURS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trials",
							"code": [
								{
									"call": "ft_channelrepair(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "trials",
										"comment": "'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "lambda",
							"code": [
								{
									"call": "ft_channelrepair(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "lambda",
										"comment": "regularisation parameter (default = 1e-5, not for method 'distance')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "order",
							"code": [
								{
									"call": "ft_channelrepair(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "order",
										"comment": "order of the polynomial interpolation (default = 4, not for method 'distance')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "elec",
							"code": [
								{
									"call": "ft_channelrepair(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "elec",
										"comment": "structure with electrode positions or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "grad",
							"code": [
								{
									"call": "ft_channelrepair(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "grad",
										"comment": "structure with gradiometer definition or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "opto",
							"code": [
								{
									"call": "ft_channelrepair(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "opto",
										"comment": "structure with optode definition, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_channelrepair(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_channelrepair(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_clusterplot",
					"code": [
						{
							"call": "ft_clusterplot(cfg, stat)",
							"language": "fieldtrip",
							"argout": "[cfg]",
							"cfgfield": {
								"name": "inputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_clusterplot.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "alpha",
							"code": [
								{
									"call": "ft_clusterplot(cfg, stat)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "alpha",
										"comment": "number, highest cluster p-value to be plotted max 0.3 (default = 0.05)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "highlightseries",
							"code": [
								{
									"call": "ft_clusterplot(cfg, stat)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "highlightseries",
										"comment": "1x5 cell-array, highlight option series  with 'on', 'labels' or 'numbers' (default {'on', 'on', 'on', 'on', 'on'} for p < [0.01 0.05 0.1 0.2 0.3]"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "highlightsymbolseries",
							"code": [
								{
									"call": "ft_clusterplot(cfg, stat)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "highlightsymbolseries",
										"comment": "1x5 vector, highlight marker symbol series (default ['*', 'x', '+', 'o', '.'] for p < [0.01 0.05 0.1 0.2 0.3]"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "highlightsizeseries",
							"code": [
								{
									"call": "ft_clusterplot(cfg, stat)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "highlightsizeseries",
										"comment": "1x5 vector, highlight marker size series   (default [6 6 6 6 6] for p < [0.01 0.05 0.1 0.2 0.3])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "highlightcolorpos",
							"code": [
								{
									"call": "ft_clusterplot(cfg, stat)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "highlightcolorpos",
										"comment": "color of highlight marker for positive clusters (default = [0 0 0])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "highlightcolorneg",
							"code": [
								{
									"call": "ft_clusterplot(cfg, stat)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "highlightcolorneg",
										"comment": "color of highlight marker for negative clusters (default = [0 0 0])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "subplotsize",
							"code": [
								{
									"call": "ft_clusterplot(cfg, stat)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "subplotsize",
										"comment": "layout of subplots ([h w], default [3 5])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "saveaspng",
							"code": [
								{
									"call": "ft_clusterplot(cfg, stat)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "saveaspng",
										"comment": "string, filename of the output figures (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "visible",
							"code": [
								{
									"call": "ft_clusterplot(cfg, stat)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "visible",
										"comment": "string, 'on' or 'off' whether figure will be visible (default = 'on')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_clusterplot(cfg, stat)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_combineplanar",
					"code": [
						{
							"call": "ft_combineplanar(cfg, data)",
							"language": "fieldtrip",
							"argout": "[data]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_combineplanar.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_combineplanar(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "method",
										"comment": "'sum', 'svd', 'abssvd', or 'complex' (default = 'sum')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "updatesens",
							"code": [
								{
									"call": "ft_combineplanar(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "updatesens",
										"comment": "'no' or 'yes' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "demean",
							"code": [
								{
									"call": "ft_combineplanar(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "demean",
										"comment": "'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "baselinewindow",
							"code": [
								{
									"call": "ft_combineplanar(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "baselinewindow",
										"comment": "[begin end]"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_combineplanar(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_combineplanar(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_componentanalysis",
					"code": [
						{
							"call": "ft_componentanalysis(cfg, data)",
							"language": "fieldtrip",
							"argout": "[comp]",
							"cfgfield": {
								"name": "cellmode",
								"comment": "string, 'no' or 'yes', allows to run in cell-mode, i.e."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_componentanalysis.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "method",
										"comment": "'runica', 'fastica', 'binica', 'pca', 'svd', 'jader', 'varimax', 'dss', 'cca', 'sobi', 'white' or 'csp' (default = 'runica')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "channel",
										"comment": "cell-array with channel selection (default = 'all'), see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trials",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "trials",
										"comment": "'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "numcomponent",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "numcomponent",
										"comment": "'all' or number (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "demean",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "demean",
										"comment": "'no' or 'yes', whether to demean the input data (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "updatesens",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "updatesens",
										"comment": "'no' or 'yes' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "feedback",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "feedback",
										"comment": "'no', 'text', 'textbar', 'gui' (default = 'text')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "runica.extended",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "runica.extended",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "runica.pca",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "runica.pca",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "runica.sphering",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "runica.sphering",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "runica.weights",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "runica.weights",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "runica.lrate",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "runica.lrate",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "runica.block",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "runica.block",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "runica.anneal",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "runica.anneal",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "runica.annealdeg",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "runica.annealdeg",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "runica.stop",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "runica.stop",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "runica.maxsteps",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "runica.maxsteps",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "runica.bias",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "runica.bias",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "runica.momentum",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "runica.momentum",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "runica.specgram",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "runica.specgram",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "runica.posact",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "runica.posact",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "runica.verbose",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "runica.verbose",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "runica.logfile",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "runica.logfile",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "runica.interput",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "runica.interput",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fastica.approach",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "fastica.approach",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fastica.numOfIC",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "fastica.numOfIC",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fastica.g",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "fastica.g",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fastica.finetune",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "fastica.finetune",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fastica.a1",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "fastica.a1",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fastica.a2",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "fastica.a2",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fastica.mu",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "fastica.mu",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fastica.stabilization",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "fastica.stabilization",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fastica.epsilon",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "fastica.epsilon",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fastica.maxNumIterations",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "fastica.maxNumIterations",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fastica.maxFinetune",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "fastica.maxFinetune",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fastica.sampleSize",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "fastica.sampleSize",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fastica.initGuess",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "fastica.initGuess",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fastica.verbose",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "fastica.verbose",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fastica.displayMode",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "fastica.displayMode",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fastica.displayInterval",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "fastica.displayInterval",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fastica.firstEig",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "fastica.firstEig",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fastica.lastEig",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "fastica.lastEig",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fastica.interactivePCA",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "fastica.interactivePCA",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fastica.pcaE",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "fastica.pcaE",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fastica.pcaD",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "fastica.pcaD",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fastica.whiteSig",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "fastica.whiteSig",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fastica.whiteMat",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "fastica.whiteMat",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fastica.dewhiteMat",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "fastica.dewhiteMat",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fastica.only",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "fastica.only",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "binica.extended",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "binica.extended",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "binica.pca",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "binica.pca",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "binica.sphering",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "binica.sphering",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "binica.lrate",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "binica.lrate",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "binica.blocksize",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "binica.blocksize",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "binica.maxsteps",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "binica.maxsteps",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "binica.stop",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "binica.stop",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "binica.weightsin",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "binica.weightsin",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "binica.verbose",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "binica.verbose",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "binica.filenum",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "binica.filenum",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "binica.posact",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "binica.posact",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "binica.annealstep",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "binica.annealstep",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "binica.annealdeg",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "binica.annealdeg",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "binica.bias",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "binica.bias",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "binica.momentum",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "binica.momentum",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dss.denf.function",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "dss.denf.function",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dss.denf.params",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "dss.denf.params",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "sobi.n_sources",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "sobi.n_sources",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "sobi.p_correlations",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "sobi.p_correlations",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "csp.classlabels",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "csp.classlabels",
										"comment": "vector that assigns a trial to class 1 or 2."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "csp.numfilters",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "csp.numfilters",
										"comment": "the number of spatial filters to use (default: 6)."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "icasso.mode",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "icasso.mode",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "icasso.Niter",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "icasso.Niter",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "unmixing",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "unmixing",
										"comment": "NxN unmixing matrix"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "topolabel",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "topolabel",
										"comment": "Nx1 cell-array with the channel labels"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "randomseed",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "randomseed",
										"comment": "integer seed value of user's choice"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "randomseed",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "randomseed",
										"comment": "comp.cfg.callinfo.randomseed (from previous call)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cellmode",
							"code": [
								{
									"call": "ft_componentanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[comp]",
									"cfgfield": {
										"name": "cellmode",
										"comment": "string, 'no' or 'yes', allows to run in cell-mode, i.e."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_conjunctionanalysis",
					"code": [
						{
							"call": "ft_conjunctionanalysis(cfg, varargin)",
							"language": "fieldtrip",
							"argout": "[conjunction]"
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_conjunctionanalysis.m",
					"ports": null
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_connectivityanalysis",
					"code": [
						{
							"call": "ft_connectivityanalysis(cfg, data)",
							"language": "fieldtrip",
							"argout": "[stat]",
							"cfgfield": {
								"name": "granger.conditional",
								"comment": ""
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_connectivityanalysis.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_connectivityanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "method",
										"comment": " string, can be"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_connectivityanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "channel",
										"comment": "Nx1 cell-array containing a list of channels which are"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channelcmb",
							"code": [
								{
									"call": "ft_connectivityanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "channelcmb",
										"comment": "Nx2 cell-array containing the channel combinations on"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trials",
							"code": [
								{
									"call": "ft_connectivityanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "trials",
										"comment": "Nx1 vector specifying which trials to include for the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "feedback",
							"code": [
								{
									"call": "ft_connectivityanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "feedback",
										"comment": "string, specifying the feedback presented to the user. Default"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "partchannel",
							"code": [
								{
									"call": "ft_connectivityanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "partchannel",
										"comment": "cell-array containing a list of channels that need to be"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "complex",
							"code": [
								{
									"call": "ft_connectivityanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "complex",
										"comment": "string, 'abs' (default), 'angle', 'complex', 'imag', 'real',"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "removemean",
							"code": [
								{
									"call": "ft_connectivityanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "removemean",
										"comment": "string, 'yes' (default), or 'no', support for"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "bandwidth",
							"code": [
								{
									"call": "ft_connectivityanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "bandwidth",
										"comment": "scalar, needed for 'psi', half-bandwidth of the integration"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_connectivityanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_connectivityanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "refindx",
							"code": [
								{
									"call": "ft_connectivityanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "refindx",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "jackknife",
							"code": [
								{
									"call": "ft_connectivityanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "jackknife",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_connectivityanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "method",
										"comment": "'mi';"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "granger.block",
							"code": [
								{
									"call": "ft_connectivityanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "granger.block",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "granger.conditional",
							"code": [
								{
									"call": "ft_connectivityanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "granger.conditional",
										"comment": ""
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_connectivityplot",
					"code": [
						{
							"call": "ft_connectivityplot(cfg, varargin)",
							"language": "fieldtrip",
							"argout": "[cfg]",
							"cfgfield": {
								"name": "channel",
								"comment": "list of channels to be included for the plotting (default = 'all'), see FT_CHANNELSELECTION for details"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_connectivityplot.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "parameter",
							"code": [
								{
									"call": "ft_connectivityplot(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "parameter",
										"comment": "string, the functional parameter to be plotted (default = 'cohspctrm')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "xlim",
							"code": [
								{
									"call": "ft_connectivityplot(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "xlim",
										"comment": "selection boundaries over first dimension in data (e.g., freq)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "ylim",
							"code": [
								{
									"call": "ft_connectivityplot(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "ylim",
										"comment": "selection boundaries over second dimension in data"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "zlim",
							"code": [
								{
									"call": "ft_connectivityplot(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "zlim",
										"comment": "plotting limits for color dimension, 'maxmin', 'maxabs' or [zmin zmax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_connectivityplot(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "channel",
										"comment": "list of channels to be included for the plotting (default = 'all'), see FT_CHANNELSELECTION for details"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_connectivitysimulation",
					"code": [
						{
							"call": "ft_connectivitysimulation(cfg)",
							"language": "fieldtrip",
							"argout": "[simulated]",
							"cfgfield": {
								"name": "bpfreq",
								"comment": "nxnx2 matrix, specifying the lower and upper frequencies"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_connectivitysimulation.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_connectivitysimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "method",
										"comment": "string, can be 'linear_mix', 'mvnrnd', 'ar', 'ar_reverse' (see below)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "nsignal",
							"code": [
								{
									"call": "ft_connectivitysimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "nsignal",
										"comment": "scalar, number of signals"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "ntrials",
							"code": [
								{
									"call": "ft_connectivitysimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "ntrials",
										"comment": "scalar, number of trials"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "triallength",
							"code": [
								{
									"call": "ft_connectivitysimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "triallength",
										"comment": "in seconds"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fsample",
							"code": [
								{
									"call": "ft_connectivitysimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "fsample",
										"comment": "in Hz"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "mix",
							"code": [
								{
									"call": "ft_connectivitysimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "mix",
										"comment": "matrix, [nsignal x number of unobserved signals]"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "delay",
							"code": [
								{
									"call": "ft_connectivitysimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "delay",
										"comment": "matrix, [nsignal x number of unobserved signals]"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "bpfilter",
							"code": [
								{
									"call": "ft_connectivitysimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "bpfilter",
										"comment": "'yes' (or 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "bpfreq",
							"code": [
								{
									"call": "ft_connectivitysimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "bpfreq",
										"comment": "[bplow bphigh] (default: [15 25])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "demean",
							"code": [
								{
									"call": "ft_connectivitysimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "demean",
										"comment": "'yes' (or 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "baselinewindow",
							"code": [
								{
									"call": "ft_connectivitysimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "baselinewindow",
										"comment": "[begin end] in seconds, the default is the complete trial"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "absnoise",
							"code": [
								{
									"call": "ft_connectivitysimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "absnoise",
										"comment": "scalar (default: 1), specifying the standard deviation of"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "randomseed",
							"code": [
								{
									"call": "ft_connectivitysimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "randomseed",
										"comment": "'yes' or a number or vector with the seed value (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "covmat",
							"code": [
								{
									"call": "ft_connectivitysimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "covmat",
										"comment": "covariance matrix between the signals"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "delay",
							"code": [
								{
									"call": "ft_connectivitysimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "delay",
										"comment": "delay vector between the signals in samples"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "bpfilter",
							"code": [
								{
									"call": "ft_connectivitysimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "bpfilter",
										"comment": "'yes' (or 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "bpfreq",
							"code": [
								{
									"call": "ft_connectivitysimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "bpfreq",
										"comment": "[bplow bphigh] (default: [15 25])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "demean",
							"code": [
								{
									"call": "ft_connectivitysimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "demean",
										"comment": "'yes' (or 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "baselinewindow",
							"code": [
								{
									"call": "ft_connectivitysimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "baselinewindow",
										"comment": "[begin end] in seconds, the default is the complete trial"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "absnoise",
							"code": [
								{
									"call": "ft_connectivitysimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "absnoise",
										"comment": "scalar (default: 1), specifying the standard"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "params",
							"code": [
								{
									"call": "ft_connectivitysimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "params",
										"comment": "matrix, [nsignal x nsignal x number of lags] specifying the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "noisecov",
							"code": [
								{
									"call": "ft_connectivitysimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "noisecov",
										"comment": "matrix, [nsignal x nsignal] specifying the covariance"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "coupling",
							"code": [
								{
									"call": "ft_connectivitysimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "coupling",
										"comment": "nxn matrix, specifying coupling strength, rows causing"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "delay",
							"code": [
								{
									"call": "ft_connectivitysimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "delay",
										"comment": "nxn matrix, specifying the delay, in seconds, from one"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "ampl",
							"code": [
								{
									"call": "ft_connectivitysimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "ampl",
										"comment": "nxn matrix, specifying the amplitude"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "bpfreq",
							"code": [
								{
									"call": "ft_connectivitysimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "bpfreq",
										"comment": "nxnx2 matrix, specifying the lower and upper frequencies"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_crossfrequencyanalysis",
					"code": [
						{
							"call": "ft_crossfrequencyanalysis(cfg, freqlow, freqhigh)",
							"language": "fieldtrip",
							"argout": "crossfreq",
							"cfgfield": {
								"name": "keeptrials",
								"comment": "string, can be 'yes' or 'no'"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_crossfrequencyanalysis.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "freqlow",
							"code": [
								{
									"call": "ft_crossfrequencyanalysis(cfg, freqlow, freqhigh)",
									"language": "fieldtrip",
									"argout": "crossfreq",
									"cfgfield": {
										"name": "freqlow",
										"comment": "scalar or vector, selection of frequencies for the low frequency data"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "freqhigh",
							"code": [
								{
									"call": "ft_crossfrequencyanalysis(cfg, freqlow, freqhigh)",
									"language": "fieldtrip",
									"argout": "crossfreq",
									"cfgfield": {
										"name": "freqhigh",
										"comment": "scalar or vector, selection of frequencies for the high frequency data"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_crossfrequencyanalysis(cfg, freqlow, freqhigh)",
									"language": "fieldtrip",
									"argout": "crossfreq",
									"cfgfield": {
										"name": "channel",
										"comment": "cell-array with selection of channels, see FT_CHANNELSELECTION"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_crossfrequencyanalysis(cfg, freqlow, freqhigh)",
									"language": "fieldtrip",
									"argout": "crossfreq",
									"cfgfield": {
										"name": "method",
										"comment": "string, can be"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "keeptrials",
							"code": [
								{
									"call": "ft_crossfrequencyanalysis(cfg, freqlow, freqhigh)",
									"language": "fieldtrip",
									"argout": "crossfreq",
									"cfgfield": {
										"name": "keeptrials",
										"comment": "string, can be 'yes' or 'no'"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_databrowser",
					"code": [
						{
							"call": "ft_databrowser(cfg, data)",
							"language": "fieldtrip",
							"argout": "[cfg]",
							"cfgfield": {
								"name": "linewidth",
								"comment": "number, width of plotted lines (default = 0.5)"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_databrowser.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dataset",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "dataset",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "datafile",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "datafile",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headerfile",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "headerfile",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "ylim",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "ylim",
										"comment": "vertical scaling, can be 'maxmin', 'maxabs' or [ymin ymax] (default = 'maxabs')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "zlim",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "zlim",
										"comment": "color scaling to apply to component topographies, 'minmax', 'maxabs' (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "blocksize",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "blocksize",
										"comment": "duration in seconds for cutting the data up"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trl",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "trl",
										"comment": "structure that defines the data segments of interest, only applicable for trial-based data"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "continuous",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "continuous",
										"comment": "'yes' or 'no', whether the data should be interpreted as continuous or trial-based"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "allowoverlap",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "allowoverlap",
										"comment": "'yes' or 'no', whether data that is overlapping in multiple trials is allowed (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "channel",
										"comment": "cell-array with channel labels, see FT_CHANNELSELECTION"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channelclamped",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "channelclamped",
										"comment": "cell-array with channel labels, that (when using the 'vertical' viewmode) will always be shown at the bottom. This is useful for showing ECG/EOG channels along with the other channels"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "plotlabels",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "plotlabels",
										"comment": "'yes', 'no' or 'some', whether to plot channel labels in vertical viewmode. The option 'some' plots one label for every ten channels, which is useful if there are many channels. (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "ploteventlabels",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "ploteventlabels",
										"comment": "'type=value', 'colorvalue' (default = 'type=value');"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "plotevents",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "plotevents",
										"comment": "'no' or 'yes', whether to plot event markers. (default is 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "viewmode",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "viewmode",
										"comment": "string, 'butterfly', 'vertical', 'component' for visualizing ICA/PCA components (default is 'butterfly')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.xxx.artifact",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "artfctdef.xxx.artifact",
										"comment": "Nx2 matrix with artifact segments see FT_ARTIFACT_xxx functions"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "selectfeature",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "selectfeature",
										"comment": "string, name of feature to be selected/added (default = 'visual')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "selectmode",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "selectmode",
										"comment": "'markartifact', 'markpeakevent', 'marktroughevent' (default = 'markartifact')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "colorgroups",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "colorgroups",
										"comment": "'sequential' 'allblack' 'labelcharx' (x = xth character in label), 'chantype' or vector with length(data/hdr.label) defining groups (default = 'sequential')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channelcolormap",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "channelcolormap",
										"comment": "COLORMAP (default = customized lines map with 15 colors)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "verticalpadding",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "verticalpadding",
										"comment": "number or 'auto', padding to be added to top and bottom of plot to avoid channels largely dissappearing when viewmode = 'vertical'/'component'  (default = 'auto'). The padding is expressed as a proportion of the total height added to the top and bottom. The setting 'auto' determines the padding depending on the number of channels that are being plotted."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "selfun",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "selfun",
										"comment": "string, name of function that is evaluated using the right-click context menu. The selected data and cfg.selcfg are passed on to this function."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "selcfg",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "selcfg",
										"comment": "configuration options for function in cfg.selfun"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "seldat",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "seldat",
										"comment": "'selected' or 'all', specifies whether only the currently selected or all channels will be passed to the selfun (default = 'selected')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "renderer",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "renderer",
										"comment": "string, 'opengl', 'zbuffer', 'painters', see MATLAB Figure Properties. If this function crashes, you should try 'painters'."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "position",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "position",
										"comment": "location and size of the figure, specified as a vector of the form [left bottom width height]."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "eegscale",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "eegscale",
										"comment": "number, scaling to apply to the EEG channels prior to display"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "eogscale",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "eogscale",
										"comment": "number, scaling to apply to the EOG channels prior to display"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "ecgscale",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "ecgscale",
										"comment": "number, scaling to apply to the ECG channels prior to display"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "emgscale",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "emgscale",
										"comment": "number, scaling to apply to the EMG channels prior to display"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "megscale",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "megscale",
										"comment": "number, scaling to apply to the MEG channels prior to display"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "gradscale",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "gradscale",
										"comment": "number, scaling to apply to the MEG gradiometer channels prior to display (in addition to the cfg.megscale factor)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "magscale",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "magscale",
										"comment": "number, scaling to apply to the MEG magnetometer channels prior to display (in addition to the cfg.megscale factor)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "mychanscale",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "mychanscale",
										"comment": "number, scaling to apply to the channels specified in cfg.mychan"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "mychan",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "mychan",
										"comment": "Nx1 cell-array with selection of channels"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "chanscale",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "chanscale",
										"comment": "Nx1 vector with scaling factors, one per channel specified in cfg.channel"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "compscale",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "compscale",
										"comment": "string, 'global' or 'local', defines whether the colormap for the topographic scaling is applied per topography or on all visualized components (default 'global')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "preproc.lpfilter",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "preproc.lpfilter",
										"comment": "'no' or 'yes'  lowpass filter (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "preproc.lpfreq",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "preproc.lpfreq",
										"comment": "lowpass  frequency in Hz"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "preproc.demean",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "preproc.demean",
										"comment": "'no' or 'yes', whether to apply baseline correction (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "preproc.detrend",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "preproc.detrend",
										"comment": "'no' or 'yes', remove linear trend from the data (done per trial) (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "preproc.baselinewindow",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "preproc.baselinewindow",
										"comment": "[begin end] in seconds, the default is the complete trial (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "layout",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "layout",
										"comment": "filename of the layout, see FT_PREPARE_LAYOUT"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "elec",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "elec",
										"comment": "structure with electrode positions or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "grad",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "grad",
										"comment": "structure with gradiometer definition or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fontsize",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "fontsize",
										"comment": "number, fontsize inside the figure (default = 0.03)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fontunits",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "fontunits",
										"comment": "string, can be 'normalized', 'points', 'pixels', 'inches' or 'centimeters' (default = 'normalized')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "axisfontsize",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "axisfontsize",
										"comment": "number, fontsize along the axes (default = 10)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "axisfontunits",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "axisfontunits",
										"comment": "string, can be 'normalized', 'points', 'pixels', 'inches' or 'centimeters' (default = 'points')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "linewidth",
							"code": [
								{
									"call": "ft_databrowser(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "linewidth",
										"comment": "number, width of plotted lines (default = 0.5)"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_defacemesh",
					"code": [
						{
							"call": "ft_defacemesh(cfg, mesh)",
							"language": "fieldtrip",
							"argout": "mesh",
							"cfgfield": {
								"name": "selection",
								"comment": "which voxels to keep, can be 'inside' or 'outside' (default = 'outside')"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_defacemesh.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "translate",
							"code": [
								{
									"call": "ft_defacemesh(cfg, mesh)",
									"language": "fieldtrip",
									"argout": "mesh",
									"cfgfield": {
										"name": "translate",
										"comment": "initial position of the center of the box (default = [0 0 0])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "scale",
							"code": [
								{
									"call": "ft_defacemesh(cfg, mesh)",
									"language": "fieldtrip",
									"argout": "mesh",
									"cfgfield": {
										"name": "scale",
										"comment": "initial size of the box along each dimension (default is automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "rotate",
							"code": [
								{
									"call": "ft_defacemesh(cfg, mesh)",
									"language": "fieldtrip",
									"argout": "mesh",
									"cfgfield": {
										"name": "rotate",
										"comment": "initial rotation of the box (default = [0 0 0])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "selection",
							"code": [
								{
									"call": "ft_defacemesh(cfg, mesh)",
									"language": "fieldtrip",
									"argout": "mesh",
									"cfgfield": {
										"name": "selection",
										"comment": "which voxels to keep, can be 'inside' or 'outside' (default = 'outside')"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_defacevolume",
					"code": [
						{
							"call": "ft_defacevolume(cfg, mri)",
							"language": "fieldtrip",
							"argout": "mri",
							"cfgfield": {
								"name": "feedback",
								"comment": "'no' or 'yes', whether to provide graphical feedback (default = 'no')"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_defacevolume.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_defacevolume(cfg, mri)",
									"language": "fieldtrip",
									"argout": "mri",
									"cfgfield": {
										"name": "method",
										"comment": "'box', 'spm' (default = 'box')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "translate",
							"code": [
								{
									"call": "ft_defacevolume(cfg, mri)",
									"language": "fieldtrip",
									"argout": "mri",
									"cfgfield": {
										"name": "translate",
										"comment": "initial position of the center of the box (default = [0 0 0])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "scale",
							"code": [
								{
									"call": "ft_defacevolume(cfg, mri)",
									"language": "fieldtrip",
									"argout": "mri",
									"cfgfield": {
										"name": "scale",
										"comment": "initial size of the box along each dimension (default is automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "rotate",
							"code": [
								{
									"call": "ft_defacevolume(cfg, mri)",
									"language": "fieldtrip",
									"argout": "mri",
									"cfgfield": {
										"name": "rotate",
										"comment": "initial rotation of the box (default = [0 0 0])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "selection",
							"code": [
								{
									"call": "ft_defacevolume(cfg, mri)",
									"language": "fieldtrip",
									"argout": "mri",
									"cfgfield": {
										"name": "selection",
										"comment": "which voxels to keep, can be 'inside' or 'outside' (default = 'outside')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "smooth",
							"code": [
								{
									"call": "ft_defacevolume(cfg, mri)",
									"language": "fieldtrip",
									"argout": "mri",
									"cfgfield": {
										"name": "smooth",
										"comment": "'no' or the FWHM of the gaussian kernel in voxels (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "keepbrain",
							"code": [
								{
									"call": "ft_defacevolume(cfg, mri)",
									"language": "fieldtrip",
									"argout": "mri",
									"cfgfield": {
										"name": "keepbrain",
										"comment": "'no' or 'yes', segment and retain the brain (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "feedback",
							"code": [
								{
									"call": "ft_defacevolume(cfg, mri)",
									"language": "fieldtrip",
									"argout": "mri",
									"cfgfield": {
										"name": "feedback",
										"comment": "'no' or 'yes', whether to provide graphical feedback (default = 'no')"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_defaults",
					"code": [
						{
							"call": null,
							"language": "fieldtrip"
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_defaults.m",
					"ports": null
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_definetrial",
					"code": [
						{
							"call": "ft_definetrial(cfg)",
							"language": "fieldtrip",
							"argout": "[cfg]",
							"cfgfield": {
								"name": "trialdef.poststim",
								"comment": "number, latency in seconds (optional)"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_definetrial.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trialdef",
							"code": [
								{
									"call": "ft_definetrial(cfg)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "trialdef",
										"comment": "structure with details of trial definition, see below"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trialfun",
							"code": [
								{
									"call": "ft_definetrial(cfg)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "trialfun",
										"comment": "string with function name, see below (default = 'ft_trialfun_general')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dataset",
							"code": [
								{
									"call": "ft_definetrial(cfg)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "dataset",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headerfile",
							"code": [
								{
									"call": "ft_definetrial(cfg)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "headerfile",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "datafile",
							"code": [
								{
									"call": "ft_definetrial(cfg)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "datafile",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headerformat",
							"code": [
								{
									"call": "ft_definetrial(cfg)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "headerformat",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dataformat",
							"code": [
								{
									"call": "ft_definetrial(cfg)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "dataformat",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trialdef.eventtype",
							"code": [
								{
									"call": "ft_definetrial(cfg)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "trialdef.eventtype",
										"comment": "'string'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trialdef.eventvalue",
							"code": [
								{
									"call": "ft_definetrial(cfg)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "trialdef.eventvalue",
										"comment": "number, string or list with numbers or strings"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trialdef.prestim",
							"code": [
								{
									"call": "ft_definetrial(cfg)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "trialdef.prestim",
										"comment": "number, latency in seconds (optional)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trialdef.poststim",
							"code": [
								{
									"call": "ft_definetrial(cfg)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "trialdef.poststim",
										"comment": "number, latency in seconds (optional)"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_denoise_dssp",
					"code": [
						{
							"call": "ft_denoise_dssp(cfg, datain)",
							"language": "fieldtrip",
							"argout": "[dataout]",
							"cfgfield": {
								"name": "dssp.n_intersect",
								"comment": "scalar (default = 0.9). Number of dimensions (if"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_denoise_dssp.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_denoise_dssp(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "channel",
										"comment": "Nx1 cell-array with selection of channels (default = 'all'), see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trials",
							"code": [
								{
									"call": "ft_denoise_dssp(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "trials",
										"comment": "'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "sourcemodel",
							"code": [
								{
									"call": "ft_denoise_dssp(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "sourcemodel",
										"comment": "structure, source model with precomputed leadfields, see FT_PREPARE_LEADFIELD"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dssp",
							"code": [
								{
									"call": "ft_denoise_dssp(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "dssp",
										"comment": "structure with parameters that determine the behavior of the algorithm"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dssp.n_space",
							"code": [
								{
									"call": "ft_denoise_dssp(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "dssp.n_space",
										"comment": "'all', or scalar. Number of dimensions for the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dssp.n_in",
							"code": [
								{
									"call": "ft_denoise_dssp(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "dssp.n_in",
										"comment": "'all', or scalar. Number of dimensions of the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dssp.n_out",
							"code": [
								{
									"call": "ft_denoise_dssp(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "dssp.n_out",
										"comment": "'all', or scalar. Number of dimensions of the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dssp.n_intersect",
							"code": [
								{
									"call": "ft_denoise_dssp(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "dssp.n_intersect",
										"comment": "scalar (default = 0.9). Number of dimensions (if"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_denoise_pca",
					"code": [
						{
							"call": "ft_denoise_pca(cfg, varargin)",
							"language": "fieldtrip",
							"argout": "data",
							"cfgfield": {
								"name": "updatesens",
								"comment": "'no' or 'yes' (default = 'yes')"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_denoise_pca.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "refchannel",
							"code": [
								{
									"call": "ft_denoise_pca(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "data",
									"cfgfield": {
										"name": "refchannel",
										"comment": "the channels used as reference signal (default = 'MEGREF')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_denoise_pca(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "data",
									"cfgfield": {
										"name": "channel",
										"comment": "the channels to be denoised (default = 'MEG')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "truncate",
							"code": [
								{
									"call": "ft_denoise_pca(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "data",
									"cfgfield": {
										"name": "truncate",
										"comment": "optional truncation of the singular value spectrum (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "zscore",
							"code": [
								{
									"call": "ft_denoise_pca(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "data",
									"cfgfield": {
										"name": "zscore",
										"comment": "standardise reference data prior to PCA (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "pertrial",
							"code": [
								{
									"call": "ft_denoise_pca(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "data",
									"cfgfield": {
										"name": "pertrial",
										"comment": "'no' (default) or 'yes'. Regress out the references on a per trial basis"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trials",
							"code": [
								{
									"call": "ft_denoise_pca(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "data",
									"cfgfield": {
										"name": "trials",
										"comment": "list of trials that are used (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "updatesens",
							"code": [
								{
									"call": "ft_denoise_pca(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "data",
									"cfgfield": {
										"name": "updatesens",
										"comment": "'no' or 'yes' (default = 'yes')"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_denoise_prewhiten",
					"code": [
						{
							"call": "ft_denoise_prewhiten(cfg, datain, noise)",
							"language": "fieldtrip",
							"argout": "[dataout]",
							"cfgfield": {
								"name": "kappa",
								"comment": "scalar, truncation parameter for the inverse"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_denoise_prewhiten.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_denoise_prewhiten(cfg, datain, noise)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "channel",
										"comment": "cell-array, see FT_CHANNELSELECTION (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "split",
							"code": [
								{
									"call": "ft_denoise_prewhiten(cfg, datain, noise)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "split",
										"comment": "cell-array of channel types between which covariance is split, it can also be 'all' or 'no'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "lambda",
							"code": [
								{
									"call": "ft_denoise_prewhiten(cfg, datain, noise)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "lambda",
										"comment": "scalar, or string, regularization parameter for the inverse"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "kappa",
							"code": [
								{
									"call": "ft_denoise_prewhiten(cfg, datain, noise)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "kappa",
										"comment": "scalar, truncation parameter for the inverse"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_denoise_ssp",
					"code": [
						{
							"call": "ft_denoise_ssp(cfg, data)",
							"language": "fieldtrip",
							"argout": "[data]"
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_denoise_ssp.m",
					"ports": null
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_denoise_synthetic",
					"code": [
						{
							"call": "ft_denoise_synthetic(cfg, data)",
							"language": "fieldtrip",
							"argout": "[data]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_denoise_synthetic.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "gradient",
							"code": [
								{
									"call": "ft_denoise_synthetic(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "gradient",
										"comment": "'none', 'G1BR', 'G2BR' or 'G3BR' specifies the gradiometer"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trials",
							"code": [
								{
									"call": "ft_denoise_synthetic(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "trials",
										"comment": "'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_denoise_synthetic(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_denoise_synthetic(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_denoise_tsr",
					"code": [
						{
							"call": "ft_denoise_tsr(cfg, varargin)",
							"language": "fieldtrip",
							"argout": "dataout",
							"cfgfield": {
								"name": "performance",
								"comment": "string, 'Pearson' or 'r-squared' (default ="
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_denoise_tsr.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "refchannel",
							"code": [
								{
									"call": "ft_denoise_tsr(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "dataout",
									"cfgfield": {
										"name": "refchannel",
										"comment": "the channels used as reference signal (default = 'MEGREF'), see FT_SELECTDATA"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_denoise_tsr(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "dataout",
									"cfgfield": {
										"name": "channel",
										"comment": "the channels to be denoised (default = 'all'), see FT_SELECTDATA"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_denoise_tsr(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "dataout",
									"cfgfield": {
										"name": "method",
										"comment": "string, 'mlr', 'cca', 'pls', 'svd', option specifying the criterion for the regression"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "reflags",
							"code": [
								{
									"call": "ft_denoise_tsr(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "dataout",
									"cfgfield": {
										"name": "reflags",
										"comment": "integer array, specifying temporal lags (in msec) by which to shift refchannel"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trials",
							"code": [
								{
									"call": "ft_denoise_tsr(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "dataout",
									"cfgfield": {
										"name": "trials",
										"comment": "integer array, trials to be used in regression, see FT_SELECTDATA"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "testtrials",
							"code": [
								{
									"call": "ft_denoise_tsr(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "dataout",
									"cfgfield": {
										"name": "testtrials",
										"comment": "cell-array or string, trial indices to be used as test folds in a cross-validation scheme"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "nfold",
							"code": [
								{
									"call": "ft_denoise_tsr(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "dataout",
									"cfgfield": {
										"name": "nfold",
										"comment": "scalar, indicating the number of test folds to"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "standardiserefdata",
							"code": [
								{
									"call": "ft_denoise_tsr(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "dataout",
									"cfgfield": {
										"name": "standardiserefdata",
										"comment": "string, 'yes' or 'no', whether or not to standardise reference data"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "standardisedata",
							"code": [
								{
									"call": "ft_denoise_tsr(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "dataout",
									"cfgfield": {
										"name": "standardisedata",
										"comment": "string, 'yes' or 'no', whether or not to standardise dependent variable"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "demeanrefdata",
							"code": [
								{
									"call": "ft_denoise_tsr(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "dataout",
									"cfgfield": {
										"name": "demeanrefdata",
										"comment": "string, 'yes' or 'no', whether or not to make"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "demeandata",
							"code": [
								{
									"call": "ft_denoise_tsr(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "dataout",
									"cfgfield": {
										"name": "demeandata",
										"comment": "string, 'yes' or 'no', whether or not to make"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "threshold",
							"code": [
								{
									"call": "ft_denoise_tsr(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "dataout",
									"cfgfield": {
										"name": "threshold",
										"comment": "integer array, ([1 by 2] or [1 by numel(cfg.channel) + numel(cfg.reflags)]),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "updatesens",
							"code": [
								{
									"call": "ft_denoise_tsr(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "dataout",
									"cfgfield": {
										"name": "updatesens",
										"comment": "string, 'yes' or 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "perchannel",
							"code": [
								{
									"call": "ft_denoise_tsr(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "dataout",
									"cfgfield": {
										"name": "perchannel",
										"comment": "string, 'yes' or 'no', or logical, whether or not to perform estimation of beta weights"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "output",
							"code": [
								{
									"call": "ft_denoise_tsr(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "dataout",
									"cfgfield": {
										"name": "output",
										"comment": "string, 'model' or 'residual' (defaul = 'model'),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "performance",
							"code": [
								{
									"call": "ft_denoise_tsr(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "dataout",
									"cfgfield": {
										"name": "performance",
										"comment": "string, 'Pearson' or 'r-squared' (default ="
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_detect_movement",
					"code": [
						{
							"call": "ft_detect_movement(cfg, data)",
							"language": "fieldtrip",
							"argout": "[cfg, movement]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_detect_movement.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_detect_movement(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, movement]",
									"cfgfield": {
										"name": "method",
										"comment": "string representing the method for movement detection"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_detect_movement(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, movement]",
									"cfgfield": {
										"name": "channel",
										"comment": "Nx1 cell-array with selection of channels, see FT_CHANNELSELECTION for details, (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trials",
							"code": [
								{
									"call": "ft_detect_movement(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, movement]",
									"cfgfield": {
										"name": "trials",
										"comment": "'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_detect_movement(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, movement]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_detect_movement(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg, movement]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_dipolefitting",
					"code": [
						{
							"call": "ft_dipolefitting(cfg, data)",
							"language": "fieldtrip",
							"argout": "[source]",
							"cfgfield": {
								"name": "dipfit.noisecov",
								"comment": "noise covariance matrix, see e.g. FT_TIMELOCK_ANALYSIS"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_dipolefitting.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "numdipoles",
							"code": [
								{
									"call": "ft_dipolefitting(cfg, data)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "numdipoles",
										"comment": "number, default is 1"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "symmetry",
							"code": [
								{
									"call": "ft_dipolefitting(cfg, data)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "symmetry",
										"comment": "'x', 'y' or 'z' symmetry for two dipoles, can be empty (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_dipolefitting(cfg, data)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "channel",
										"comment": "Nx1 cell-array with selection of channels (default = 'all'),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "gridsearch",
							"code": [
								{
									"call": "ft_dipolefitting(cfg, data)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "gridsearch",
										"comment": "'yes' or 'no', perform global search for initial"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "nonlinear",
							"code": [
								{
									"call": "ft_dipolefitting(cfg, data)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "nonlinear",
										"comment": "'yes' or 'no', perform nonlinear search for optimal"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "xgrid",
							"code": [
								{
									"call": "ft_dipolefitting(cfg, data)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "xgrid",
										"comment": "vector (e.g. -20:1:20) or 'auto' (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "ygrid",
							"code": [
								{
									"call": "ft_dipolefitting(cfg, data)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "ygrid",
										"comment": "vector (e.g. -20:1:20) or 'auto' (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "zgrid",
							"code": [
								{
									"call": "ft_dipolefitting(cfg, data)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "zgrid",
										"comment": "vector (e.g.   0:1:20) or 'auto' (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "resolution",
							"code": [
								{
									"call": "ft_dipolefitting(cfg, data)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "resolution",
										"comment": "number (e.g. 1 cm) for automatic grid generation"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "sourcemodel.pos",
							"code": [
								{
									"call": "ft_dipolefitting(cfg, data)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "sourcemodel.pos",
										"comment": "N*3 matrix with the vertex positions of the cortical sheet"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "sourcemodel.tri",
							"code": [
								{
									"call": "ft_dipolefitting(cfg, data)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "sourcemodel.tri",
										"comment": "M*3 matrix that describes the triangles connecting the vertices"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "sourcemodel.pos",
							"code": [
								{
									"call": "ft_dipolefitting(cfg, data)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "sourcemodel.pos",
										"comment": "N*3 matrix with position of each source"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "sourcemodel.inside",
							"code": [
								{
									"call": "ft_dipolefitting(cfg, data)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "sourcemodel.inside",
										"comment": "N*1 vector with boolean value whether grid point is inside brain (optional)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "sourcemodel.dim",
							"code": [
								{
									"call": "ft_dipolefitting(cfg, data)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "sourcemodel.dim",
										"comment": "[Nx Ny Nz] vector with dimensions in case of 3-D grid (optional)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dip.pos",
							"code": [
								{
									"call": "ft_dipolefitting(cfg, data)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "dip.pos",
										"comment": "initial dipole position, matrix of Ndipoles x 3"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "latency",
							"code": [
								{
									"call": "ft_dipolefitting(cfg, data)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "latency",
										"comment": "[begin end] in seconds or 'all' (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "model",
							"code": [
								{
									"call": "ft_dipolefitting(cfg, data)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "model",
										"comment": "'moving' or 'regional'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "component",
							"code": [
								{
									"call": "ft_dipolefitting(cfg, data)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "component",
										"comment": "array with numbers (can be empty -> all)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "frequency",
							"code": [
								{
									"call": "ft_dipolefitting(cfg, data)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "frequency",
										"comment": "single number (in Hz)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dipfit.display",
							"code": [
								{
									"call": "ft_dipolefitting(cfg, data)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "dipfit.display",
										"comment": "level of display, can be 'off', 'iter', 'notify' or 'final' (default = 'iter')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dipfit.optimfun",
							"code": [
								{
									"call": "ft_dipolefitting(cfg, data)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "dipfit.optimfun",
										"comment": "function to use, can be 'fminsearch' or 'fminunc' (default is determined automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dipfit.maxiter",
							"code": [
								{
									"call": "ft_dipolefitting(cfg, data)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "dipfit.maxiter",
										"comment": "maximum number of function evaluations allowed (default depends on the optimfun)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dipfit.checkinside",
							"code": [
								{
									"call": "ft_dipolefitting(cfg, data)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "dipfit.checkinside",
										"comment": "boolean, check that the dipole remains in the source compartment (default = false)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "reducerank",
							"code": [
								{
									"call": "ft_dipolefitting(cfg, data)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "reducerank",
										"comment": "'no', or number (default = 3 for EEG, 2 for MEG)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "normalize",
							"code": [
								{
									"call": "ft_dipolefitting(cfg, data)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "normalize",
										"comment": "'no', 'yes' or 'column'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "normalizeparam",
							"code": [
								{
									"call": "ft_dipolefitting(cfg, data)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "normalizeparam",
										"comment": "parameter for depth normalization (default = 0.5)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "weight",
							"code": [
								{
									"call": "ft_dipolefitting(cfg, data)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "weight",
										"comment": "number or 1xN vector, weight for each dipole position to compensate for the size of the corresponding patch (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "backproject",
							"code": [
								{
									"call": "ft_dipolefitting(cfg, data)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "backproject",
										"comment": "'yes' (default) or 'no', in the case of a rank reduction this parameter determines whether the result will be backprojected onto the original subspace"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headmodel",
							"code": [
								{
									"call": "ft_dipolefitting(cfg, data)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "headmodel",
										"comment": "structure with volume conduction model, see FT_PREPARE_HEADMODEL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "elec",
							"code": [
								{
									"call": "ft_dipolefitting(cfg, data)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "elec",
										"comment": "structure with electrode positions or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "grad",
							"code": [
								{
									"call": "ft_dipolefitting(cfg, data)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "grad",
										"comment": "structure with gradiometer definition or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_dipolefitting(cfg, data)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_dipolefitting(cfg, data)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dipfit.constr",
							"code": [
								{
									"call": "ft_dipolefitting(cfg, data)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "dipfit.constr",
										"comment": "Source model constraints, depends on cfg.symmetry"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dipfit.noisecov",
							"code": [
								{
									"call": "ft_dipolefitting(cfg, data)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "dipfit.noisecov",
										"comment": "noise covariance matrix, see e.g. FT_TIMELOCK_ANALYSIS"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_dipolesimulation",
					"code": [
						{
							"call": "ft_dipolesimulation(cfg)",
							"language": "fieldtrip",
							"argout": "[simulated]",
							"cfgfield": {
								"name": "grad",
								"comment": "structure with gradiometer definition or filename, see FT_READ_SENS"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_dipolesimulation.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dip.pos",
							"code": [
								{
									"call": "ft_dipolesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "dip.pos",
										"comment": "[Rx Ry Rz] (size Nx3)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dip.mom",
							"code": [
								{
									"call": "ft_dipolesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "dip.mom",
										"comment": "[Qx Qy Qz] (size 3xN)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dip.signal",
							"code": [
								{
									"call": "ft_dipolesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "dip.signal",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dip.frequency",
							"code": [
								{
									"call": "ft_dipolesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "dip.frequency",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dip.phase",
							"code": [
								{
									"call": "ft_dipolesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "dip.phase",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dip.amplitude",
							"code": [
								{
									"call": "ft_dipolesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "dip.amplitude",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "ntrials",
							"code": [
								{
									"call": "ft_dipolesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "ntrials",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "triallength",
							"code": [
								{
									"call": "ft_dipolesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "triallength",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fsample",
							"code": [
								{
									"call": "ft_dipolesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "fsample",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "relnoise",
							"code": [
								{
									"call": "ft_dipolesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "relnoise",
										"comment": "add noise with level relative to simulated signal"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "absnoise",
							"code": [
								{
									"call": "ft_dipolesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "absnoise",
										"comment": "add noise with absolute level"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "randomseed",
							"code": [
								{
									"call": "ft_dipolesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "randomseed",
										"comment": "'yes' or a number or vector with the seed value (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_dipolesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "channel",
										"comment": "Nx1 cell-array with selection of channels (default = 'all'),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dipoleunit",
							"code": [
								{
									"call": "ft_dipolesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "dipoleunit",
										"comment": "units for dipole amplitude (default nA*m)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "chanunit",
							"code": [
								{
									"call": "ft_dipolesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "chanunit",
										"comment": "units for the channel data"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headmodel",
							"code": [
								{
									"call": "ft_dipolesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "headmodel",
										"comment": "structure with volume conduction model, see FT_PREPARE_HEADMODEL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "elec",
							"code": [
								{
									"call": "ft_dipolesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "elec",
										"comment": "structure with electrode positions or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "grad",
							"code": [
								{
									"call": "ft_dipolesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[simulated]",
									"cfgfield": {
										"name": "grad",
										"comment": "structure with gradiometer definition or filename, see FT_READ_SENS"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_electrodeplacement",
					"code": [
						{
							"call": "ft_electrodeplacement(cfg, varargin)",
							"language": "fieldtrip",
							"argout": "[elec]",
							"cfgfield": {
								"name": "grid.corner4",
								"comment": "1x3 position of the lower right corner point"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_electrodeplacement.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_electrodeplacement(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[elec]",
									"cfgfield": {
										"name": "method",
										"comment": "string representing the method for placing the electrodes"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "parameter",
							"code": [
								{
									"call": "ft_electrodeplacement(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[elec]",
									"cfgfield": {
										"name": "parameter",
										"comment": "string, field in data (default = 'anatomy' if present in data)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_electrodeplacement(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[elec]",
									"cfgfield": {
										"name": "channel",
										"comment": "Nx1 cell-array with selection of channels (default = {'1' '2' ...})"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "elec",
							"code": [
								{
									"call": "ft_electrodeplacement(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[elec]",
									"cfgfield": {
										"name": "elec",
										"comment": "struct containing previously placed electrodes (this overwrites cfg.channel)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "clim",
							"code": [
								{
									"call": "ft_electrodeplacement(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[elec]",
									"cfgfield": {
										"name": "clim",
										"comment": "color range of the data (default = [0 1], i.e. the full range)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "magtype",
							"code": [
								{
									"call": "ft_electrodeplacement(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[elec]",
									"cfgfield": {
										"name": "magtype",
										"comment": "string representing the 'magnet' type used for placing the electrodes"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "magradius",
							"code": [
								{
									"call": "ft_electrodeplacement(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[elec]",
									"cfgfield": {
										"name": "magradius",
										"comment": "number representing the radius for the cfg.magtype based search (default = 3)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fiducial.nas",
							"code": [
								{
									"call": "ft_electrodeplacement(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[elec]",
									"cfgfield": {
										"name": "fiducial.nas",
										"comment": "1x3 vector with coordinates"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fiducial.ini",
							"code": [
								{
									"call": "ft_electrodeplacement(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[elec]",
									"cfgfield": {
										"name": "fiducial.ini",
										"comment": "1x3 vector with coordinates"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fiducial.lpa",
							"code": [
								{
									"call": "ft_electrodeplacement(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[elec]",
									"cfgfield": {
										"name": "fiducial.lpa",
										"comment": "1x3 vector with coordinates"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fiducial.rpa",
							"code": [
								{
									"call": "ft_electrodeplacement(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[elec]",
									"cfgfield": {
										"name": "fiducial.rpa",
										"comment": "1x3 vector with coordinates"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "feedback",
							"code": [
								{
									"call": "ft_electrodeplacement(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[elec]",
									"cfgfield": {
										"name": "feedback",
										"comment": "string, can be 'yes' or 'no' for detailled feedback (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "shaft.tip",
							"code": [
								{
									"call": "ft_electrodeplacement(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[elec]",
									"cfgfield": {
										"name": "shaft.tip",
										"comment": "1x3 position of the electrode at the tip of the shaft"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "shaft.along",
							"code": [
								{
									"call": "ft_electrodeplacement(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[elec]",
									"cfgfield": {
										"name": "shaft.along",
										"comment": "1x3 or Nx3 positions along the shaft"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "shaft.distance",
							"code": [
								{
									"call": "ft_electrodeplacement(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[elec]",
									"cfgfield": {
										"name": "shaft.distance",
										"comment": "scalar, distance between electrodes"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "grid.corner1",
							"code": [
								{
									"call": "ft_electrodeplacement(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[elec]",
									"cfgfield": {
										"name": "grid.corner1",
										"comment": "1x3 position of the upper left corner point"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "grid.corner2",
							"code": [
								{
									"call": "ft_electrodeplacement(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[elec]",
									"cfgfield": {
										"name": "grid.corner2",
										"comment": "1x3 position of the upper right corner point"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "grid.corner3",
							"code": [
								{
									"call": "ft_electrodeplacement(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[elec]",
									"cfgfield": {
										"name": "grid.corner3",
										"comment": "1x3 position of the lower left corner point"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "grid.corner4",
							"code": [
								{
									"call": "ft_electrodeplacement(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[elec]",
									"cfgfield": {
										"name": "grid.corner4",
										"comment": "1x3 position of the lower right corner point"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_electroderealign",
					"code": [
						{
							"call": "ft_electroderealign(cfg, elec_original)",
							"language": "fieldtrip",
							"argout": "[elec_realigned]",
							"cfgfield": {
								"name": "fshome",
								"comment": "string, path to freesurfer"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_electroderealign.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_electroderealign(cfg, elec_original)",
									"language": "fieldtrip",
									"argout": "[elec_realigned]",
									"cfgfield": {
										"name": "method",
										"comment": "string representing the method for aligning or placing the electrodes"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "warp",
							"code": [
								{
									"call": "ft_electroderealign(cfg, elec_original)",
									"language": "fieldtrip",
									"argout": "[elec_realigned]",
									"cfgfield": {
										"name": "warp",
										"comment": "string describing the spatial transformation for the template and headshape methods"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_electroderealign(cfg, elec_original)",
									"language": "fieldtrip",
									"argout": "[elec_realigned]",
									"cfgfield": {
										"name": "channel",
										"comment": "Nx1 cell-array with selection of channels (default = 'all'),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "keepchannel",
							"code": [
								{
									"call": "ft_electroderealign(cfg, elec_original)",
									"language": "fieldtrip",
									"argout": "[elec_realigned]",
									"cfgfield": {
										"name": "keepchannel",
										"comment": "string, 'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fiducial",
							"code": [
								{
									"call": "ft_electroderealign(cfg, elec_original)",
									"language": "fieldtrip",
									"argout": "[elec_realigned]",
									"cfgfield": {
										"name": "fiducial",
										"comment": "cell-array with the name of three fiducials used for"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "casesensitive",
							"code": [
								{
									"call": "ft_electroderealign(cfg, elec_original)",
									"language": "fieldtrip",
									"argout": "[elec_realigned]",
									"cfgfield": {
										"name": "casesensitive",
										"comment": "'yes' or 'no', determines whether string comparisons"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "feedback",
							"code": [
								{
									"call": "ft_electroderealign(cfg, elec_original)",
									"language": "fieldtrip",
									"argout": "[elec_realigned]",
									"cfgfield": {
										"name": "feedback",
										"comment": "'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "elec",
							"code": [
								{
									"call": "ft_electroderealign(cfg, elec_original)",
									"language": "fieldtrip",
									"argout": "[elec_realigned]",
									"cfgfield": {
										"name": "elec",
										"comment": "structure with electrode positions or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "target.pos(1,:)",
							"code": [
								{
									"call": "ft_electroderealign(cfg, elec_original)",
									"language": "fieldtrip",
									"argout": "[elec_realigned]",
									"cfgfield": {
										"name": "target.pos(1,:)",
										"comment": "[110 0 0]     % location of the nose"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "target.pos(2,:)",
							"code": [
								{
									"call": "ft_electroderealign(cfg, elec_original)",
									"language": "fieldtrip",
									"argout": "[elec_realigned]",
									"cfgfield": {
										"name": "target.pos(2,:)",
										"comment": "[0  90 0]     % location of the left ear"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "target.pos(3,:)",
							"code": [
								{
									"call": "ft_electroderealign(cfg, elec_original)",
									"language": "fieldtrip",
									"argout": "[elec_realigned]",
									"cfgfield": {
										"name": "target.pos(3,:)",
										"comment": "[0 -90 0]     % location of the right ear"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "target.label",
							"code": [
								{
									"call": "ft_electroderealign(cfg, elec_original)",
									"language": "fieldtrip",
									"argout": "[elec_realigned]",
									"cfgfield": {
										"name": "target.label",
										"comment": "{'NAS', 'LPA', 'RPA'}"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "target",
							"code": [
								{
									"call": "ft_electroderealign(cfg, elec_original)",
									"language": "fieldtrip",
									"argout": "[elec_realigned]",
									"cfgfield": {
										"name": "target",
										"comment": "single electrode set that serves as standard"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "target{1..N}",
							"code": [
								{
									"call": "ft_electroderealign(cfg, elec_original)",
									"language": "fieldtrip",
									"argout": "[elec_realigned]",
									"cfgfield": {
										"name": "target{1..N}",
										"comment": "list of electrode sets that will be averaged"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headshape",
							"code": [
								{
									"call": "ft_electroderealign(cfg, elec_original)",
									"language": "fieldtrip",
									"argout": "[elec_realigned]",
									"cfgfield": {
										"name": "headshape",
										"comment": "a filename containing headshape, a structure containing a"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_electroderealign(cfg, elec_original)",
									"language": "fieldtrip",
									"argout": "[elec_realigned]",
									"cfgfield": {
										"name": "method",
										"comment": "'headshape'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "warp",
							"code": [
								{
									"call": "ft_electroderealign(cfg, elec_original)",
									"language": "fieldtrip",
									"argout": "[elec_realigned]",
									"cfgfield": {
										"name": "warp",
										"comment": "'dykstra2012', or 'hermes2010'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headshape",
							"code": [
								{
									"call": "ft_electroderealign(cfg, elec_original)",
									"language": "fieldtrip",
									"argout": "[elec_realigned]",
									"cfgfield": {
										"name": "headshape",
										"comment": "a filename containing headshape, a structure containing a"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "feedback",
							"code": [
								{
									"call": "ft_electroderealign(cfg, elec_original)",
									"language": "fieldtrip",
									"argout": "[elec_realigned]",
									"cfgfield": {
										"name": "feedback",
										"comment": "'yes' or 'no' (default), feedback of the iteration procedure"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "maxiter",
							"code": [
								{
									"call": "ft_electroderealign(cfg, elec_original)",
									"language": "fieldtrip",
									"argout": "[elec_realigned]",
									"cfgfield": {
										"name": "maxiter",
										"comment": "number (default: 50), maximum number of optimization iterations"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "pairmethod",
							"code": [
								{
									"call": "ft_electroderealign(cfg, elec_original)",
									"language": "fieldtrip",
									"argout": "[elec_realigned]",
									"cfgfield": {
										"name": "pairmethod",
										"comment": "'pos' (default) or 'label', the method for electrode"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "isodistance",
							"code": [
								{
									"call": "ft_electroderealign(cfg, elec_original)",
									"language": "fieldtrip",
									"argout": "[elec_realigned]",
									"cfgfield": {
										"name": "isodistance",
										"comment": "'yes', 'no' (default) or number, to enforce isotropic"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "deformweight",
							"code": [
								{
									"call": "ft_electroderealign(cfg, elec_original)",
									"language": "fieldtrip",
									"argout": "[elec_realigned]",
									"cfgfield": {
										"name": "deformweight",
										"comment": "number (default: 1), weight of deformation relative "
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "moveinward",
							"code": [
								{
									"call": "ft_electroderealign(cfg, elec_original)",
									"language": "fieldtrip",
									"argout": "[elec_realigned]",
									"cfgfield": {
										"name": "moveinward",
										"comment": "number, the distance that the electrode should be moved"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_electroderealign(cfg, elec_original)",
									"language": "fieldtrip",
									"argout": "[elec_realigned]",
									"cfgfield": {
										"name": "method",
										"comment": "'headshape'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "warp",
							"code": [
								{
									"call": "ft_electroderealign(cfg, elec_original)",
									"language": "fieldtrip",
									"argout": "[elec_realigned]",
									"cfgfield": {
										"name": "warp",
										"comment": "'fsaverage'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headshape",
							"code": [
								{
									"call": "ft_electroderealign(cfg, elec_original)",
									"language": "fieldtrip",
									"argout": "[elec_realigned]",
									"cfgfield": {
										"name": "headshape",
										"comment": "string, filename containing subject headshape (e.g. <path to freesurfer/surf/lh.pial>)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fshome",
							"code": [
								{
									"call": "ft_electroderealign(cfg, elec_original)",
									"language": "fieldtrip",
									"argout": "[elec_realigned]",
									"cfgfield": {
										"name": "fshome",
										"comment": "string, path to freesurfer"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_electrodermalactivity",
					"code": [
						{
							"call": "ft_electrodermalactivity(cfg, datain)",
							"language": "fieldtrip",
							"argout": "[dataout]",
							"cfgfield": {
								"name": "medianwindow",
								"comment": "scalar, length of window for median filter in seconds (default = 8)"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_electrodermalactivity.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_electrodermalactivity(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "channel",
										"comment": "selected channel for processing, see FT_CHANNELSELECTION"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "feedback",
							"code": [
								{
									"call": "ft_electrodermalactivity(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "feedback",
										"comment": "'yes' or 'no'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "medianwindow",
							"code": [
								{
									"call": "ft_electrodermalactivity(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "medianwindow",
										"comment": "scalar, length of window for median filter in seconds (default = 8)"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_examplefunction",
					"code": [
						{
							"call": "ft_examplefunction(cfg, datain)",
							"language": "fieldtrip",
							"argout": "[dataout]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_examplefunction.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "option3",
							"code": [
								{
									"call": "ft_examplefunction(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "option3",
										"comment": "value, explain it here (default is automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_examplefunction(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_examplefunction(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_freqanalysis",
					"code": [
						{
							"call": "ft_freqanalysis(cfg, data)",
							"language": "fieldtrip",
							"argout": "[freq]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_freqanalysis.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_freqanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "method",
										"comment": "different methods of calculating the spectra"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "output",
							"code": [
								{
									"call": "ft_freqanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "output",
										"comment": "'pow'       return the power-spectra"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_freqanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "channel",
										"comment": "Nx1 cell-array with selection of channels (default = 'all'),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channelcmb",
							"code": [
								{
									"call": "ft_freqanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "channelcmb",
										"comment": "Mx2 cell-array with selection of channel pairs (default = {'all' 'all'}),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trials",
							"code": [
								{
									"call": "ft_freqanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "trials",
										"comment": "'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "keeptrials",
							"code": [
								{
									"call": "ft_freqanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "keeptrials",
										"comment": "'yes' or 'no', return individual trials or average (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "keeptapers",
							"code": [
								{
									"call": "ft_freqanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "keeptapers",
										"comment": "'yes' or 'no', return individual tapers or average (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "pad",
							"code": [
								{
									"call": "ft_freqanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "pad",
										"comment": "number, 'nextpow2', or 'maxperlen' (default), length"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "padtype",
							"code": [
								{
									"call": "ft_freqanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "padtype",
										"comment": "string, type of padding (default 'zero', see"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "polyremoval",
							"code": [
								{
									"call": "ft_freqanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "polyremoval",
										"comment": "number (default = 0), specifying the order of the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "taper",
							"code": [
								{
									"call": "ft_freqanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "taper",
										"comment": "'dpss', 'hanning' or many others, see WINDOW (default = 'dpss')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "foilim",
							"code": [
								{
									"call": "ft_freqanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "foilim",
										"comment": "[begin end], frequency band of interest"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "foi",
							"code": [
								{
									"call": "ft_freqanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "foi",
										"comment": "vector 1 x numfoi, frequencies of interest"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "tapsmofrq",
							"code": [
								{
									"call": "ft_freqanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "tapsmofrq",
										"comment": "number, the amount of spectral smoothing through"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "tapsmofrq",
							"code": [
								{
									"call": "ft_freqanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "tapsmofrq",
										"comment": "vector 1 x numfoi, the amount of spectral smoothing"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "foi",
							"code": [
								{
									"call": "ft_freqanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "foi",
										"comment": "vector 1 x numfoi, frequencies of interest"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "foilim",
							"code": [
								{
									"call": "ft_freqanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "foilim",
										"comment": "[begin end], frequency band of interest"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "toi",
							"code": [
								{
									"call": "ft_freqanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "toi",
										"comment": "vector 1 x numtoi, the times on which the analysis"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "width",
							"code": [
								{
									"call": "ft_freqanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "width",
										"comment": "'width', or number of cycles, of the wavelet (default = 7)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "gwidth",
							"code": [
								{
									"call": "ft_freqanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "gwidth",
										"comment": "determines the length of the used wavelets in standard"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "foi",
							"code": [
								{
									"call": "ft_freqanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "foi",
										"comment": "vector 1 x numfoi, frequencies of interest"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "foilim",
							"code": [
								{
									"call": "ft_freqanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "foilim",
										"comment": "[begin end], frequency band of interest"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "width",
							"code": [
								{
									"call": "ft_freqanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "width",
										"comment": "'width', or number of cycles, of the wavelet (default = 7)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "gwidth",
							"code": [
								{
									"call": "ft_freqanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "gwidth",
										"comment": "determines the length of the used wavelets in standard"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_freqanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_freqanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_freqanalysis_mvar",
					"code": [
						{
							"call": "ft_freqanalysis_mvar(cfg, data)",
							"language": "fieldtrip",
							"argout": "[freq]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_freqanalysis_mvar.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "foi",
							"code": [
								{
									"call": "ft_freqanalysis_mvar(cfg, data)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "foi",
										"comment": "vector with the frequencies at which the spectral quantities"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "feedback",
							"code": [
								{
									"call": "ft_freqanalysis_mvar(cfg, data)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "feedback",
										"comment": "'none', or any of the methods supported by FT_PROGRESS,"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_freqanalysis_mvar(cfg, data)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_freqanalysis_mvar(cfg, data)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_freqbaseline",
					"code": [
						{
							"call": "ft_freqbaseline(cfg, freq)",
							"language": "fieldtrip",
							"argout": "[freq]",
							"cfgfield": {
								"name": "outputfile",
								"comment": "one can specify output as file to save to disk"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_freqbaseline.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "baseline",
							"code": [
								{
									"call": "ft_freqbaseline(cfg, freq)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "baseline",
										"comment": "[begin end] (default = 'no'), alternatively an"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "baselinetype",
							"code": [
								{
									"call": "ft_freqbaseline(cfg, freq)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "baselinetype",
										"comment": "'absolute', 'relative', 'relchange', 'normchange', 'db', 'vssum' or 'zscore' (default = 'absolute')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "parameter",
							"code": [
								{
									"call": "ft_freqbaseline(cfg, freq)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "parameter",
										"comment": "field for which to apply baseline normalization, or"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_freqbaseline(cfg, freq)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "inputfile",
										"comment": "one can specifiy preanalysed saved data as input"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_freqbaseline(cfg, freq)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "outputfile",
										"comment": "one can specify output as file to save to disk"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_freqdescriptives",
					"code": [
						{
							"call": "ft_freqdescriptives(cfg, freq)",
							"language": "fieldtrip",
							"argout": "[freq]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_freqdescriptives.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "variance",
							"code": [
								{
									"call": "ft_freqdescriptives(cfg, freq)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "variance",
										"comment": "'yes' or 'no', estimate standard error in the standard way (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "jackknife",
							"code": [
								{
									"call": "ft_freqdescriptives(cfg, freq)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "jackknife",
										"comment": "'yes' or 'no', estimate standard error by means of the jack-knife (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "keeptrials",
							"code": [
								{
									"call": "ft_freqdescriptives(cfg, freq)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "keeptrials",
										"comment": "'yes' or 'no', estimate single trial power (useful for fourier data) (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_freqdescriptives(cfg, freq)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "channel",
										"comment": "Nx1 cell-array with selection of channels (default = 'all'),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trials",
							"code": [
								{
									"call": "ft_freqdescriptives(cfg, freq)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "trials",
										"comment": "'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "frequency",
							"code": [
								{
									"call": "ft_freqdescriptives(cfg, freq)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "frequency",
										"comment": "[fmin fmax] or 'all', to specify a subset of frequencies (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "latency",
							"code": [
								{
									"call": "ft_freqdescriptives(cfg, freq)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "latency",
										"comment": "[tmin tmax] or 'all', to specify a subset of latencies (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_freqdescriptives(cfg, freq)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_freqdescriptives(cfg, freq)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_freqgrandaverage",
					"code": [
						{
							"call": "ft_freqgrandaverage(cfg, varargin)",
							"language": "fieldtrip",
							"argout": "[grandavg]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_freqgrandaverage.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "keepindividual",
							"code": [
								{
									"call": "ft_freqgrandaverage(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[grandavg]",
									"cfgfield": {
										"name": "keepindividual",
										"comment": "'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "foilim",
							"code": [
								{
									"call": "ft_freqgrandaverage(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[grandavg]",
									"cfgfield": {
										"name": "foilim",
										"comment": "[fmin fmax] or 'all', to specify a subset of frequencies (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "toilim",
							"code": [
								{
									"call": "ft_freqgrandaverage(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[grandavg]",
									"cfgfield": {
										"name": "toilim",
										"comment": "[tmin tmax] or 'all', to specify a subset of latencies (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_freqgrandaverage(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[grandavg]",
									"cfgfield": {
										"name": "channel",
										"comment": "Nx1 cell-array with selection of channels (default = 'all'),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "parameter",
							"code": [
								{
									"call": "ft_freqgrandaverage(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[grandavg]",
									"cfgfield": {
										"name": "parameter",
										"comment": "string or cell-array of strings indicating which"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_freqgrandaverage(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[grandavg]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_freqgrandaverage(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[grandavg]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_freqinterpolate",
					"code": [
						{
							"call": "ft_freqinterpolate(cfg, freq)",
							"language": "fieldtrip",
							"argout": "[freq]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_freqinterpolate.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_freqinterpolate(cfg, freq)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "method",
										"comment": "'nan', 'linear' (default = 'nan')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "foilim",
							"code": [
								{
									"call": "ft_freqinterpolate(cfg, freq)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "foilim",
										"comment": "Nx2 matrix with begin and end of each interval to be"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_freqinterpolate(cfg, freq)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_freqinterpolate(cfg, freq)",
									"language": "fieldtrip",
									"argout": "[freq]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_freqsimulation",
					"code": [
						{
							"call": "ft_freqsimulation(cfg)",
							"language": "fieldtrip",
							"argout": "[data]",
							"cfgfield": {
								"name": "time",
								"comment": "cell-array with one time axis per trial, which are for example obtained from an existing dataset"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_freqsimulation.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_freqsimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "method",
										"comment": "The methods are explained in more detail below, but they can be"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "output",
							"code": [
								{
									"call": "ft_freqsimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "output",
										"comment": "which channels should be in the output data, can be 'mixed' or 'all' (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "randomseed",
							"code": [
								{
									"call": "ft_freqsimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "randomseed",
										"comment": "'yes' or a number or vector with the seed value (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fsample",
							"code": [
								{
									"call": "ft_freqsimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "fsample",
										"comment": "simulated sample frequency"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trllen",
							"code": [
								{
									"call": "ft_freqsimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "trllen",
										"comment": "length of simulated trials in seconds"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "numtrl",
							"code": [
								{
									"call": "ft_freqsimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "numtrl",
										"comment": "number of simulated trials"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "time",
							"code": [
								{
									"call": "ft_freqsimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "time",
										"comment": "cell-array with one time axis per trial, which are for example obtained from an existing dataset"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_freqstatistics",
					"code": [
						{
							"call": "ft_freqstatistics(cfg, varargin)",
							"language": "fieldtrip",
							"argout": "[stat]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_freqstatistics.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_freqstatistics(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "channel",
										"comment": "Nx1 cell-array with selection of channels (default = 'all'),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "latency",
							"code": [
								{
									"call": "ft_freqstatistics(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "latency",
										"comment": "[begin end] in seconds or 'all' (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "frequency",
							"code": [
								{
									"call": "ft_freqstatistics(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "frequency",
										"comment": "[begin end], can be 'all'       (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "avgoverchan",
							"code": [
								{
									"call": "ft_freqstatistics(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "avgoverchan",
										"comment": "'yes' or 'no'                   (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "avgovertime",
							"code": [
								{
									"call": "ft_freqstatistics(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "avgovertime",
										"comment": "'yes' or 'no'                   (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "avgoverfreq",
							"code": [
								{
									"call": "ft_freqstatistics(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "avgoverfreq",
										"comment": "'yes' or 'no'                   (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "parameter",
							"code": [
								{
									"call": "ft_freqstatistics(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "parameter",
										"comment": "string                          (default = 'powspctrm')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "neighbours",
							"code": [
								{
									"call": "ft_freqstatistics(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "neighbours",
										"comment": "neighbourhood structure, see FT_PREPARE_NEIGHBOURS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_freqstatistics(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "method",
										"comment": "different methods for calculating the significance probability and/or critical value"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "design",
							"code": [
								{
									"call": "ft_freqstatistics(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "design",
										"comment": "Nxnumobservations: design matrix (for examples/advice, please see the Fieldtrip wiki,"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_freqstatistics(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_freqstatistics(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_globalmeanfield",
					"code": [
						{
							"call": "ft_globalmeanfield(cfg, datain)",
							"language": "fieldtrip",
							"argout": "[dataout]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_globalmeanfield.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_globalmeanfield(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "method",
										"comment": "string, determines whether the amplitude or power should be calculated (see below, default is 'amplitude', can be 'power')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_globalmeanfield(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "channel",
										"comment": "Nx1 cell-array with selection of channels (default = 'all'),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_globalmeanfield(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_globalmeanfield(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_headmovement",
					"code": [
						{
							"call": "ft_headmovement(cfg)",
							"language": "fieldtrip",
							"argout": "[varargout]",
							"cfgfield": {
								"name": "numclusters",
								"comment": "number of segments with constant headposition in"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_headmovement.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dataset",
							"code": [
								{
									"call": "ft_headmovement(cfg)",
									"language": "fieldtrip",
									"argout": "[varargout]",
									"cfgfield": {
										"name": "dataset",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_headmovement(cfg)",
									"language": "fieldtrip",
									"argout": "[varargout]",
									"cfgfield": {
										"name": "method",
										"comment": "'updatesens' (default), 'cluster', 'avgoverrpt',"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trl",
							"code": [
								{
									"call": "ft_headmovement(cfg)",
									"language": "fieldtrip",
									"argout": "[varargout]",
									"cfgfield": {
										"name": "trl",
										"comment": "empty (default), or Nx3 matrix with the trial "
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "numclusters",
							"code": [
								{
									"call": "ft_headmovement(cfg)",
									"language": "fieldtrip",
									"argout": "[varargout]",
									"cfgfield": {
										"name": "numclusters",
										"comment": "number of segments with constant headposition in"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_heartrate",
					"code": [
						{
							"call": "ft_heartrate(cfg, datain)",
							"language": "fieldtrip",
							"argout": "[dataout]",
							"cfgfield": {
								"name": "preproc.bpfreq",
								"comment": "[low high], filter frequency in Hz"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_heartrate.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_heartrate(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "channel",
										"comment": "selected channel for processing, see FT_CHANNELSELECTION"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "envelopewindow",
							"code": [
								{
									"call": "ft_heartrate(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "envelopewindow",
										"comment": "scalar, time in seconds"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "peakseparation",
							"code": [
								{
									"call": "ft_heartrate(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "peakseparation",
										"comment": "scalar, time in seconds"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "threshold",
							"code": [
								{
									"call": "ft_heartrate(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "threshold",
										"comment": "scalar, usually between 0 and 1 (default = 0.4)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "feedback",
							"code": [
								{
									"call": "ft_heartrate(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "feedback",
										"comment": "'yes' or 'no'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "preproc.bpfilter",
							"code": [
								{
									"call": "ft_heartrate(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "preproc.bpfilter",
										"comment": "'yes' or 'no'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "preproc.bpfreq",
							"code": [
								{
									"call": "ft_heartrate(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "preproc.bpfreq",
										"comment": "[low high], filter frequency in Hz"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_interactiverealign",
					"code": [
						{
							"call": "ft_interactiverealign(cfg)",
							"language": "fieldtrip",
							"argout": "[cfg]",
							"cfgfield": {
								"name": "template.headshapestyle",
								"comment": "'vertex', 'edge', 'surface' or 'both' (default = 'vertex')"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_interactiverealign.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "individual.elec",
							"code": [
								{
									"call": "ft_interactiverealign(cfg)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "individual.elec",
										"comment": "structure"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "individual.grad",
							"code": [
								{
									"call": "ft_interactiverealign(cfg)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "individual.grad",
										"comment": "structure"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "individual.headmodel",
							"code": [
								{
									"call": "ft_interactiverealign(cfg)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "individual.headmodel",
										"comment": "structure, see FT_PREPARE_HEADMODEL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "individual.headshape",
							"code": [
								{
									"call": "ft_interactiverealign(cfg)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "individual.headshape",
										"comment": "structure, see FT_READ_HEADSHAPE"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "individual.mri",
							"code": [
								{
									"call": "ft_interactiverealign(cfg)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "individual.mri",
										"comment": "structure, see FT_READ_MRI"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "individual.headmodelstyle",
							"code": [
								{
									"call": "ft_interactiverealign(cfg)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "individual.headmodelstyle",
										"comment": "'vertex', 'edge', 'surface' or 'both' (default = 'edge')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "individual.headshapestyle",
							"code": [
								{
									"call": "ft_interactiverealign(cfg)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "individual.headshapestyle",
										"comment": "'vertex', 'edge', 'surface' or 'both' (default = 'vertex')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "template.axes",
							"code": [
								{
									"call": "ft_interactiverealign(cfg)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "template.axes",
										"comment": "string, 'yes' or 'no (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "template.elec",
							"code": [
								{
									"call": "ft_interactiverealign(cfg)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "template.elec",
										"comment": "structure"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "template.grad",
							"code": [
								{
									"call": "ft_interactiverealign(cfg)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "template.grad",
										"comment": "structure"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "template.headmodel",
							"code": [
								{
									"call": "ft_interactiverealign(cfg)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "template.headmodel",
										"comment": "structure, see FT_PREPARE_HEADMODEL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "template.headshape",
							"code": [
								{
									"call": "ft_interactiverealign(cfg)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "template.headshape",
										"comment": "structure, see FT_READ_HEADSHAPE"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "template.mri",
							"code": [
								{
									"call": "ft_interactiverealign(cfg)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "template.mri",
										"comment": "structure, see FT_READ_MRI"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "template.headmodelstyle",
							"code": [
								{
									"call": "ft_interactiverealign(cfg)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "template.headmodelstyle",
										"comment": "'vertex', 'edge', 'surface' or 'both' (default = 'edge')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "template.headshapestyle",
							"code": [
								{
									"call": "ft_interactiverealign(cfg)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "template.headshapestyle",
										"comment": "'vertex', 'edge', 'surface' or 'both' (default = 'vertex')"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_interpolatenan",
					"code": [
						{
							"call": "ft_interpolatenan(cfg, datain)",
							"language": "fieldtrip",
							"argout": "[dataout]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_interpolatenan.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_interpolatenan(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "method",
										"comment": "string, interpolation method, see HELP INTERP1 (default = 'linear')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "prewindow",
							"code": [
								{
									"call": "ft_interpolatenan(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "prewindow",
										"comment": "value, length of data prior to interpolation window, in seconds (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "postwindow",
							"code": [
								{
									"call": "ft_interpolatenan(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "postwindow",
										"comment": "value, length of data after interpolation window, in seconds (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "feedback",
							"code": [
								{
									"call": "ft_interpolatenan(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "feedback",
										"comment": "string, 'no', 'text', 'textbar', 'gui' (default = 'text')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_interpolatenan(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_interpolatenan(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_lateralizedpotential",
					"code": [
						{
							"call": "ft_lateralizedpotential(cfg, avgL, avgR)",
							"language": "fieldtrip",
							"argout": "[lrp]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_lateralizedpotential.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channelcmb",
							"code": [
								{
									"call": "ft_lateralizedpotential(cfg, avgL, avgR)",
									"language": "fieldtrip",
									"argout": "[lrp]",
									"cfgfield": {
										"name": "channelcmb",
										"comment": "Nx2 cell-array"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_lateralizedpotential(cfg, avgL, avgR)",
									"language": "fieldtrip",
									"argout": "[lrp]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_lateralizedpotential(cfg, avgL, avgR)",
									"language": "fieldtrip",
									"argout": "[lrp]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_layoutplot",
					"code": [
						{
							"call": "ft_layoutplot(cfg, data)",
							"language": "fieldtrip",
							"argout": "[cfg]",
							"cfgfield": {
								"name": "montage",
								"comment": ""
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_layoutplot.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "layout",
							"code": [
								{
									"call": "ft_layoutplot(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "layout",
										"comment": "filename containg the layout"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "rotate",
							"code": [
								{
									"call": "ft_layoutplot(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "rotate",
										"comment": "number, rotation around the z-axis in degrees (default = [], which means automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "projection",
							"code": [
								{
									"call": "ft_layoutplot(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "projection",
										"comment": "string, 2D projection method can be 'stereographic', 'ortographic', 'polar', 'gnomic' or 'inverse' (default = 'orthographic')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "elec",
							"code": [
								{
									"call": "ft_layoutplot(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "elec",
										"comment": "structure with electrode positions or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "grad",
							"code": [
								{
									"call": "ft_layoutplot(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "grad",
										"comment": "structure with gradiometer definition or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "opto",
							"code": [
								{
									"call": "ft_layoutplot(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "opto",
										"comment": "structure with optode definition or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "output",
							"code": [
								{
									"call": "ft_layoutplot(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "output",
										"comment": "filename to which the layout will be written (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "montage",
							"code": [
								{
									"call": "ft_layoutplot(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "montage",
										"comment": "'no' or a montage structure (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "image",
							"code": [
								{
									"call": "ft_layoutplot(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "image",
										"comment": "filename, use an image to construct a layout (e.g. usefull for ECoG grids)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "visible",
							"code": [
								{
									"call": "ft_layoutplot(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "visible",
										"comment": "string, 'yes' or 'no' whether figure will be visible (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "box",
							"code": [
								{
									"call": "ft_layoutplot(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "box",
										"comment": "string, 'yes' or 'no' whether box should be plotted around electrode (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "mask",
							"code": [
								{
									"call": "ft_layoutplot(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "mask",
										"comment": "string, 'yes' or 'no' whether the mask should be plotted (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "layout",
							"code": [
								{
									"call": "ft_layoutplot(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "layout",
										"comment": "'ordered'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_layoutplot(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "montage",
							"code": [
								{
									"call": "ft_layoutplot(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "montage",
										"comment": ""
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_math",
					"code": [
						{
							"call": "ft_math(cfg, varargin)",
							"language": "fieldtrip",
							"argout": "[data]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_math.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "parameter",
							"code": [
								{
									"call": "ft_math(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "parameter",
										"comment": "string, field from the input data on which the operation is"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "operation",
							"code": [
								{
									"call": "ft_math(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "operation",
										"comment": "string, for example '(x1-x2)/(x1+x2)' or 'x1/6'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "scalar",
							"code": [
								{
									"call": "ft_math(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "scalar",
										"comment": "scalar value to be used in the operation"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "matrix",
							"code": [
								{
									"call": "ft_math(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "matrix",
										"comment": "matrix with identical size as the data, it will be element-wise be applied"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_math(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_math(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_megplanar",
					"code": [
						{
							"call": "ft_megplanar(cfg, data)",
							"language": "fieldtrip",
							"argout": "[data]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_megplanar.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "planarmethod",
							"code": [
								{
									"call": "ft_megplanar(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "planarmethod",
										"comment": "string, can be 'sincos', 'orig', 'fitplane', 'sourceproject' (default = 'sincos')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_megplanar(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "channel",
										"comment": " Nx1 cell-array with selection of channels (default = 'MEG'), see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trials",
							"code": [
								{
									"call": "ft_megplanar(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "trials",
										"comment": "'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "neighbours",
							"code": [
								{
									"call": "ft_megplanar(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "neighbours",
										"comment": "neighbourhood structure, see FT_PREPARE_NEIGHBOURS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inwardshift",
							"code": [
								{
									"call": "ft_megplanar(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "inwardshift",
										"comment": "depth of the source layer relative to the head model surface (default = 2.5 cm, which is appropriate for a skin-based head model)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "spheremesh",
							"code": [
								{
									"call": "ft_megplanar(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "spheremesh",
										"comment": "number of dipoles in the source layer (default = 642)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "pruneratio",
							"code": [
								{
									"call": "ft_megplanar(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "pruneratio",
										"comment": "for singular values, default is 1e-3"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headshape",
							"code": [
								{
									"call": "ft_megplanar(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "headshape",
										"comment": "a filename containing headshape, a structure containing a"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headmodel",
							"code": [
								{
									"call": "ft_megplanar(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "headmodel",
										"comment": "structure with volume conduction model, see FT_PREPARE_HEADMODEL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "feedback",
							"code": [
								{
									"call": "ft_megplanar(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "feedback",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_megplanar(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_megplanar(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_megrealign",
					"code": [
						{
							"call": "ft_megrealign(cfg, data)",
							"language": "fieldtrip",
							"argout": "[data]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_megrealign.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "template",
							"code": [
								{
									"call": "ft_megrealign(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "template",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inwardshift",
							"code": [
								{
									"call": "ft_megrealign(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "inwardshift",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "template",
							"code": [
								{
									"call": "ft_megrealign(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "template",
										"comment": "single dataset that serves as template"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "template(1..N)",
							"code": [
								{
									"call": "ft_megrealign(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "template(1..N)",
										"comment": "datasets that are averaged into the standard"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headmodel",
							"code": [
								{
									"call": "ft_megrealign(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "headmodel",
										"comment": "structure, see FT_PREPARE_HEADMODEL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "spheremesh",
							"code": [
								{
									"call": "ft_megrealign(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "spheremesh",
										"comment": "number of dipoles in the source layer (default = 642)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inwardshift",
							"code": [
								{
									"call": "ft_megrealign(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "inwardshift",
										"comment": "depth of the source layer relative to the headshape"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headshape",
							"code": [
								{
									"call": "ft_megrealign(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "headshape",
										"comment": "a filename containing headshape, a structure containing a"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_megrealign(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_megrealign(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_meshrealign",
					"code": [
						{
							"call": "ft_meshrealign(cfg, mesh)",
							"language": "fieldtrip",
							"argout": "[mesh_realigned]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_meshrealign.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "coordsys",
							"code": [
								{
									"call": "ft_meshrealign(cfg, mesh)",
									"language": "fieldtrip",
									"argout": "[mesh_realigned]",
									"cfgfield": {
										"name": "coordsys",
										"comment": "string, can be 'ctf', 'neuromag', '4d', 'bti', 'itab'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fiducial.nas",
							"code": [
								{
									"call": "ft_meshrealign(cfg, mesh)",
									"language": "fieldtrip",
									"argout": "[mesh_realigned]",
									"cfgfield": {
										"name": "fiducial.nas",
										"comment": "[x y z], position of nasion"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fiducial.lpa",
							"code": [
								{
									"call": "ft_meshrealign(cfg, mesh)",
									"language": "fieldtrip",
									"argout": "[mesh_realigned]",
									"cfgfield": {
										"name": "fiducial.lpa",
										"comment": "[x y z], position of LPA"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fiducial.rpa",
							"code": [
								{
									"call": "ft_meshrealign(cfg, mesh)",
									"language": "fieldtrip",
									"argout": "[mesh_realigned]",
									"cfgfield": {
										"name": "fiducial.rpa",
										"comment": "[x y z], position of RPA"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_meshrealign(cfg, mesh)",
									"language": "fieldtrip",
									"argout": "[mesh_realigned]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_meshrealign(cfg, mesh)",
									"language": "fieldtrip",
									"argout": "[mesh_realigned]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_movieplotER",
					"code": [
						{
							"call": "ft_movieplotER(cfg, data)",
							"language": "fieldtrip",
							"argout": "[cfg]",
							"cfgfield": {
								"name": "inputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_movieplotER.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "parameter",
							"code": [
								{
									"call": "ft_movieplotER(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "parameter",
										"comment": "string, parameter that is color coded (default = 'avg')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "xlim",
							"code": [
								{
									"call": "ft_movieplotER(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "xlim",
										"comment": "'maxmin' or [xmin xmax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "zlim",
							"code": [
								{
									"call": "ft_movieplotER(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "zlim",
										"comment": "plotting limits for color dimension, 'maxmin',"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "samperframe",
							"code": [
								{
									"call": "ft_movieplotER(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "samperframe",
										"comment": "number, samples per fram (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "framespersec",
							"code": [
								{
									"call": "ft_movieplotER(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "framespersec",
										"comment": "number, frames per second (default = 5)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "framesfile",
							"code": [
								{
									"call": "ft_movieplotER(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "framesfile",
										"comment": "[], no file saved, or 'string', filename of saved frames.mat (default = []);"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "layout",
							"code": [
								{
									"call": "ft_movieplotER(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "layout",
										"comment": "specification of the layout, see below"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "baseline",
							"code": [
								{
									"call": "ft_movieplotER(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "baseline",
										"comment": "'yes','no' or [time1 time2] (default = 'no'), see FT_TIMELOCKBASELINE"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "baselinetype",
							"code": [
								{
									"call": "ft_movieplotER(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "baselinetype",
										"comment": "'absolute' or 'relative' (default = 'absolute')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "colorbar",
							"code": [
								{
									"call": "ft_movieplotER(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "colorbar",
										"comment": "'yes', 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "colorbartext",
							"code": [
								{
									"call": "ft_movieplotER(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "colorbartext",
										"comment": " string indicating the text next to colorbar"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_movieplotER(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_movieplotTFR",
					"code": [
						{
							"call": "ft_movieplotTFR(cfg, data)",
							"language": "fieldtrip",
							"argout": "[cfg]",
							"cfgfield": {
								"name": "inputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_movieplotTFR.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "parameter",
							"code": [
								{
									"call": "ft_movieplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "parameter",
										"comment": "string, parameter that is color coded (default = 'avg')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "xlim",
							"code": [
								{
									"call": "ft_movieplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "xlim",
										"comment": "selection boundaries over first dimension in data (e.g., time)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "ylim",
							"code": [
								{
									"call": "ft_movieplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "ylim",
										"comment": "selection boundaries over second dimension in data (e.g., freq)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "zlim",
							"code": [
								{
									"call": "ft_movieplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "zlim",
										"comment": "plotting limits for color dimension, 'maxmin',"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "samperframe",
							"code": [
								{
									"call": "ft_movieplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "samperframe",
										"comment": "number, samples per fram (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "framespersec",
							"code": [
								{
									"call": "ft_movieplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "framespersec",
										"comment": "number, frames per second (default = 5)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "framesfile",
							"code": [
								{
									"call": "ft_movieplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "framesfile",
										"comment": "[] (optional), no file saved, or 'string', filename of saved frames.mat (default = []);"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "moviefreq",
							"code": [
								{
									"call": "ft_movieplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "moviefreq",
										"comment": "number, movie frames are all time points at the fixed frequency moviefreq (default = []);"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "movietime",
							"code": [
								{
									"call": "ft_movieplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "movietime",
										"comment": "number, movie frames are all frequencies at the fixed time movietime (default = []);"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "layout",
							"code": [
								{
									"call": "ft_movieplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "layout",
										"comment": "specification of the layout, see below"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "interactive",
							"code": [
								{
									"call": "ft_movieplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "interactive",
										"comment": "'no' or 'yes', make it interactive"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "baseline",
							"code": [
								{
									"call": "ft_movieplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "baseline",
										"comment": "'yes','no' or [time1 time2] (default = 'no'), see FT_TIMELOCKBASELINE or FT_FREQBASELINE"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "baselinetype",
							"code": [
								{
									"call": "ft_movieplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "baselinetype",
										"comment": "'absolute', 'relative', 'relchange', 'normchange', 'db' or 'zscore' (default = 'absolute')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "colorbar",
							"code": [
								{
									"call": "ft_movieplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "colorbar",
										"comment": "'yes', 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "colorbartext",
							"code": [
								{
									"call": "ft_movieplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "colorbartext",
										"comment": " string indicating the text next to colorbar"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_movieplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_multiplotCC",
					"code": [
						{
							"call": "ft_multiplotCC(cfg, data)",
							"language": "fieldtrip",
							"argout": "[cfg]"
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_multiplotCC.m",
					"ports": null
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_multiplotER",
					"code": [
						{
							"call": "ft_multiplotER(cfg, varargin)",
							"language": "fieldtrip",
							"argout": "[cfg]",
							"cfgfield": {
								"name": "inputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_multiplotER.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "parameter",
							"code": [
								{
									"call": "ft_multiplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "parameter",
										"comment": "field to be plotted on y-axis, for example 'avg', 'powspctrm' or 'cohspctrm' (default is automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "maskparameter",
							"code": [
								{
									"call": "ft_multiplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "maskparameter",
										"comment": "field in the first dataset to be used for marking significant data"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "maskstyle",
							"code": [
								{
									"call": "ft_multiplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "maskstyle",
										"comment": "style used for masking of data, 'box', 'thickness' or 'saturation' (default = 'box')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "maskfacealpha",
							"code": [
								{
									"call": "ft_multiplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "maskfacealpha",
										"comment": "mask transparency value between 0 and 1"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "xlim",
							"code": [
								{
									"call": "ft_multiplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "xlim",
										"comment": "'maxmin' or [xmin xmax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "ylim",
							"code": [
								{
									"call": "ft_multiplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "ylim",
										"comment": "'maxmin', 'maxabs', 'zeromax', 'minzero', or [ymin ymax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "gradscale",
							"code": [
								{
									"call": "ft_multiplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "gradscale",
										"comment": "number, scaling to apply to the MEG gradiometer channels prior to display"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "magscale",
							"code": [
								{
									"call": "ft_multiplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "magscale",
										"comment": "number, scaling to apply to the MEG magnetometer channels prior to display"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_multiplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "channel",
										"comment": "Nx1 cell-array with selection of channels (default = 'all'), see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "refchannel",
							"code": [
								{
									"call": "ft_multiplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "refchannel",
										"comment": "name of reference channel for visualising connectivity, can be 'gui'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "baseline",
							"code": [
								{
									"call": "ft_multiplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "baseline",
										"comment": "'yes', 'no' or [time1 time2] (default = 'no'), see FT_TIMELOCKBASELINE or FT_FREQBASELINE"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trials",
							"code": [
								{
									"call": "ft_multiplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "trials",
										"comment": "'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "axes",
							"code": [
								{
									"call": "ft_multiplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "axes",
										"comment": "string, 'yes' or 'no' whether to draw x- and y-axes for each graph (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "box",
							"code": [
								{
									"call": "ft_multiplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "box",
										"comment": "string, 'yes' or 'no' whether to draw a box around each graph (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "showlabels",
							"code": [
								{
									"call": "ft_multiplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "showlabels",
										"comment": "'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "showoutline",
							"code": [
								{
									"call": "ft_multiplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "showoutline",
										"comment": "'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "showscale",
							"code": [
								{
									"call": "ft_multiplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "showscale",
										"comment": "'yes' or 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "showcomment",
							"code": [
								{
									"call": "ft_multiplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "showcomment",
										"comment": "'yes' or 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "comment",
							"code": [
								{
									"call": "ft_multiplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "comment",
										"comment": "string of text (default = date + limits)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "limittext",
							"code": [
								{
									"call": "ft_multiplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "limittext",
										"comment": "add user-defined text instead of cfg.comment, (default = cfg.comment)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fontsize",
							"code": [
								{
									"call": "ft_multiplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "fontsize",
										"comment": "font size of comment and labels (default = 8)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "interactive",
							"code": [
								{
									"call": "ft_multiplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "interactive",
										"comment": "'yes' or 'no', make the plot interactive (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "renderer",
							"code": [
								{
									"call": "ft_multiplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "renderer",
										"comment": "'painters', 'zbuffer', ' opengl' or 'none' (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "linestyle",
							"code": [
								{
									"call": "ft_multiplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "linestyle",
										"comment": "linestyle/marker type, see options of the PLOT function (default = '-')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "linewidth",
							"code": [
								{
									"call": "ft_multiplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "linewidth",
										"comment": "linewidth in points (default = 0.5)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "graphcolor",
							"code": [
								{
									"call": "ft_multiplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "graphcolor",
										"comment": "color(s) used for plotting the dataset(s) (default = 'brgkywrgbkywrgbkywrgbkyw')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "directionality",
							"code": [
								{
									"call": "ft_multiplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "directionality",
										"comment": "'', 'inflow' or 'outflow' specifies for connectivity measures whether the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "layout",
							"code": [
								{
									"call": "ft_multiplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "layout",
										"comment": "specify the channel layout for plotting using one of the supported ways (see below)."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_multiplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_multiplotTFR",
					"code": [
						{
							"call": "ft_multiplotTFR(cfg, data)",
							"language": "fieldtrip",
							"argout": "[cfg]",
							"cfgfield": {
								"name": "inputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_multiplotTFR.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "parameter",
							"code": [
								{
									"call": "ft_multiplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "parameter",
										"comment": "field to be represented as color (default depends on data.dimord)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "maskparameter",
							"code": [
								{
									"call": "ft_multiplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "maskparameter",
										"comment": "field in the data to be used for masking of data, can be logical (e.g. significant data points) or numerical (e.g. t-values)."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "maskstyle",
							"code": [
								{
									"call": "ft_multiplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "maskstyle",
										"comment": "style used to masking, 'opacity', 'saturation', or 'outline' (default = 'opacity')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "maskalpha",
							"code": [
								{
									"call": "ft_multiplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "maskalpha",
										"comment": "alpha value between 0 (transparent) and 1 (opaque) used for masking areas dictated by cfg.maskparameter (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "masknans",
							"code": [
								{
									"call": "ft_multiplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "masknans",
										"comment": "'yes' or 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "xlim",
							"code": [
								{
									"call": "ft_multiplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "xlim",
										"comment": "'maxmin' or [xmin xmax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "ylim",
							"code": [
								{
									"call": "ft_multiplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "ylim",
										"comment": "'maxmin' or [ymin ymax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "zlim",
							"code": [
								{
									"call": "ft_multiplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "zlim",
										"comment": "plotting limits for color dimension, 'maxmin', 'maxabs', 'zeromax', 'minzero', or [zmin zmax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "gradscale",
							"code": [
								{
									"call": "ft_multiplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "gradscale",
										"comment": "number, scaling to apply to the MEG gradiometer channels prior to display"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "magscale",
							"code": [
								{
									"call": "ft_multiplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "magscale",
										"comment": "number, scaling to apply to the MEG magnetometer channels prior to display"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_multiplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "channel",
										"comment": "Nx1 cell-array with selection of channels (default = 'all'), see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "refchannel",
							"code": [
								{
									"call": "ft_multiplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "refchannel",
										"comment": "name of reference channel for visualising connectivity, can be 'gui'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "baseline",
							"code": [
								{
									"call": "ft_multiplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "baseline",
										"comment": "'yes', 'no' or [time1 time2] (default = 'no'), see FT_FREQBASELINE"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "baselinetype",
							"code": [
								{
									"call": "ft_multiplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "baselinetype",
										"comment": "'absolute', 'relative', 'relchange', 'normchange', 'db' or 'zscore' (default = 'absolute')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trials",
							"code": [
								{
									"call": "ft_multiplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "trials",
										"comment": "'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "box",
							"code": [
								{
									"call": "ft_multiplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "box",
										"comment": "'yes', 'no' (default = 'no' if maskparameter given default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "hotkeys",
							"code": [
								{
									"call": "ft_multiplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "hotkeys",
										"comment": "enables hotkeys (up/down arrows) for dynamic colorbar adjustment"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "colorbar",
							"code": [
								{
									"call": "ft_multiplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "colorbar",
										"comment": "'yes', 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "colorbartext",
							"code": [
								{
									"call": "ft_multiplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "colorbartext",
										"comment": " string indicating the text next to colorbar"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "colormap",
							"code": [
								{
									"call": "ft_multiplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "colormap",
										"comment": "any sized colormap, see COLORMAP"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "showlabels",
							"code": [
								{
									"call": "ft_multiplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "showlabels",
										"comment": "'yes', 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "showoutline",
							"code": [
								{
									"call": "ft_multiplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "showoutline",
										"comment": "'yes', 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "showscale",
							"code": [
								{
									"call": "ft_multiplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "showscale",
										"comment": "'yes', 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "showcomment",
							"code": [
								{
									"call": "ft_multiplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "showcomment",
										"comment": "'yes', 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "comment",
							"code": [
								{
									"call": "ft_multiplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "comment",
										"comment": "string of text (default = date + limits)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "limittext",
							"code": [
								{
									"call": "ft_multiplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "limittext",
										"comment": "add user-defined text instead of cfg.comment, (default = cfg.comment)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fontsize",
							"code": [
								{
									"call": "ft_multiplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "fontsize",
										"comment": "font size of comment and labels (if present) (default = 8)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fontweight",
							"code": [
								{
									"call": "ft_multiplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "fontweight",
										"comment": "font weight of comment and labels (if present)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "interactive",
							"code": [
								{
									"call": "ft_multiplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "interactive",
										"comment": "Interactive plot 'yes' or 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "renderer",
							"code": [
								{
									"call": "ft_multiplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "renderer",
										"comment": "'painters', 'zbuffer', ' opengl' or 'none' (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "directionality",
							"code": [
								{
									"call": "ft_multiplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "directionality",
										"comment": "'', 'inflow' or 'outflow' specifies for"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "layout",
							"code": [
								{
									"call": "ft_multiplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "layout",
										"comment": "specify the channel layout for plotting using one of"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_multiplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_mvaranalysis",
					"code": [
						{
							"call": "ft_mvaranalysis(cfg, data)",
							"language": "fieldtrip",
							"argout": "[mvardata]",
							"cfgfield": {
								"name": "output",
								"comment": "'parameters', 'model', 'residual'. If 'parameters' is"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_mvaranalysis.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_mvaranalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[mvardata]",
									"cfgfield": {
										"name": "method",
										"comment": "the name of the toolbox containing the function for the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "mvarmethod",
							"code": [
								{
									"call": "ft_mvaranalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[mvardata]",
									"cfgfield": {
										"name": "mvarmethod",
										"comment": "scalar (only required when cfg.method = 'biosig')."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "order",
							"code": [
								{
									"call": "ft_mvaranalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[mvardata]",
									"cfgfield": {
										"name": "order",
										"comment": "scalar, order of the autoregressive model (default=10)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_mvaranalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[mvardata]",
									"cfgfield": {
										"name": "channel",
										"comment": "'all' (default) or list of channels for which an mvar model"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channelcmb",
							"code": [
								{
									"call": "ft_mvaranalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[mvardata]",
									"cfgfield": {
										"name": "channelcmb",
										"comment": "specify channel combinations as a"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "keeptrials",
							"code": [
								{
									"call": "ft_mvaranalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[mvardata]",
									"cfgfield": {
										"name": "keeptrials",
										"comment": "'no' (default) or 'yes' specifies whether the coefficients"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "jackknife",
							"code": [
								{
									"call": "ft_mvaranalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[mvardata]",
									"cfgfield": {
										"name": "jackknife",
										"comment": "'no' (default) or 'yes' specifies whether the coefficients"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "zscore",
							"code": [
								{
									"call": "ft_mvaranalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[mvardata]",
									"cfgfield": {
										"name": "zscore",
										"comment": "'no' (default) or 'yes' specifies whether the channel data"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "demean",
							"code": [
								{
									"call": "ft_mvaranalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[mvardata]",
									"cfgfield": {
										"name": "demean",
										"comment": "'yes' (default) or 'no' explicit removal of DC-offset"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "ems",
							"code": [
								{
									"call": "ft_mvaranalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[mvardata]",
									"cfgfield": {
										"name": "ems",
										"comment": "'no' (default) or 'yes' explicit removal ensemble mean"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "t_ftimwin",
							"code": [
								{
									"call": "ft_mvaranalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[mvardata]",
									"cfgfield": {
										"name": "t_ftimwin",
										"comment": "the width of the sliding window on which the coefficients"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "toi",
							"code": [
								{
									"call": "ft_mvaranalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[mvardata]",
									"cfgfield": {
										"name": "toi",
										"comment": "[t1 t2 ... tx] the time points at which the windows are"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_mvaranalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[mvardata]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_mvaranalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[mvardata]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "keeptapers",
							"code": [
								{
									"call": "ft_mvaranalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[mvardata]",
									"cfgfield": {
										"name": "keeptapers",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "taper",
							"code": [
								{
									"call": "ft_mvaranalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[mvardata]",
									"cfgfield": {
										"name": "taper",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "output",
							"code": [
								{
									"call": "ft_mvaranalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[mvardata]",
									"cfgfield": {
										"name": "output",
										"comment": "'parameters', 'model', 'residual'. If 'parameters' is"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_neighbourplot",
					"code": [
						{
							"call": "ft_neighbourplot(cfg, data)",
							"language": "fieldtrip",
							"argout": "[cfg]",
							"cfgfield": {
								"name": "opto",
								"comment": "structure with gradiometer definition or filename, see FT_READ_SENS"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_neighbourplot.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "verbose",
							"code": [
								{
									"call": "ft_neighbourplot(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "verbose",
										"comment": "string, 'yes' or 'no', whether the function will print feedback text in the command window"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "neighbours",
							"code": [
								{
									"call": "ft_neighbourplot(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "neighbours",
										"comment": "neighbourhood structure, see FT_PREPARE_NEIGHBOURS (optional)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "visible",
							"code": [
								{
									"call": "ft_neighbourplot(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "visible",
										"comment": "string, 'on' or 'off', whether figure will be visible (default = 'on')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "enableedit",
							"code": [
								{
									"call": "ft_neighbourplot(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "enableedit",
										"comment": "string, 'yes' or 'no', allows you to interactively add or remove edges between vertices (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "layout",
							"code": [
								{
									"call": "ft_neighbourplot(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "layout",
										"comment": "filename of the layout, see FT_PREPARE_LAYOUT"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "elec",
							"code": [
								{
									"call": "ft_neighbourplot(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "elec",
										"comment": "structure with electrode positions or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "grad",
							"code": [
								{
									"call": "ft_neighbourplot(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "grad",
										"comment": "structure with gradiometer definition or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "opto",
							"code": [
								{
									"call": "ft_neighbourplot(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "opto",
										"comment": "structure with gradiometer definition or filename, see FT_READ_SENS"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_networkanalysis",
					"code": [
						{
							"call": "ft_networkanalysis(cfg, data)",
							"language": "fieldtrip",
							"argout": "[stat]",
							"cfgfield": {
								"name": "inputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_networkanalysis.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_networkanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "method",
										"comment": "string, specifying the graph measure that will be"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "parameter",
							"code": [
								{
									"call": "ft_networkanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "parameter",
										"comment": "string specifying the bivariate parameter in the data"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_networkanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_prepare_headmodel",
					"code": [
						{
							"call": "ft_prepare_headmodel(cfg, data)",
							"language": "fieldtrip",
							"argout": "[headmodel, cfg]",
							"cfgfield": {
								"name": "submethod",
								"comment": ""
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_prepare_headmodel.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_prepare_headmodel(cfg, data)",
									"language": "fieldtrip",
									"argout": "[headmodel, cfg]",
									"cfgfield": {
										"name": "method",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "conductivity",
							"code": [
								{
									"call": "ft_prepare_headmodel(cfg, data)",
									"language": "fieldtrip",
									"argout": "[headmodel, cfg]",
									"cfgfield": {
										"name": "conductivity",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "tissue",
							"code": [
								{
									"call": "ft_prepare_headmodel(cfg, data)",
									"language": "fieldtrip",
									"argout": "[headmodel, cfg]",
									"cfgfield": {
										"name": "tissue",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "tissue",
							"code": [
								{
									"call": "ft_prepare_headmodel(cfg, data)",
									"language": "fieldtrip",
									"argout": "[headmodel, cfg]",
									"cfgfield": {
										"name": "tissue",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "isolatedsource",
							"code": [
								{
									"call": "ft_prepare_headmodel(cfg, data)",
									"language": "fieldtrip",
									"argout": "[headmodel, cfg]",
									"cfgfield": {
										"name": "isolatedsource",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "tissue",
							"code": [
								{
									"call": "ft_prepare_headmodel(cfg, data)",
									"language": "fieldtrip",
									"argout": "[headmodel, cfg]",
									"cfgfield": {
										"name": "tissue",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "order",
							"code": [
								{
									"call": "ft_prepare_headmodel(cfg, data)",
									"language": "fieldtrip",
									"argout": "[headmodel, cfg]",
									"cfgfield": {
										"name": "order",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fitind",
							"code": [
								{
									"call": "ft_prepare_headmodel(cfg, data)",
									"language": "fieldtrip",
									"argout": "[headmodel, cfg]",
									"cfgfield": {
										"name": "fitind",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "grad",
							"code": [
								{
									"call": "ft_prepare_headmodel(cfg, data)",
									"language": "fieldtrip",
									"argout": "[headmodel, cfg]",
									"cfgfield": {
										"name": "grad",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "tissue",
							"code": [
								{
									"call": "ft_prepare_headmodel(cfg, data)",
									"language": "fieldtrip",
									"argout": "[headmodel, cfg]",
									"cfgfield": {
										"name": "tissue",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "feedback",
							"code": [
								{
									"call": "ft_prepare_headmodel(cfg, data)",
									"language": "fieldtrip",
									"argout": "[headmodel, cfg]",
									"cfgfield": {
										"name": "feedback",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "radius",
							"code": [
								{
									"call": "ft_prepare_headmodel(cfg, data)",
									"language": "fieldtrip",
									"argout": "[headmodel, cfg]",
									"cfgfield": {
										"name": "radius",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "maxradius",
							"code": [
								{
									"call": "ft_prepare_headmodel(cfg, data)",
									"language": "fieldtrip",
									"argout": "[headmodel, cfg]",
									"cfgfield": {
										"name": "maxradius",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "baseline",
							"code": [
								{
									"call": "ft_prepare_headmodel(cfg, data)",
									"language": "fieldtrip",
									"argout": "[headmodel, cfg]",
									"cfgfield": {
										"name": "baseline",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "conductivity",
							"code": [
								{
									"call": "ft_prepare_headmodel(cfg, data)",
									"language": "fieldtrip",
									"argout": "[headmodel, cfg]",
									"cfgfield": {
										"name": "conductivity",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "tissue",
							"code": [
								{
									"call": "ft_prepare_headmodel(cfg, data)",
									"language": "fieldtrip",
									"argout": "[headmodel, cfg]",
									"cfgfield": {
										"name": "tissue",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "order",
							"code": [
								{
									"call": "ft_prepare_headmodel(cfg, data)",
									"language": "fieldtrip",
									"argout": "[headmodel, cfg]",
									"cfgfield": {
										"name": "order",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "tissue",
							"code": [
								{
									"call": "ft_prepare_headmodel(cfg, data)",
									"language": "fieldtrip",
									"argout": "[headmodel, cfg]",
									"cfgfield": {
										"name": "tissue",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headmodel",
							"code": [
								{
									"call": "ft_prepare_headmodel(cfg, data)",
									"language": "fieldtrip",
									"argout": "[headmodel, cfg]",
									"cfgfield": {
										"name": "headmodel",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "elec",
							"code": [
								{
									"call": "ft_prepare_headmodel(cfg, data)",
									"language": "fieldtrip",
									"argout": "[headmodel, cfg]",
									"cfgfield": {
										"name": "elec",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_prepare_headmodel(cfg, data)",
									"language": "fieldtrip",
									"argout": "[headmodel, cfg]",
									"cfgfield": {
										"name": "outputfile",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "tissue",
							"code": [
								{
									"call": "ft_prepare_headmodel(cfg, data)",
									"language": "fieldtrip",
									"argout": "[headmodel, cfg]",
									"cfgfield": {
										"name": "tissue",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "tissueval",
							"code": [
								{
									"call": "ft_prepare_headmodel(cfg, data)",
									"language": "fieldtrip",
									"argout": "[headmodel, cfg]",
									"cfgfield": {
										"name": "tissueval",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "conductivity",
							"code": [
								{
									"call": "ft_prepare_headmodel(cfg, data)",
									"language": "fieldtrip",
									"argout": "[headmodel, cfg]",
									"cfgfield": {
										"name": "conductivity",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "elec",
							"code": [
								{
									"call": "ft_prepare_headmodel(cfg, data)",
									"language": "fieldtrip",
									"argout": "[headmodel, cfg]",
									"cfgfield": {
										"name": "elec",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "grad",
							"code": [
								{
									"call": "ft_prepare_headmodel(cfg, data)",
									"language": "fieldtrip",
									"argout": "[headmodel, cfg]",
									"cfgfield": {
										"name": "grad",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "transform",
							"code": [
								{
									"call": "ft_prepare_headmodel(cfg, data)",
									"language": "fieldtrip",
									"argout": "[headmodel, cfg]",
									"cfgfield": {
										"name": "transform",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "point",
							"code": [
								{
									"call": "ft_prepare_headmodel(cfg, data)",
									"language": "fieldtrip",
									"argout": "[headmodel, cfg]",
									"cfgfield": {
										"name": "point",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "submethod",
							"code": [
								{
									"call": "ft_prepare_headmodel(cfg, data)",
									"language": "fieldtrip",
									"argout": "[headmodel, cfg]",
									"cfgfield": {
										"name": "submethod",
										"comment": ""
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_prepare_layout",
					"code": [
						{
							"call": "ft_prepare_layout(cfg, data)",
							"language": "fieldtrip",
							"argout": "[layout, cfg]",
							"cfgfield": {
								"name": "style",
								"comment": "'2d')"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_prepare_layout.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "layout",
							"code": [
								{
									"call": "ft_prepare_layout(cfg, data)",
									"language": "fieldtrip",
									"argout": "[layout, cfg]",
									"cfgfield": {
										"name": "layout",
										"comment": "filename containg the input layout (*.mat or *.lay file), this can also be a layout"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "output",
							"code": [
								{
									"call": "ft_prepare_layout(cfg, data)",
									"language": "fieldtrip",
									"argout": "[layout, cfg]",
									"cfgfield": {
										"name": "output",
										"comment": "filename (ending in .mat or .lay) to which the layout will be written (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "elec",
							"code": [
								{
									"call": "ft_prepare_layout(cfg, data)",
									"language": "fieldtrip",
									"argout": "[layout, cfg]",
									"cfgfield": {
										"name": "elec",
										"comment": "structure with electrode positions or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "grad",
							"code": [
								{
									"call": "ft_prepare_layout(cfg, data)",
									"language": "fieldtrip",
									"argout": "[layout, cfg]",
									"cfgfield": {
										"name": "grad",
										"comment": "structure with gradiometer definition or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "opto",
							"code": [
								{
									"call": "ft_prepare_layout(cfg, data)",
									"language": "fieldtrip",
									"argout": "[layout, cfg]",
									"cfgfield": {
										"name": "opto",
										"comment": "sstructure with optode definition or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "rotate",
							"code": [
								{
									"call": "ft_prepare_layout(cfg, data)",
									"language": "fieldtrip",
									"argout": "[layout, cfg]",
									"cfgfield": {
										"name": "rotate",
										"comment": "number, rotation around the z-axis in degrees (default = [], which means automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "center",
							"code": [
								{
									"call": "ft_prepare_layout(cfg, data)",
									"language": "fieldtrip",
									"argout": "[layout, cfg]",
									"cfgfield": {
										"name": "center",
										"comment": "string, center and scale the electrodes in the sphere that represents the head, can be 'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "projection",
							"code": [
								{
									"call": "ft_prepare_layout(cfg, data)",
									"language": "fieldtrip",
									"argout": "[layout, cfg]",
									"cfgfield": {
										"name": "projection",
										"comment": "string, 2D projection method can be 'stereographic', 'orthographic', 'polar' or 'gnomic' (default = 'polar')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "viewpoint",
							"code": [
								{
									"call": "ft_prepare_layout(cfg, data)",
									"language": "fieldtrip",
									"argout": "[layout, cfg]",
									"cfgfield": {
										"name": "viewpoint",
										"comment": "string indicating the view point that is used for orthographic projection of 3-D sensor"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outline",
							"code": [
								{
									"call": "ft_prepare_layout(cfg, data)",
									"language": "fieldtrip",
									"argout": "[layout, cfg]",
									"cfgfield": {
										"name": "outline",
										"comment": "string, how to create the outline, can be 'circle', 'square', 'convex', 'headshape', 'mri' or 'no' (default is automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "mask",
							"code": [
								{
									"call": "ft_prepare_layout(cfg, data)",
									"language": "fieldtrip",
									"argout": "[layout, cfg]",
									"cfgfield": {
										"name": "mask",
										"comment": "string, how to create the mask, can be 'circle', 'square', 'convex', 'headshape', 'mri' or 'no' (default is automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headshape",
							"code": [
								{
									"call": "ft_prepare_layout(cfg, data)",
									"language": "fieldtrip",
									"argout": "[layout, cfg]",
									"cfgfield": {
										"name": "headshape",
										"comment": "surface mesh (e.g. pial, head, etc) to be used for generating an outline, see FT_READ_HEADSHAPE for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "mri",
							"code": [
								{
									"call": "ft_prepare_layout(cfg, data)",
									"language": "fieldtrip",
									"argout": "[layout, cfg]",
									"cfgfield": {
										"name": "mri",
										"comment": "segmented anatomical MRI to be used for generating an outline, see FT_READ_MRI and FT_VOLUMESEGMENT for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "montage",
							"code": [
								{
									"call": "ft_prepare_layout(cfg, data)",
									"language": "fieldtrip",
									"argout": "[layout, cfg]",
									"cfgfield": {
										"name": "montage",
										"comment": "'no' or a montage structure (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "image",
							"code": [
								{
									"call": "ft_prepare_layout(cfg, data)",
									"language": "fieldtrip",
									"argout": "[layout, cfg]",
									"cfgfield": {
										"name": "image",
										"comment": "filename, use an image to construct a layout (e.g. useful for ECoG grids)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "bw",
							"code": [
								{
									"call": "ft_prepare_layout(cfg, data)",
									"language": "fieldtrip",
									"argout": "[layout, cfg]",
									"cfgfield": {
										"name": "bw",
										"comment": "'yes' or 'no', if an image is used and this option is true, the image is transformed in black and white (default = 'no', i.e. do not transform)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "overlap",
							"code": [
								{
									"call": "ft_prepare_layout(cfg, data)",
									"language": "fieldtrip",
									"argout": "[layout, cfg]",
									"cfgfield": {
										"name": "overlap",
										"comment": "string, how to deal with overlapping channels when the layout is constructed from a sensor configuration structure. This can be"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_prepare_layout(cfg, data)",
									"language": "fieldtrip",
									"argout": "[layout, cfg]",
									"cfgfield": {
										"name": "channel",
										"comment": "'all', or Nx1 cell-array with selection of channels, see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "boxchannel",
							"code": [
								{
									"call": "ft_prepare_layout(cfg, data)",
									"language": "fieldtrip",
									"argout": "[layout, cfg]",
									"cfgfield": {
										"name": "boxchannel",
										"comment": "'all', or Nx1 cell-array with selection of channels, see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "skipscale",
							"code": [
								{
									"call": "ft_prepare_layout(cfg, data)",
									"language": "fieldtrip",
									"argout": "[layout, cfg]",
									"cfgfield": {
										"name": "skipscale",
										"comment": "'yes' or 'no', whether the scale should be included in the layout or not (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "skipcomnt",
							"code": [
								{
									"call": "ft_prepare_layout(cfg, data)",
									"language": "fieldtrip",
									"argout": "[layout, cfg]",
									"cfgfield": {
										"name": "skipcomnt",
										"comment": "'yes' or 'no', whether the comment should be included in the layout or not (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "layout",
							"code": [
								{
									"call": "ft_prepare_layout(cfg, data)",
									"language": "fieldtrip",
									"argout": "[layout, cfg]",
									"cfgfield": {
										"name": "layout",
										"comment": "'ordered'    will give you a NxN ordered layout"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "layout",
							"code": [
								{
									"call": "ft_prepare_layout(cfg, data)",
									"language": "fieldtrip",
									"argout": "[layout, cfg]",
									"cfgfield": {
										"name": "layout",
										"comment": "'vertical'   will give you a Nx1 ordered layout"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "layout",
							"code": [
								{
									"call": "ft_prepare_layout(cfg, data)",
									"language": "fieldtrip",
									"argout": "[layout, cfg]",
									"cfgfield": {
										"name": "layout",
										"comment": "'horizontal' will give you a 1xN ordered layout"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "layout",
							"code": [
								{
									"call": "ft_prepare_layout(cfg, data)",
									"language": "fieldtrip",
									"argout": "[layout, cfg]",
									"cfgfield": {
										"name": "layout",
										"comment": "'butterfly'  will give you a layout with all channels on top of each other"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "layout",
							"code": [
								{
									"call": "ft_prepare_layout(cfg, data)",
									"language": "fieldtrip",
									"argout": "[layout, cfg]",
									"cfgfield": {
										"name": "layout",
										"comment": "'circular'   will distribute the channels on a circle"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "width",
							"code": [
								{
									"call": "ft_prepare_layout(cfg, data)",
									"language": "fieldtrip",
									"argout": "[layout, cfg]",
									"cfgfield": {
										"name": "width",
										"comment": "scalar (default is automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "height",
							"code": [
								{
									"call": "ft_prepare_layout(cfg, data)",
									"language": "fieldtrip",
									"argout": "[layout, cfg]",
									"cfgfield": {
										"name": "height",
										"comment": "scalar (default is automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "direction",
							"code": [
								{
									"call": "ft_prepare_layout(cfg, data)",
									"language": "fieldtrip",
									"argout": "[layout, cfg]",
									"cfgfield": {
										"name": "direction",
										"comment": "string, can be any of 'LR', 'RL' (for horizontal), 'TB', 'BT' (for vertical)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "rows",
							"code": [
								{
									"call": "ft_prepare_layout(cfg, data)",
									"language": "fieldtrip",
									"argout": "[layout, cfg]",
									"cfgfield": {
										"name": "rows",
										"comment": "number of rows (default is automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "columns",
							"code": [
								{
									"call": "ft_prepare_layout(cfg, data)",
									"language": "fieldtrip",
									"argout": "[layout, cfg]",
									"cfgfield": {
										"name": "columns",
										"comment": "number of columns (default is automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "direction",
							"code": [
								{
									"call": "ft_prepare_layout(cfg, data)",
									"language": "fieldtrip",
									"argout": "[layout, cfg]",
									"cfgfield": {
										"name": "direction",
										"comment": "string, can be any of 'LRTB', 'RLTB', 'LRBT', 'RLBT', 'TBLR', 'TBRL', 'BTLR', 'BTRL' (default = 'LRTB')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "style",
							"code": [
								{
									"call": "ft_prepare_layout(cfg, data)",
									"language": "fieldtrip",
									"argout": "[layout, cfg]",
									"cfgfield": {
										"name": "style",
										"comment": "'2d')"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_prepare_leadfield",
					"code": [
						{
							"call": "ft_prepare_leadfield(cfg, data)",
							"language": "fieldtrip",
							"argout": "[sourcemodel, cfg]",
							"cfgfield": {
								"name": "inputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_prepare_leadfield.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_prepare_leadfield(cfg, data)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "channel",
										"comment": "Nx1 cell-array with selection of channels (default = 'all'),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "xgrid",
							"code": [
								{
									"call": "ft_prepare_leadfield(cfg, data)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "xgrid",
										"comment": "vector (e.g. -20:1:20) or 'auto' (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "ygrid",
							"code": [
								{
									"call": "ft_prepare_leadfield(cfg, data)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "ygrid",
										"comment": "vector (e.g. -20:1:20) or 'auto' (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "zgrid",
							"code": [
								{
									"call": "ft_prepare_leadfield(cfg, data)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "zgrid",
										"comment": "vector (e.g.   0:1:20) or 'auto' (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "resolution",
							"code": [
								{
									"call": "ft_prepare_leadfield(cfg, data)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "resolution",
										"comment": "number (e.g. 1 cm) for automatic sourcemodel generation"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "sourcemodel.pos",
							"code": [
								{
									"call": "ft_prepare_leadfield(cfg, data)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "sourcemodel.pos",
										"comment": "N*3 matrix with position of each source"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "sourcemodel.inside",
							"code": [
								{
									"call": "ft_prepare_leadfield(cfg, data)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "sourcemodel.inside",
										"comment": "N*1 vector with boolean value whether sourcemodel point is inside brain (optional)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "sourcemodel.dim",
							"code": [
								{
									"call": "ft_prepare_leadfield(cfg, data)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "sourcemodel.dim",
										"comment": "[Nx Ny Nz] vector with dimensions in case of 3-D sourcemodel (optional)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headmodel",
							"code": [
								{
									"call": "ft_prepare_leadfield(cfg, data)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "headmodel",
										"comment": "structure with volume conduction model, see FT_PREPARE_HEADMODEL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "elec",
							"code": [
								{
									"call": "ft_prepare_leadfield(cfg, data)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "elec",
										"comment": "structure with electrode positions or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "grad",
							"code": [
								{
									"call": "ft_prepare_leadfield(cfg, data)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "grad",
										"comment": "structure with gradiometer definition or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "reducerank",
							"code": [
								{
									"call": "ft_prepare_leadfield(cfg, data)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "reducerank",
										"comment": "'no', or number (default = 3 for EEG, 2 for MEG)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "normalize",
							"code": [
								{
									"call": "ft_prepare_leadfield(cfg, data)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "normalize",
										"comment": "'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "normalizeparam",
							"code": [
								{
									"call": "ft_prepare_leadfield(cfg, data)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "normalizeparam",
										"comment": "depth normalization parameter (default = 0.5)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "backproject",
							"code": [
								{
									"call": "ft_prepare_leadfield(cfg, data)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "backproject",
										"comment": "'yes' or 'no' (default = 'yes') determines when reducerank is applied"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "openmeeg.batchsize",
							"code": [
								{
									"call": "ft_prepare_leadfield(cfg, data)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "openmeeg.batchsize",
										"comment": "scalar (default 100e3), number of dipoles"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "openmeeg.dsm",
							"code": [
								{
									"call": "ft_prepare_leadfield(cfg, data)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "openmeeg.dsm",
										"comment": "'no'/'yes', reuse existing DSM if provided"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "openmeeg.keepdsm",
							"code": [
								{
									"call": "ft_prepare_leadfield(cfg, data)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "openmeeg.keepdsm",
										"comment": "'no'/'yes', option to retain DSM (no by default)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "openmeeg.nonadaptive",
							"code": [
								{
									"call": "ft_prepare_leadfield(cfg, data)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "openmeeg.nonadaptive",
										"comment": "'no'/'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "singleshell.batchsize",
							"code": [
								{
									"call": "ft_prepare_leadfield(cfg, data)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "singleshell.batchsize",
										"comment": "scalar or 'all' (default 1), number of dipoles"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_prepare_leadfield(cfg, data)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_prepare_mesh",
					"code": [
						{
							"call": "ft_prepare_mesh(cfg, mri)",
							"language": "fieldtrip",
							"argout": "[bnd, cfg]",
							"cfgfield": {
								"name": "method",
								"comment": "{'singlesphere' 'concentricspheres' 'localspheres'}"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_prepare_mesh.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_prepare_mesh(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[bnd, cfg]",
									"cfgfield": {
										"name": "method",
										"comment": "string, can be 'interactive', 'projectmesh', 'iso2mesh', 'isosurface',"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "tissue",
							"code": [
								{
									"call": "ft_prepare_mesh(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[bnd, cfg]",
									"cfgfield": {
										"name": "tissue",
										"comment": "cell-array with tissue types or numeric vector with integer values"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "numvertices",
							"code": [
								{
									"call": "ft_prepare_mesh(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[bnd, cfg]",
									"cfgfield": {
										"name": "numvertices",
										"comment": "numeric vector, should have same number of elements as cfg.tissue"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "downsample",
							"code": [
								{
									"call": "ft_prepare_mesh(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[bnd, cfg]",
									"cfgfield": {
										"name": "downsample",
										"comment": "integer number (default = 1, i.e. no downsampling), see FT_VOLUMEDOWNSAMPLE"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "spmversion",
							"code": [
								{
									"call": "ft_prepare_mesh(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[bnd, cfg]",
									"cfgfield": {
										"name": "spmversion",
										"comment": "string, 'spm2', 'spm8', 'spm12' (default = 'spm8')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headshape",
							"code": [
								{
									"call": "ft_prepare_mesh(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[bnd, cfg]",
									"cfgfield": {
										"name": "headshape",
										"comment": "a filename containing headshape, a Nx3 matrix with surface"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headshape",
							"code": [
								{
									"call": "ft_prepare_mesh(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[bnd, cfg]",
									"cfgfield": {
										"name": "headshape",
										"comment": "string, filename containing the pial surface computed by freesurfer recon-all"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headshape",
							"code": [
								{
									"call": "ft_prepare_mesh(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[bnd, cfg]",
									"cfgfield": {
										"name": "headshape",
										"comment": "a filename containing headshape"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "template",
							"code": [
								{
									"call": "ft_prepare_mesh(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[bnd, cfg]",
									"cfgfield": {
										"name": "template",
										"comment": "a filename containing headshape"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_prepare_mesh(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[bnd, cfg]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_prepare_mesh(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[bnd, cfg]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "output",
							"code": [
								{
									"call": "ft_prepare_mesh(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[bnd, cfg]",
									"cfgfield": {
										"name": "output",
										"comment": "{'scalp', 'skull', 'brain'};"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "tissue",
							"code": [
								{
									"call": "ft_prepare_mesh(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[bnd, cfg]",
									"cfgfield": {
										"name": "tissue",
										"comment": "{'scalp', 'skull', 'brain'};"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "numvertices",
							"code": [
								{
									"call": "ft_prepare_mesh(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[bnd, cfg]",
									"cfgfield": {
										"name": "numvertices",
										"comment": "[800, 1600, 2400];"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_prepare_mesh(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[bnd, cfg]",
									"cfgfield": {
										"name": "method",
										"comment": "'cortexhull';"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headshape",
							"code": [
								{
									"call": "ft_prepare_mesh(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[bnd, cfg]",
									"cfgfield": {
										"name": "headshape",
										"comment": "'/path/to/surf/lh.pial';"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fshome",
							"code": [
								{
									"call": "ft_prepare_mesh(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[bnd, cfg]",
									"cfgfield": {
										"name": "fshome",
										"comment": "'/path/to/freesurfer dir';"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headmodel",
							"code": [
								{
									"call": "ft_prepare_mesh(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[bnd, cfg]",
									"cfgfield": {
										"name": "headmodel",
										"comment": "structure with volume conduction model, see FT_PREPARE_HEADMODEL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headshape",
							"code": [
								{
									"call": "ft_prepare_mesh(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[bnd, cfg]",
									"cfgfield": {
										"name": "headshape",
										"comment": "name of file containing the volume conduction model, see FT_READ_HEADMODEL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_prepare_mesh(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[bnd, cfg]",
									"cfgfield": {
										"name": "method",
										"comment": "{'singlesphere' 'concentricspheres' 'localspheres'}"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_prepare_montage",
					"code": [
						{
							"call": "ft_prepare_montage(cfg, data)",
							"language": "fieldtrip",
							"argout": "[montage, cfg]",
							"cfgfield": {
								"name": "refchannel",
								"comment": "cell-array with new EEG reference channel(s), this can be 'all' for a common average reference"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_prepare_montage.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "refmethod",
							"code": [
								{
									"call": "ft_prepare_montage(cfg, data)",
									"language": "fieldtrip",
									"argout": "[montage, cfg]",
									"cfgfield": {
										"name": "refmethod",
										"comment": "'avg', 'bioloar', 'comp' (default = 'avg')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "implicitref",
							"code": [
								{
									"call": "ft_prepare_montage(cfg, data)",
									"language": "fieldtrip",
									"argout": "[montage, cfg]",
									"cfgfield": {
										"name": "implicitref",
										"comment": "string with the label of the implicit reference, or empty (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "refchannel",
							"code": [
								{
									"call": "ft_prepare_montage(cfg, data)",
									"language": "fieldtrip",
									"argout": "[montage, cfg]",
									"cfgfield": {
										"name": "refchannel",
										"comment": "cell-array with new EEG reference channel(s), this can be 'all' for a common average reference"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_prepare_neighbours",
					"code": [
						{
							"call": "ft_prepare_neighbours(cfg, data)",
							"language": "fieldtrip",
							"argout": "[neighbours, cfg]",
							"cfgfield": {
								"name": "layout",
								"comment": "filename of the layout, see FT_PREPARE_LAYOUT"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_prepare_neighbours.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_prepare_neighbours(cfg, data)",
									"language": "fieldtrip",
									"argout": "[neighbours, cfg]",
									"cfgfield": {
										"name": "method",
										"comment": "'distance', 'triangulation' or 'template'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "template",
							"code": [
								{
									"call": "ft_prepare_neighbours(cfg, data)",
									"language": "fieldtrip",
									"argout": "[neighbours, cfg]",
									"cfgfield": {
										"name": "template",
										"comment": "name of the template file, e.g. CTF275_neighb.mat"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "neighbourdist",
							"code": [
								{
									"call": "ft_prepare_neighbours(cfg, data)",
									"language": "fieldtrip",
									"argout": "[neighbours, cfg]",
									"cfgfield": {
										"name": "neighbourdist",
										"comment": "number, maximum distance between neighbouring sensors (only for 'distance')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_prepare_neighbours(cfg, data)",
									"language": "fieldtrip",
									"argout": "[neighbours, cfg]",
									"cfgfield": {
										"name": "channel",
										"comment": "channels for which neighbours should be found"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "feedback",
							"code": [
								{
									"call": "ft_prepare_neighbours(cfg, data)",
									"language": "fieldtrip",
									"argout": "[neighbours, cfg]",
									"cfgfield": {
										"name": "feedback",
										"comment": "'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "elec",
							"code": [
								{
									"call": "ft_prepare_neighbours(cfg, data)",
									"language": "fieldtrip",
									"argout": "[neighbours, cfg]",
									"cfgfield": {
										"name": "elec",
										"comment": "structure with electrode positions or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "grad",
							"code": [
								{
									"call": "ft_prepare_neighbours(cfg, data)",
									"language": "fieldtrip",
									"argout": "[neighbours, cfg]",
									"cfgfield": {
										"name": "grad",
										"comment": "structure with gradiometer definition or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "layout",
							"code": [
								{
									"call": "ft_prepare_neighbours(cfg, data)",
									"language": "fieldtrip",
									"argout": "[neighbours, cfg]",
									"cfgfield": {
										"name": "layout",
										"comment": "filename of the layout, see FT_PREPARE_LAYOUT"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_prepare_sourcemodel",
					"code": [
						{
							"call": "ft_prepare_sourcemodel(cfg)",
							"language": "fieldtrip",
							"argout": "[sourcemodel, cfg]",
							"cfgfield": {
								"name": "spmversion",
								"comment": "string, 'spm2', 'spm8', 'spm12' (default = 'spm8')"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_prepare_sourcemodel.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "xgrid",
							"code": [
								{
									"call": "ft_prepare_sourcemodel(cfg)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "xgrid",
										"comment": "vector (e.g. -20:1:20) or 'auto' (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "ygrid",
							"code": [
								{
									"call": "ft_prepare_sourcemodel(cfg)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "ygrid",
										"comment": "vector (e.g. -20:1:20) or 'auto' (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "zgrid",
							"code": [
								{
									"call": "ft_prepare_sourcemodel(cfg)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "zgrid",
										"comment": "vector (e.g.   0:1:20) or 'auto' (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "resolution",
							"code": [
								{
									"call": "ft_prepare_sourcemodel(cfg)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "resolution",
										"comment": "number (e.g. 1 cm) for automatic grid generation"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "sourcemodel.pos",
							"code": [
								{
									"call": "ft_prepare_sourcemodel(cfg)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "sourcemodel.pos",
										"comment": "N*3 matrix with position of each source"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "sourcemodel.inside",
							"code": [
								{
									"call": "ft_prepare_sourcemodel(cfg)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "sourcemodel.inside",
										"comment": "N*1 vector with boolean value whether position is inside brain (optional)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "sourcemodel.dim",
							"code": [
								{
									"call": "ft_prepare_sourcemodel(cfg)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "sourcemodel.dim",
										"comment": "[Nx Ny Nz] vector with dimensions in case of 3D grid (optional)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "sourcemodel.leadfield",
							"code": [
								{
									"call": "ft_prepare_sourcemodel(cfg)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "sourcemodel.leadfield",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "sourcemodel.filter",
							"code": [
								{
									"call": "ft_prepare_sourcemodel(cfg)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "sourcemodel.filter",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "sourcemodel.subspace",
							"code": [
								{
									"call": "ft_prepare_sourcemodel(cfg)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "sourcemodel.subspace",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "sourcemodel.lbex",
							"code": [
								{
									"call": "ft_prepare_sourcemodel(cfg)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "sourcemodel.lbex",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "mri",
							"code": [
								{
									"call": "ft_prepare_sourcemodel(cfg)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "mri",
										"comment": "structure with anatomical MRI model or filename, see FT_READ_MRI"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "warpmni",
							"code": [
								{
									"call": "ft_prepare_sourcemodel(cfg)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "warpmni",
										"comment": "'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "resolution",
							"code": [
								{
									"call": "ft_prepare_sourcemodel(cfg)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "resolution",
										"comment": "number (e.g. 6) of the resolution of the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "template",
							"code": [
								{
									"call": "ft_prepare_sourcemodel(cfg)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "template",
										"comment": "specification of a template grid (grid structure), or a"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "nonlinear",
							"code": [
								{
									"call": "ft_prepare_sourcemodel(cfg)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "nonlinear",
										"comment": "'no' (or 'yes'), use non-linear normalization"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "mri",
							"code": [
								{
									"call": "ft_prepare_sourcemodel(cfg)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "mri",
										"comment": "can be filename, MRI structure or segmented MRI structure"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "threshold",
							"code": [
								{
									"call": "ft_prepare_sourcemodel(cfg)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "threshold",
										"comment": "0.1, relative to the maximum value in the segmentation"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "smooth",
							"code": [
								{
									"call": "ft_prepare_sourcemodel(cfg)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "smooth",
										"comment": "5, smoothing in voxels"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headshape",
							"code": [
								{
									"call": "ft_prepare_sourcemodel(cfg)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "headshape",
										"comment": "string, should be a *.fif file"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "elec",
							"code": [
								{
									"call": "ft_prepare_sourcemodel(cfg)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "elec",
										"comment": "structure with electrode positions or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "grad",
							"code": [
								{
									"call": "ft_prepare_sourcemodel(cfg)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "grad",
										"comment": "structure with gradiometer definition or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headmodel",
							"code": [
								{
									"call": "ft_prepare_sourcemodel(cfg)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "headmodel",
										"comment": "structure with volume conduction model or filename, see FT_PREPARE_HEADMODEL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "unit",
							"code": [
								{
									"call": "ft_prepare_sourcemodel(cfg)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "unit",
										"comment": "string, can be 'mm', 'cm', 'm' (default is automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "tight",
							"code": [
								{
									"call": "ft_prepare_sourcemodel(cfg)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "tight",
										"comment": "'yes' or 'no' (default is automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inwardshift",
							"code": [
								{
									"call": "ft_prepare_sourcemodel(cfg)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "inwardshift",
										"comment": "number, how much should the innermost surface be moved inward to constrain"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "moveinward",
							"code": [
								{
									"call": "ft_prepare_sourcemodel(cfg)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "moveinward",
										"comment": "number, move dipoles inward to ensure a certain distance to the innermost"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "spherify",
							"code": [
								{
									"call": "ft_prepare_sourcemodel(cfg)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "spherify",
										"comment": "'yes' or 'no', scale the source model so that it fits inside a sperical"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "symmetry",
							"code": [
								{
									"call": "ft_prepare_sourcemodel(cfg)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "symmetry",
										"comment": "'x', 'y' or 'z' symmetry for two dipoles, can be empty (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headshape",
							"code": [
								{
									"call": "ft_prepare_sourcemodel(cfg)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "headshape",
										"comment": "a filename for the headshape, a structure containing a single surface,"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "spmversion",
							"code": [
								{
									"call": "ft_prepare_sourcemodel(cfg)",
									"language": "fieldtrip",
									"argout": "[sourcemodel, cfg]",
									"cfgfield": {
										"name": "spmversion",
										"comment": "string, 'spm2', 'spm8', 'spm12' (default = 'spm8')"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_preprocessing",
					"code": [
						{
							"call": "ft_preprocessing(cfg, data)",
							"language": "fieldtrip",
							"argout": "[data]",
							"cfgfield": {
								"name": "export.dataformat",
								"comment": "string describing the output file format, see FT_WRITE_DATA"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_preprocessing.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dataset",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "dataset",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trl",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "trl",
										"comment": "Nx3 matrix with the trial definition, see FT_DEFINETRIAL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "padding",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "padding",
										"comment": "length (in seconds) to which the trials are padded for filtering (default = 0)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "padtype",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "padtype",
										"comment": "string, type of padding (default: 'data' padding or"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "continuous",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "continuous",
										"comment": "'yes' or 'no' whether the file contains continuous data"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "datafile",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "datafile",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headerfile",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "headerfile",
										"comment": "string with the filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "channel",
										"comment": "Nx1 cell-array with selection of channels (default = 'all'),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "chantype",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "chantype",
										"comment": "string or Nx1 cell-array with channel types to be read (only for NeuroOmega)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "lpfilter",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "lpfilter",
										"comment": "'no' or 'yes'  lowpass filter (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "hpfilter",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "hpfilter",
										"comment": "'no' or 'yes'  highpass filter (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "bpfilter",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "bpfilter",
										"comment": "'no' or 'yes'  bandpass filter (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "bsfilter",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "bsfilter",
										"comment": "'no' or 'yes'  bandstop filter (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dftfilter",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "dftfilter",
										"comment": "'no' or 'yes'  line noise removal using discrete fourier transform (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "medianfilter",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "medianfilter",
										"comment": "'no' or 'yes'  jump preserving median filter (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "lpfreq",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "lpfreq",
										"comment": "lowpass  frequency in Hz"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "hpfreq",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "hpfreq",
										"comment": "highpass frequency in Hz"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "bpfreq",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "bpfreq",
										"comment": "bandpass frequency range, specified as [lowFreq highFreq] in Hz"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "bsfreq",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "bsfreq",
										"comment": "bandstop frequency range, specified as [low high] in Hz (or as Nx2 matrix for notch filter)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dftfreq",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "dftfreq",
										"comment": "line noise frequencies in Hz for DFT filter (default = [50 100 150])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "lpfiltord",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "lpfiltord",
										"comment": "lowpass  filter order (default set in low-level function)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "hpfiltord",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "hpfiltord",
										"comment": "highpass filter order (default set in low-level function)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "bpfiltord",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "bpfiltord",
										"comment": "bandpass filter order (default set in low-level function)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "bsfiltord",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "bsfiltord",
										"comment": "bandstop filter order (default set in low-level function)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "lpfilttype",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "lpfilttype",
										"comment": "digital filter type, 'but' or 'firws' or 'fir' or 'firls' (default = 'but')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "hpfilttype",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "hpfilttype",
										"comment": "digital filter type, 'but' or 'firws' or 'fir' or 'firls' (default = 'but')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "bpfilttype",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "bpfilttype",
										"comment": "digital filter type, 'but' or 'firws' or 'fir' or 'firls' (default = 'but')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "bsfilttype",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "bsfilttype",
										"comment": "digital filter type, 'but' or 'firws' or 'fir' or 'firls' (default = 'but')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "lpfiltdir",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "lpfiltdir",
										"comment": "filter direction, 'twopass' (default), 'onepass' or 'onepass-reverse' or 'onepass-zerophase' (default for firws) or 'onepass-minphase' (firws, non-linear!)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "hpfiltdir",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "hpfiltdir",
										"comment": "filter direction, 'twopass' (default), 'onepass' or 'onepass-reverse' or 'onepass-zerophase' (default for firws) or 'onepass-minphase' (firws, non-linear!)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "bpfiltdir",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "bpfiltdir",
										"comment": "filter direction, 'twopass' (default), 'onepass' or 'onepass-reverse' or 'onepass-zerophase' (default for firws) or 'onepass-minphase' (firws, non-linear!)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "bsfiltdir",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "bsfiltdir",
										"comment": "filter direction, 'twopass' (default), 'onepass' or 'onepass-reverse' or 'onepass-zerophase' (default for firws) or 'onepass-minphase' (firws, non-linear!)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "lpinstabilityfix",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "lpinstabilityfix",
										"comment": "deal with filter instability, 'no', 'reduce', 'split' (default  = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "hpinstabilityfix",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "hpinstabilityfix",
										"comment": "deal with filter instability, 'no', 'reduce', 'split' (default  = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "bpinstabilityfix",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "bpinstabilityfix",
										"comment": "deal with filter instability, 'no', 'reduce', 'split' (default  = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "bsinstabilityfix",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "bsinstabilityfix",
										"comment": "deal with filter instability, 'no', 'reduce', 'split' (default  = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "lpfiltdf",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "lpfiltdf",
										"comment": "lowpass transition width (firws, overrides order, default set in low-level function)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "hpfiltdf",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "hpfiltdf",
										"comment": "highpass transition width (firws, overrides order, default set in low-level function)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "bpfiltdf",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "bpfiltdf",
										"comment": "bandpass transition width (firws, overrides order, default set in low-level function)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "bsfiltdf",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "bsfiltdf",
										"comment": "bandstop transition width (firws, overrides order, default set in low-level function)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "lpfiltwintype",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "lpfiltwintype",
										"comment": "lowpass window type, 'hann' or 'hamming' (default) or 'blackman' or 'kaiser' (firws)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "hpfiltwintype",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "hpfiltwintype",
										"comment": "highpass window type, 'hann' or 'hamming' (default) or 'blackman' or 'kaiser' (firws)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "bpfiltwintype",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "bpfiltwintype",
										"comment": "bandpass window type, 'hann' or 'hamming' (default) or 'blackman' or 'kaiser' (firws)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "bsfiltwintype",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "bsfiltwintype",
										"comment": "bandstop window type, 'hann' or 'hamming' (default) or 'blackman' or 'kaiser' (firws)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "lpfiltdev",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "lpfiltdev",
										"comment": "lowpass max passband deviation (firws with 'kaiser' window, default 0.001 set in low-level function)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "hpfiltdev",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "hpfiltdev",
										"comment": "highpass max passband deviation (firws with 'kaiser' window, default 0.001 set in low-level function)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "bpfiltdev",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "bpfiltdev",
										"comment": "bandpass max passband deviation (firws with 'kaiser' window, default 0.001 set in low-level function)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "bsfiltdev",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "bsfiltdev",
										"comment": "bandstop max passband deviation (firws with 'kaiser' window, default 0.001 set in low-level function)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dftreplace",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "dftreplace",
										"comment": "'zero' or 'neighbour', method used to reduce line noise, 'zero' implies DFT filter, 'neighbour' implies spectrum interpolation (default = 'zero')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dftbandwidth",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "dftbandwidth",
										"comment": "bandwidth of line noise frequencies, applies to spectrum interpolation, in Hz (default = [1 2 3])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dftneighbourwidth",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "dftneighbourwidth",
										"comment": "bandwidth of frequencies neighbouring line noise frequencies, applies to spectrum interpolation, in Hz (default = [2 2 2])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "plotfiltresp",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "plotfiltresp",
										"comment": "'no' or 'yes', plot filter responses (firws, default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "usefftfilt",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "usefftfilt",
										"comment": "'no' or 'yes', use fftfilt instead of filter (firws, default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "medianfiltord",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "medianfiltord",
										"comment": "length of median filter (default = 9)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "demean",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "demean",
										"comment": "'no' or 'yes', whether to apply baseline correction (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "baselinewindow",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "baselinewindow",
										"comment": "[begin end] in seconds, the default is the complete trial (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "detrend",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "detrend",
										"comment": "'no' or 'yes', remove linear trend from the data (done per trial) (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "polyremoval",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "polyremoval",
										"comment": "'no' or 'yes', remove higher order trend from the data (done per trial) (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "polyorder",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "polyorder",
										"comment": "polynome order for poly trend removal (default = 2; note that all lower-order trends will also be removed when using cfg.polyremoval)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "derivative",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "derivative",
										"comment": "'no' or 'yes', computes the first order derivative of the data (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "hilbert",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "hilbert",
										"comment": "'no', 'abs', 'complex', 'real', 'imag', 'absreal', 'absimag' or 'angle' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "rectify",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "rectify",
										"comment": "'no' or 'yes' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "precision",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "precision",
										"comment": "'single' or 'double' (default = 'double')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "absdiff",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "absdiff",
										"comment": "'no' or 'yes', computes absolute derivative (i.e. first derivative then rectify)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "coordsys",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "coordsys",
										"comment": "string, 'head' or 'dewar' (default = 'head')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "coilaccuracy",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "coilaccuracy",
										"comment": "can be empty or a number (0, 1 or 2) to specify the accuracy (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "reref",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "reref",
										"comment": "'no' or 'yes' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "refchannel",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "refchannel",
										"comment": "cell-array with new EEG reference channel(s), this can be 'all' for a common average reference"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "refmethod",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "refmethod",
										"comment": "'avg', 'median', or 'bipolar' for bipolar derivation of sequential channels (default = 'avg')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "implicitref",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "implicitref",
										"comment": "'label' or empty, add the implicit EEG reference as zeros (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "montage",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "montage",
										"comment": "'no' or a montage structure, see FT_APPLY_MONTAGE (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trials",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "trials",
										"comment": "'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "method",
										"comment": "'trial' or 'channel', read data per trial or per channel (default = 'trial')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "export.dataset",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "export.dataset",
										"comment": "string with the output file name"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "export.dataformat",
							"code": [
								{
									"call": "ft_preprocessing(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "export.dataformat",
										"comment": "string describing the output file format, see FT_WRITE_DATA"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_qualitycheck",
					"code": [
						{
							"call": "ft_qualitycheck(cfg)",
							"language": "fieldtrip",
							"argout": "[varargout]",
							"cfgfield": {
								"name": "plotunit",
								"comment": "scalar, the length of time to be plotted in one panel (default = 3600)"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_qualitycheck.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dataset",
							"code": [
								{
									"call": "ft_qualitycheck(cfg)",
									"language": "fieldtrip",
									"argout": "[varargout]",
									"cfgfield": {
										"name": "dataset",
										"comment": "a string (e.g. 'dataset.ds')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "analyze",
							"code": [
								{
									"call": "ft_qualitycheck(cfg)",
									"language": "fieldtrip",
									"argout": "[varargout]",
									"cfgfield": {
										"name": "analyze",
										"comment": "string, 'yes' or 'no' to analyze the dataset (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "savemat",
							"code": [
								{
									"call": "ft_qualitycheck(cfg)",
									"language": "fieldtrip",
									"argout": "[varargout]",
									"cfgfield": {
										"name": "savemat",
										"comment": "string, 'yes' or 'no' to save the analysis (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "matfile",
							"code": [
								{
									"call": "ft_qualitycheck(cfg)",
									"language": "fieldtrip",
									"argout": "[varargout]",
									"cfgfield": {
										"name": "matfile",
										"comment": "string, filename (e.g. 'previousoutput.mat'), preferably in combination"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "visualize",
							"code": [
								{
									"call": "ft_qualitycheck(cfg)",
									"language": "fieldtrip",
									"argout": "[varargout]",
									"cfgfield": {
										"name": "visualize",
										"comment": "string, 'yes' or 'no' to visualize the analysis (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "saveplot",
							"code": [
								{
									"call": "ft_qualitycheck(cfg)",
									"language": "fieldtrip",
									"argout": "[varargout]",
									"cfgfield": {
										"name": "saveplot",
										"comment": "string, 'yes' or 'no' to save the visualization (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "linefreq",
							"code": [
								{
									"call": "ft_qualitycheck(cfg)",
									"language": "fieldtrip",
									"argout": "[varargout]",
									"cfgfield": {
										"name": "linefreq",
										"comment": "scalar, frequency of power line (default = 50)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "plotunit",
							"code": [
								{
									"call": "ft_qualitycheck(cfg)",
									"language": "fieldtrip",
									"argout": "[varargout]",
									"cfgfield": {
										"name": "plotunit",
										"comment": "scalar, the length of time to be plotted in one panel (default = 3600)"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_recodeevent",
					"code": [
						{
							"call": "ft_recodeevent(cfg, event, trl)",
							"language": "fieldtrip",
							"argout": "[ev]",
							"cfgfield": {
								"name": "output",
								"comment": "'event'             the event itself"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_recodeevent.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "eventtype",
							"code": [
								{
									"call": "ft_recodeevent(cfg, event, trl)",
									"language": "fieldtrip",
									"argout": "[ev]",
									"cfgfield": {
										"name": "eventtype",
										"comment": "empty, 'string' or cell-array with multiple strings"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "eventvalue",
							"code": [
								{
									"call": "ft_recodeevent(cfg, event, trl)",
									"language": "fieldtrip",
									"argout": "[ev]",
									"cfgfield": {
										"name": "eventvalue",
										"comment": "empty or a list of event values (can be numeric or string)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "searchrange",
							"code": [
								{
									"call": "ft_recodeevent(cfg, event, trl)",
									"language": "fieldtrip",
									"argout": "[ev]",
									"cfgfield": {
										"name": "searchrange",
										"comment": "'anywhere'      search anywhere for the event, (default)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "nearestto",
							"code": [
								{
									"call": "ft_recodeevent(cfg, event, trl)",
									"language": "fieldtrip",
									"argout": "[ev]",
									"cfgfield": {
										"name": "nearestto",
										"comment": "'trialzero'     compare with time t=0 for each trial (default)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "match",
							"code": [
								{
									"call": "ft_recodeevent(cfg, event, trl)",
									"language": "fieldtrip",
									"argout": "[ev]",
									"cfgfield": {
										"name": "match",
										"comment": "'exact' or 'nearest'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "output",
							"code": [
								{
									"call": "ft_recodeevent(cfg, event, trl)",
									"language": "fieldtrip",
									"argout": "[ev]",
									"cfgfield": {
										"name": "output",
										"comment": "'event'             the event itself"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_redefinetrial",
					"code": [
						{
							"call": "ft_redefinetrial(cfg, data)",
							"language": "fieldtrip",
							"argout": "[data]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_redefinetrial.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trials",
							"code": [
								{
									"call": "ft_redefinetrial(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "trials",
										"comment": "'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "minlength",
							"code": [
								{
									"call": "ft_redefinetrial(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "minlength",
										"comment": "length in seconds, can be 'maxperlen' (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "offset",
							"code": [
								{
									"call": "ft_redefinetrial(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "offset",
										"comment": "single number or Nx1 vector, expressed in samples relative to current t=0"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "toilim",
							"code": [
								{
									"call": "ft_redefinetrial(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "toilim",
										"comment": "[tmin tmax] to specify a latency window in seconds, can be Nx2 vector"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "begsample",
							"code": [
								{
									"call": "ft_redefinetrial(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "begsample",
										"comment": "single number or Nx1 vector, expressed in samples relative to the start of the input trial"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "endsample",
							"code": [
								{
									"call": "ft_redefinetrial(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "endsample",
										"comment": "single number or Nx1 vector, expressed in samples relative to the start of the input trial"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trl",
							"code": [
								{
									"call": "ft_redefinetrial(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "trl",
										"comment": "Nx3 matrix with the trial definition, see FT_DEFINETRIAL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "length",
							"code": [
								{
									"call": "ft_redefinetrial(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "length",
										"comment": "single number (in unit of time, typically seconds) of the required snippets"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "overlap",
							"code": [
								{
									"call": "ft_redefinetrial(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "overlap",
										"comment": "single number (between 0 and 1 (exclusive)) specifying the fraction of overlap between snippets (0 = no overlap)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_redefinetrial(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_redefinetrial(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_regressconfound",
					"code": [
						{
							"call": "ft_regressconfound(cfg, datain)",
							"language": "fieldtrip",
							"argout": "[data]",
							"cfgfield": {
								"name": "statistics",
								"comment": "string, 'yes' or 'no', whether to add the statistics"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_regressconfound.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "confound",
							"code": [
								{
									"call": "ft_regressconfound(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "confound",
										"comment": "matrix, [Ntrials X Nconfounds], may not contain NaNs"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "reject",
							"code": [
								{
									"call": "ft_regressconfound(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "reject",
										"comment": "vector, [1 X Nconfounds], listing the confounds that"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "normalize",
							"code": [
								{
									"call": "ft_regressconfound(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "normalize",
										"comment": "string, 'yes' or 'no', normalization to"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "output",
							"code": [
								{
									"call": "ft_regressconfound(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "output",
										"comment": "'residual' (default), 'beta', or 'model'."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_regressconfound(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_regressconfound(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "ftest",
							"code": [
								{
									"call": "ft_regressconfound(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "ftest",
										"comment": "string array, {N X Nconfounds}, to F-test whether"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "statistics",
							"code": [
								{
									"call": "ft_regressconfound(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "statistics",
										"comment": "string, 'yes' or 'no', whether to add the statistics"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_rejectartifact",
					"code": [
						{
							"call": "ft_rejectartifact(cfg, data)",
							"language": "fieldtrip",
							"argout": "[cfg]",
							"cfgfield": {
								"name": "inputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_rejectartifact.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.reject",
							"code": [
								{
									"call": "ft_rejectartifact(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "artfctdef.reject",
										"comment": "'none', 'partial', 'complete', 'nan', or 'value' (default = 'complete')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.minaccepttim",
							"code": [
								{
									"call": "ft_rejectartifact(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "artfctdef.minaccepttim",
										"comment": "when using partial rejection, minimum length"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.crittoilim",
							"code": [
								{
									"call": "ft_rejectartifact(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "artfctdef.crittoilim",
										"comment": "when using complete rejection, reject trial only when artifacts occur within"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.feedback",
							"code": [
								{
									"call": "ft_rejectartifact(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "artfctdef.feedback",
										"comment": "'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.invert",
							"code": [
								{
									"call": "ft_rejectartifact(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "artfctdef.invert",
										"comment": "'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.value",
							"code": [
								{
									"call": "ft_rejectartifact(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "artfctdef.value",
										"comment": "scalar value to replace the data in the artifact segments (default = nan)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.eog.artifact",
							"code": [
								{
									"call": "ft_rejectartifact(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "artfctdef.eog.artifact",
										"comment": "Nx2 matrix with artifact segments, this is added to the cfg by using FT_ARTIFACT_EOG"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.jump.artifact",
							"code": [
								{
									"call": "ft_rejectartifact(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "artfctdef.jump.artifact",
										"comment": "Nx2 matrix with artifact segments, this is added to the cfg by using FT_ARTIFACT_JUMP"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.muscle.artifact",
							"code": [
								{
									"call": "ft_rejectartifact(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "artfctdef.muscle.artifact",
										"comment": "Nx2 matrix with artifact segments, this is added to the cfg by using FT_ARTIFACT_MUSCLE"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.zvalue.artifact",
							"code": [
								{
									"call": "ft_rejectartifact(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "artfctdef.zvalue.artifact",
										"comment": "Nx2 matrix with artifact segments, this is added to the cfg by using FT_ARTIFACT_ZVALUE"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.visual.artifact",
							"code": [
								{
									"call": "ft_rejectartifact(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "artfctdef.visual.artifact",
										"comment": "Nx2 matrix with artifact segments, this is added to the cfg by using FT_DATABROWSER"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artfctdef.xxx.artifact",
							"code": [
								{
									"call": "ft_rejectartifact(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "artfctdef.xxx.artifact",
										"comment": "Nx2 matrix with artifact segments, this could be added by your own artifact detection function"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_rejectartifact(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_rejectcomponent",
					"code": [
						{
							"call": "ft_rejectcomponent(cfg, comp, data)",
							"language": "fieldtrip",
							"argout": "[data]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_rejectcomponent.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "component",
							"code": [
								{
									"call": "ft_rejectcomponent(cfg, comp, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "component",
										"comment": "list of components to remove, e.g. [1 4 7] or see FT_CHANNELSELECTION"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "demean",
							"code": [
								{
									"call": "ft_rejectcomponent(cfg, comp, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "demean",
										"comment": "'no' or 'yes', whether to demean the input data (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "updatesens",
							"code": [
								{
									"call": "ft_rejectcomponent(cfg, comp, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "updatesens",
										"comment": "'no' or 'yes' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_rejectcomponent(cfg, comp, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_rejectcomponent(cfg, comp, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_rejectvisual",
					"code": [
						{
							"call": "ft_rejectvisual(cfg, data)",
							"language": "fieldtrip",
							"argout": "[data]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_rejectvisual.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_rejectvisual(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "method",
										"comment": "string, describes how the data should be shown, this can be"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_rejectvisual(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "channel",
										"comment": "Nx1 cell-array with selection of channels (default = 'all'),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "keepchannel",
							"code": [
								{
									"call": "ft_rejectvisual(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "keepchannel",
										"comment": "string, determines how to deal with channels that are not selected, can be"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "neighbours",
							"code": [
								{
									"call": "ft_rejectvisual(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "neighbours",
										"comment": "neighbourhood structure, see also FT_PREPARE_NEIGHBOURS (required for repairing channels)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trials",
							"code": [
								{
									"call": "ft_rejectvisual(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "trials",
										"comment": "'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "keeptrial",
							"code": [
								{
									"call": "ft_rejectvisual(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "keeptrial",
										"comment": "string, determines how to deal with trials that are"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "metric",
							"code": [
								{
									"call": "ft_rejectvisual(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "metric",
										"comment": "string, describes the metric that should be computed in summary mode"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "latency",
							"code": [
								{
									"call": "ft_rejectvisual(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "latency",
										"comment": "[begin end] in seconds, or 'all', 'minperiod', 'maxperiod',"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "alim",
							"code": [
								{
									"call": "ft_rejectvisual(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "alim",
										"comment": "value that determines the amplitude scaling for the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "eegscale",
							"code": [
								{
									"call": "ft_rejectvisual(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "eegscale",
										"comment": "number, scaling to apply to the EEG channels prior to display"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "eogscale",
							"code": [
								{
									"call": "ft_rejectvisual(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "eogscale",
										"comment": "number, scaling to apply to the EOG channels prior to display"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "ecgscale",
							"code": [
								{
									"call": "ft_rejectvisual(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "ecgscale",
										"comment": "number, scaling to apply to the ECG channels prior to display"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "emgscale",
							"code": [
								{
									"call": "ft_rejectvisual(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "emgscale",
										"comment": "number, scaling to apply to the EMG channels prior to display"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "megscale",
							"code": [
								{
									"call": "ft_rejectvisual(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "megscale",
										"comment": "number, scaling to apply to the MEG channels prior to display"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "gradscale",
							"code": [
								{
									"call": "ft_rejectvisual(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "gradscale",
										"comment": "number, scaling to apply to the MEG gradiometer channels prior to display (in addition to the cfg.megscale factor)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "magscale",
							"code": [
								{
									"call": "ft_rejectvisual(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "magscale",
										"comment": "number, scaling to apply to the MEG magnetometer channels prior to display (in addition to the cfg.megscale factor)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "preproc.bpfilter",
							"code": [
								{
									"call": "ft_rejectvisual(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "preproc.bpfilter",
										"comment": "'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "preproc.bpfilttype",
							"code": [
								{
									"call": "ft_rejectvisual(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "preproc.bpfilttype",
										"comment": "'but'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "preproc.bpfreq",
							"code": [
								{
									"call": "ft_rejectvisual(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "preproc.bpfreq",
										"comment": "[1 15]"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "preproc.bpfiltord",
							"code": [
								{
									"call": "ft_rejectvisual(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "preproc.bpfiltord",
										"comment": "4"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "preproc.rectify",
							"code": [
								{
									"call": "ft_rejectvisual(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "preproc.rectify",
										"comment": "'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "preproc.bpfilter",
							"code": [
								{
									"call": "ft_rejectvisual(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "preproc.bpfilter",
										"comment": "'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "preproc.bpfreq",
							"code": [
								{
									"call": "ft_rejectvisual(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "preproc.bpfreq",
										"comment": "[110 140]"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "preproc.bpfiltord",
							"code": [
								{
									"call": "ft_rejectvisual(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "preproc.bpfiltord",
										"comment": " 8"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "preproc.bpfilttype",
							"code": [
								{
									"call": "ft_rejectvisual(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "preproc.bpfilttype",
										"comment": "'but'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "preproc.rectify",
							"code": [
								{
									"call": "ft_rejectvisual(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "preproc.rectify",
										"comment": "'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "preproc.boxcar",
							"code": [
								{
									"call": "ft_rejectvisual(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "preproc.boxcar",
										"comment": "0.2"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_rejectvisual(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_rejectvisual(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_removetemplateartifact",
					"code": [
						{
							"call": "ft_removetemplateartifact(cfg, data, template)",
							"language": "fieldtrip",
							"argout": "[data]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_removetemplateartifact.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_removetemplateartifact(cfg, data, template)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "channel",
										"comment": "Nx1 cell-array with selection of channels (default = 'all'), see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "artifact",
							"code": [
								{
									"call": "ft_removetemplateartifact(cfg, data, template)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "artifact",
										"comment": "Mx2 matrix with sample numbers of the artifact segments, e.g. obtained from FT_ARTIFACT_EOG"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_removetemplateartifact(cfg, data, template)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_removetemplateartifact(cfg, data, template)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_reproducescript",
					"code": [
						{
							"call": null,
							"language": "fieldtrip",
							"cfgfield": {
								"name": "reproducescript",
								"comment": "string, directory with the script and intermediate data"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_reproducescript.m",
					"ports": {
						"input": true,
						"output": true,
						"visible": true,
						"editable": true,
						"name": "reproducescript",
						"code": [
							{
								"call": null,
								"language": "fieldtrip",
								"cfgfield": {
									"name": "reproducescript",
									"comment": "string, directory with the script and intermediate data"
								}
							}
						]
					}
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_resampledata",
					"code": [
						{
							"call": "ft_resampledata(cfg, data)",
							"language": "fieldtrip",
							"argout": "[data]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_resampledata.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "resamplefs",
							"code": [
								{
									"call": "ft_resampledata(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "resamplefs",
										"comment": "frequency at which the data will be resampled (default = 256 Hz)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "detrend",
							"code": [
								{
									"call": "ft_resampledata(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "detrend",
										"comment": "'no' or 'yes', detrend the data prior to resampling (no default specified, see below)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "demean",
							"code": [
								{
									"call": "ft_resampledata(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "demean",
										"comment": "'no' or 'yes', whether to apply baseline correction (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "baselinewindow",
							"code": [
								{
									"call": "ft_resampledata(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "baselinewindow",
										"comment": "[begin end] in seconds, the default is the complete trial (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "feedback",
							"code": [
								{
									"call": "ft_resampledata(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "feedback",
										"comment": "'no', 'text', 'textbar', 'gui' (default = 'text')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trials",
							"code": [
								{
									"call": "ft_resampledata(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "trials",
										"comment": "'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "sampleindex",
							"code": [
								{
									"call": "ft_resampledata(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "sampleindex",
										"comment": "'no' or 'yes', add a channel with the original sample indices (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "time",
							"code": [
								{
									"call": "ft_resampledata(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "time",
										"comment": "cell-array with one time axis per trial (i.e. from another dataset)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_resampledata(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "method",
										"comment": "interpolation method, see INTERP1 (default = 'pchip')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_resampledata(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_resampledata(cfg, data)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_respiration",
					"code": [
						{
							"call": "ft_respiration(cfg, datain)",
							"language": "fieldtrip",
							"argout": "[dataout]",
							"cfgfield": {
								"name": "preproc.bpfreq",
								"comment": "[low high], filter frequency in Hz"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_respiration.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_respiration(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "channel",
										"comment": "selected channel for processing, see FT_CHANNELSELECTION"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "peakseparation",
							"code": [
								{
									"call": "ft_respiration(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "peakseparation",
										"comment": "scalar, time in seconds"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "envelopewindow",
							"code": [
								{
									"call": "ft_respiration(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "envelopewindow",
										"comment": "scalar, time in seconds"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "feedback",
							"code": [
								{
									"call": "ft_respiration(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "feedback",
										"comment": "'yes' or 'no'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "preproc.bpfilter",
							"code": [
								{
									"call": "ft_respiration(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "preproc.bpfilter",
										"comment": "'yes' or 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "preproc.bpfreq",
							"code": [
								{
									"call": "ft_respiration(cfg, datain)",
									"language": "fieldtrip",
									"argout": "[dataout]",
									"cfgfield": {
										"name": "preproc.bpfreq",
										"comment": "[low high], filter frequency in Hz"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_scalpcurrentdensity",
					"code": [
						{
							"call": "ft_scalpcurrentdensity(cfg, data)",
							"language": "fieldtrip",
							"argout": "[scd]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_scalpcurrentdensity.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_scalpcurrentdensity(cfg, data)",
									"language": "fieldtrip",
									"argout": "[scd]",
									"cfgfield": {
										"name": "method",
										"comment": "'finite' for finite-difference method or"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "elec",
							"code": [
								{
									"call": "ft_scalpcurrentdensity(cfg, data)",
									"language": "fieldtrip",
									"argout": "[scd]",
									"cfgfield": {
										"name": "elec",
										"comment": "structure with electrode positions or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trials",
							"code": [
								{
									"call": "ft_scalpcurrentdensity(cfg, data)",
									"language": "fieldtrip",
									"argout": "[scd]",
									"cfgfield": {
										"name": "trials",
										"comment": "'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "feedback",
							"code": [
								{
									"call": "ft_scalpcurrentdensity(cfg, data)",
									"language": "fieldtrip",
									"argout": "[scd]",
									"cfgfield": {
										"name": "feedback",
										"comment": "string, 'no', 'text', 'textbar', 'gui' (default = 'text')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "conductivity",
							"code": [
								{
									"call": "ft_scalpcurrentdensity(cfg, data)",
									"language": "fieldtrip",
									"argout": "[scd]",
									"cfgfield": {
										"name": "conductivity",
										"comment": "conductivity of the skin (default = 0.33 S/m)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "conductivity",
							"code": [
								{
									"call": "ft_scalpcurrentdensity(cfg, data)",
									"language": "fieldtrip",
									"argout": "[scd]",
									"cfgfield": {
										"name": "conductivity",
										"comment": "conductivity of the skin (default = 0.33 S/m)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "lambda",
							"code": [
								{
									"call": "ft_scalpcurrentdensity(cfg, data)",
									"language": "fieldtrip",
									"argout": "[scd]",
									"cfgfield": {
										"name": "lambda",
										"comment": "regularization parameter (default = 1e-05)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "order",
							"code": [
								{
									"call": "ft_scalpcurrentdensity(cfg, data)",
									"language": "fieldtrip",
									"argout": "[scd]",
									"cfgfield": {
										"name": "order",
										"comment": "order of the splines (default = 4)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "degree",
							"code": [
								{
									"call": "ft_scalpcurrentdensity(cfg, data)",
									"language": "fieldtrip",
									"argout": "[scd]",
									"cfgfield": {
										"name": "degree",
										"comment": "degree of legendre polynomials (default for"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "neighbours",
							"code": [
								{
									"call": "ft_scalpcurrentdensity(cfg, data)",
									"language": "fieldtrip",
									"argout": "[scd]",
									"cfgfield": {
										"name": "neighbours",
										"comment": "neighbourhood structure, see FT_PREPARE_NEIGHBOURS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "badchannel",
							"code": [
								{
									"call": "ft_scalpcurrentdensity(cfg, data)",
									"language": "fieldtrip",
									"argout": "[scd]",
									"cfgfield": {
										"name": "badchannel",
										"comment": "cell-array, see FT_CHANNELSELECTION for details (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_scalpcurrentdensity(cfg, data)",
									"language": "fieldtrip",
									"argout": "[scd]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_scalpcurrentdensity(cfg, data)",
									"language": "fieldtrip",
									"argout": "[scd]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_singleplotER",
					"code": [
						{
							"call": "ft_singleplotER(cfg, varargin)",
							"language": "fieldtrip",
							"argout": "[cfg]",
							"cfgfield": {
								"name": "inputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_singleplotER.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "parameter",
							"code": [
								{
									"call": "ft_singleplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "parameter",
										"comment": "field to be plotted on y-axis (default depends on data.dimord)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "maskparameter",
							"code": [
								{
									"call": "ft_singleplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "maskparameter",
										"comment": "field in the first dataset to be used for masking of data"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "maskstyle",
							"code": [
								{
									"call": "ft_singleplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "maskstyle",
										"comment": "style used for masking of data, 'box', 'thickness' or 'saturation' (default = 'box')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "maskfacealpha",
							"code": [
								{
									"call": "ft_singleplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "maskfacealpha",
										"comment": "mask transparency value between 0 and 1"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "xlim",
							"code": [
								{
									"call": "ft_singleplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "xlim",
										"comment": "'maxmin' or [xmin xmax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "ylim",
							"code": [
								{
									"call": "ft_singleplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "ylim",
										"comment": "'maxmin', 'maxabs', 'zeromax', 'minzero', or [ymin ymax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_singleplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "channel",
										"comment": "nx1 cell-array with selection of channels (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "title",
							"code": [
								{
									"call": "ft_singleplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "title",
										"comment": "string, title of plot"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "refchannel",
							"code": [
								{
									"call": "ft_singleplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "refchannel",
										"comment": "name of reference channel for visualising connectivity, can be 'gui'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "baseline",
							"code": [
								{
									"call": "ft_singleplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "baseline",
										"comment": "'yes', 'no' or [time1 time2] (default = 'no'), see ft_timelockbaseline"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "baselinetype",
							"code": [
								{
									"call": "ft_singleplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "baselinetype",
										"comment": "'absolute' or 'relative' (default = 'absolute')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trials",
							"code": [
								{
									"call": "ft_singleplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "trials",
										"comment": "'all' or a selection given as a 1xn vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fontsize",
							"code": [
								{
									"call": "ft_singleplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "fontsize",
										"comment": "font size of title (default = 8)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "hotkeys",
							"code": [
								{
									"call": "ft_singleplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "hotkeys",
										"comment": "enables hotkeys (leftarrow/rightarrow/uparrow/downarrow/m) for dynamic zoom and translation (ctrl+) of the axes"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "interactive",
							"code": [
								{
									"call": "ft_singleplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "interactive",
										"comment": "interactive plot 'yes' or 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "renderer",
							"code": [
								{
									"call": "ft_singleplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "renderer",
										"comment": "'painters', 'zbuffer', ' opengl' or 'none' (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "linestyle",
							"code": [
								{
									"call": "ft_singleplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "linestyle",
										"comment": "linestyle/marker type, see options of the PLOT function (default = '-')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "linewidth",
							"code": [
								{
									"call": "ft_singleplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "linewidth",
										"comment": "linewidth in points (default = 0.5)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "graphcolor",
							"code": [
								{
									"call": "ft_singleplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "graphcolor",
										"comment": "color(s) used for plotting the dataset(s) (default = 'brgkywrgbkywrgbkywrgbkyw')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "directionality",
							"code": [
								{
									"call": "ft_singleplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "directionality",
										"comment": "'', 'inflow' or 'outflow' specifies for"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_singleplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_singleplotTFR",
					"code": [
						{
							"call": "ft_singleplotTFR(cfg, data)",
							"language": "fieldtrip",
							"argout": "[cfg]",
							"cfgfield": {
								"name": "directionality",
								"comment": "'', 'inflow' or 'outflow' specifies for"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_singleplotTFR.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "parameter",
							"code": [
								{
									"call": "ft_singleplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "parameter",
										"comment": "field to be plotted on z-axis, e.g. 'powspcrtrm' (default depends on data.dimord)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "maskparameter",
							"code": [
								{
									"call": "ft_singleplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "maskparameter",
										"comment": "field in the data to be used for masking of data, can be logical (e.g. significant data points) or numerical (e.g. t-values)."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "maskstyle",
							"code": [
								{
									"call": "ft_singleplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "maskstyle",
										"comment": "style used to masking, 'opacity', 'saturation', or 'outline' (default = 'opacity')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "maskalpha",
							"code": [
								{
									"call": "ft_singleplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "maskalpha",
										"comment": "alpha value between 0 (transparent) and 1 (opaque) used for masking areas dictated by cfg.maskparameter (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "masknans",
							"code": [
								{
									"call": "ft_singleplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "masknans",
										"comment": "'yes' or 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "xlim",
							"code": [
								{
									"call": "ft_singleplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "xlim",
										"comment": "'maxmin' or [xmin xmax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "ylim",
							"code": [
								{
									"call": "ft_singleplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "ylim",
										"comment": "'maxmin' or [ymin ymax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "zlim",
							"code": [
								{
									"call": "ft_singleplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "zlim",
										"comment": "plotting limits for color dimension, 'maxmin', 'maxabs', 'zeromax', 'minzero', or [zmin zmax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "baseline",
							"code": [
								{
									"call": "ft_singleplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "baseline",
										"comment": "'yes', 'no' or [time1 time2] (default = 'no'), see FT_FREQBASELINE"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "baselinetype",
							"code": [
								{
									"call": "ft_singleplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "baselinetype",
										"comment": "'absolute', 'relative', 'relchange', 'normchange', 'db' or 'zscore' (default = 'absolute')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trials",
							"code": [
								{
									"call": "ft_singleplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "trials",
										"comment": "'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_singleplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "channel",
										"comment": "Nx1 cell-array with selection of channels (default = 'all'),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "title",
							"code": [
								{
									"call": "ft_singleplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "title",
										"comment": "string, title of plot"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "refchannel",
							"code": [
								{
									"call": "ft_singleplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "refchannel",
										"comment": "name of reference channel for visualising connectivity, can be 'gui'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fontsize",
							"code": [
								{
									"call": "ft_singleplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "fontsize",
										"comment": "font size of title (default = 8)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "hotkeys",
							"code": [
								{
									"call": "ft_singleplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "hotkeys",
										"comment": "enables hotkeys (leftarrow/rightarrow/uparrow/downarrow/pageup/pagedown/m) for dynamic zoom and translation (ctrl+) of the axes and color limits"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "colormap",
							"code": [
								{
									"call": "ft_singleplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "colormap",
										"comment": "any sized colormap, see COLORMAP"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "colorbar",
							"code": [
								{
									"call": "ft_singleplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "colorbar",
										"comment": "'yes', 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "colorbartext",
							"code": [
								{
									"call": "ft_singleplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "colorbartext",
										"comment": " string indicating the text next to colorbar"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "interactive",
							"code": [
								{
									"call": "ft_singleplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "interactive",
										"comment": "Interactive plot 'yes' or 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "renderer",
							"code": [
								{
									"call": "ft_singleplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "renderer",
										"comment": "'painters', 'zbuffer', ' opengl' or 'none' (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "directionality",
							"code": [
								{
									"call": "ft_singleplotTFR(cfg, data)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "directionality",
										"comment": "'', 'inflow' or 'outflow' specifies for"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_sliceinterp",
					"code": [
						{
							"call": "ft_sliceinterp(cfg, ininterp)",
							"language": "fieldtrip",
							"argout": "[outim]"
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_sliceinterp.m",
					"ports": null
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_sourceanalysis",
					"code": [
						{
							"call": "ft_sourceanalysis(cfg, data, baseline)",
							"language": "fieldtrip",
							"argout": "[source]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_sourceanalysis.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "method",
										"comment": "'lcmv'    linear constrained minimum variance beamformer"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "xgrid",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "xgrid",
										"comment": "vector (e.g. -20:1:20) or 'auto' (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "ygrid",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "ygrid",
										"comment": "vector (e.g. -20:1:20) or 'auto' (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "zgrid",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "zgrid",
										"comment": "vector (e.g.   0:1:20) or 'auto' (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "resolution",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "resolution",
										"comment": "number (e.g. 1 cm) for automatic grid generation"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "sourcemodel.pos",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "sourcemodel.pos",
										"comment": "N*3 matrix with the vertex positions of the cortical sheet"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "sourcemodel.tri",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "sourcemodel.tri",
										"comment": "M*3 matrix that describes the triangles connecting the vertices"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "sourcemodel.pos",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "sourcemodel.pos",
										"comment": "N*3 matrix with position of each source"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "sourcemodel.inside",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "sourcemodel.inside",
										"comment": "N*1 vector with boolean value whether grid point is inside brain (optional)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "sourcemodel.dim",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "sourcemodel.dim",
										"comment": "[Nx Ny Nz] vector with dimensions in case of 3-D grid (optional)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "sourcemodel.filter",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "sourcemodel.filter",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "sourcemodel.leadfield",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "sourcemodel.leadfield",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "rawtrial",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "rawtrial",
										"comment": "'no' or 'yes'   construct filter from single trials, apply to single trials. Note that you also may want to set cfg.keeptrials='yes' to keep all trial information, especially if using in combination with sourcemodel.filter"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "jackknife",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "jackknife",
										"comment": "'no' or 'yes'   jackknife resampling of trials"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "pseudovalue",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "pseudovalue",
										"comment": "'no' or 'yes'   pseudovalue resampling of trials"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "bootstrap",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "bootstrap",
										"comment": "'no' or 'yes'   bootstrap resampling of trials"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "numbootstrap",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "numbootstrap",
										"comment": "number of bootstrap replications (e.g. number of original trials)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "randomization",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "randomization",
										"comment": "'no' or 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "permutation",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "permutation",
										"comment": "'no' or 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "numrandomization",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "numrandomization",
										"comment": "number, e.g. 500"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "numpermutation",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "numpermutation",
										"comment": "number, e.g. 500 or 'all'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "reducerank",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "reducerank",
										"comment": "'no', or number (default = 3 for EEG, 2 for MEG)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "normalize",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "normalize",
										"comment": "'no' or 'yes' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "channel",
										"comment": "Nx1 cell-array with selection of channels (default = 'all'),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "frequency",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "frequency",
										"comment": "single number (in Hz)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "latency",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "latency",
										"comment": "single number in seconds, for time-frequency analysis"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "lambda",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "lambda",
										"comment": "number or empty for automatic default"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "kappa",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "kappa",
										"comment": "number or empty for automatic default"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "tol",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "tol",
										"comment": "number or empty for automatic default"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "refchan",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "refchan",
										"comment": "reference channel label (for coherence)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "refdip",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "refdip",
										"comment": "reference dipole location (for coherence)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "supchan",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "supchan",
										"comment": "suppressed channel label(s)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "supdip",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "supdip",
										"comment": "suppressed dipole location(s)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "keeptrials",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "keeptrials",
										"comment": "'no' or 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "keepleadfield",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "keepleadfield",
										"comment": "'no' or 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "projectnoise",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "projectnoise",
										"comment": "'no' or 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "keepfilter",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "keepfilter",
										"comment": "'no' or 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "keepcsd",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "keepcsd",
										"comment": "'no' or 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "keepmom",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "keepmom",
										"comment": "'no' or 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "feedback",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "feedback",
										"comment": "'no', 'text', 'textbar', 'gui' (default = 'text')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headmodel",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "headmodel",
										"comment": "structure with volume conduction model, see FT_PREPARE_HEADMODEL"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "elec",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "elec",
										"comment": "structure with electrode positions or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "grad",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "grad",
										"comment": "structure with gradiometer definition or filename, see FT_READ_SENS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_sourceanalysis(cfg, data, baseline)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_sourcedescriptives",
					"code": [
						{
							"call": "ft_sourcedescriptives(cfg, source)",
							"language": "fieldtrip",
							"argout": "[source]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_sourcedescriptives.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cohmethod",
							"code": [
								{
									"call": "ft_sourcedescriptives(cfg, source)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "cohmethod",
										"comment": "'regular', 'lambda1', 'canonical'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "powmethod",
							"code": [
								{
									"call": "ft_sourcedescriptives(cfg, source)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "powmethod",
										"comment": "'regular', 'lambda1', 'trace', 'none'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "supmethod",
							"code": [
								{
									"call": "ft_sourcedescriptives(cfg, source)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "supmethod",
										"comment": "'chan_dip', 'chan', 'dip', 'none' (default)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "projectmom",
							"code": [
								{
									"call": "ft_sourcedescriptives(cfg, source)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "projectmom",
										"comment": "'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "eta",
							"code": [
								{
									"call": "ft_sourcedescriptives(cfg, source)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "eta",
										"comment": "'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "kurtosis",
							"code": [
								{
									"call": "ft_sourcedescriptives(cfg, source)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "kurtosis",
										"comment": "'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "keeptrials",
							"code": [
								{
									"call": "ft_sourcedescriptives(cfg, source)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "keeptrials",
										"comment": "'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "keepcsd",
							"code": [
								{
									"call": "ft_sourcedescriptives(cfg, source)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "keepcsd",
										"comment": "'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "keepnoisecsd",
							"code": [
								{
									"call": "ft_sourcedescriptives(cfg, source)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "keepnoisecsd",
										"comment": "'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "keepmom",
							"code": [
								{
									"call": "ft_sourcedescriptives(cfg, source)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "keepmom",
										"comment": "'yes' or 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "keepnoisemom",
							"code": [
								{
									"call": "ft_sourcedescriptives(cfg, source)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "keepnoisemom",
										"comment": "'yes' or 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "resolutionmatrix",
							"code": [
								{
									"call": "ft_sourcedescriptives(cfg, source)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "resolutionmatrix",
										"comment": "'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "feedback",
							"code": [
								{
									"call": "ft_sourcedescriptives(cfg, source)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "feedback",
										"comment": "'no', 'text' (default), 'textbar', 'gui'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fixedori",
							"code": [
								{
									"call": "ft_sourcedescriptives(cfg, source)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "fixedori",
										"comment": "'within_trials' or 'over_trials' (default = 'over_trials')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_sourcedescriptives(cfg, source)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_sourcedescriptives(cfg, source)",
									"language": "fieldtrip",
									"argout": "[source]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_sourcegrandaverage",
					"code": [
						{
							"call": "ft_sourcegrandaverage(cfg, varargin)",
							"language": "fieldtrip",
							"argout": "[grandavg]",
							"cfgfield": {
								"name": "c2",
								"comment": "list with subjects belonging to condition 2 (or B)"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_sourcegrandaverage.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "parameter",
							"code": [
								{
									"call": "ft_sourcegrandaverage(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[grandavg]",
									"cfgfield": {
										"name": "parameter",
										"comment": "string, describing the functional data to be processed, e.g. 'pow', 'nai' or 'coh'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "keepindividual",
							"code": [
								{
									"call": "ft_sourcegrandaverage(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[grandavg]",
									"cfgfield": {
										"name": "keepindividual",
										"comment": "'no' or 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_sourcegrandaverage(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[grandavg]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_sourcegrandaverage(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[grandavg]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "randomization",
							"code": [
								{
									"call": "ft_sourcegrandaverage(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[grandavg]",
									"cfgfield": {
										"name": "randomization",
										"comment": "'no' or 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "permutation",
							"code": [
								{
									"call": "ft_sourcegrandaverage(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[grandavg]",
									"cfgfield": {
										"name": "permutation",
										"comment": "'no' or 'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "numrandomization",
							"code": [
								{
									"call": "ft_sourcegrandaverage(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[grandavg]",
									"cfgfield": {
										"name": "numrandomization",
										"comment": "number, e.g. 500"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "numpermutation",
							"code": [
								{
									"call": "ft_sourcegrandaverage(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[grandavg]",
									"cfgfield": {
										"name": "numpermutation",
										"comment": "number, e.g. 500 or 'all'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "c1",
							"code": [
								{
									"call": "ft_sourcegrandaverage(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[grandavg]",
									"cfgfield": {
										"name": "c1",
										"comment": "list with subjects belonging to condition 1 (or A)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "c2",
							"code": [
								{
									"call": "ft_sourcegrandaverage(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[grandavg]",
									"cfgfield": {
										"name": "c2",
										"comment": "list with subjects belonging to condition 2 (or B)"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_sourceinterpolate",
					"code": [
						{
							"call": "ft_sourceinterpolate(cfg, functional, anatomical)",
							"language": "fieldtrip",
							"argout": "[interp]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_sourceinterpolate.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "parameter",
							"code": [
								{
									"call": "ft_sourceinterpolate(cfg, functional, anatomical)",
									"language": "fieldtrip",
									"argout": "[interp]",
									"cfgfield": {
										"name": "parameter",
										"comment": "string (or cell-array) of the parameter(s) to be interpolated"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "downsample",
							"code": [
								{
									"call": "ft_sourceinterpolate(cfg, functional, anatomical)",
									"language": "fieldtrip",
									"argout": "[interp]",
									"cfgfield": {
										"name": "downsample",
										"comment": "integer number (default = 1, i.e. no downsampling)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "interpmethod",
							"code": [
								{
									"call": "ft_sourceinterpolate(cfg, functional, anatomical)",
									"language": "fieldtrip",
									"argout": "[interp]",
									"cfgfield": {
										"name": "interpmethod",
										"comment": "string, can be 'nearest', 'linear', 'cubic',  'spline', 'sphere_avg' or 'smudge' (default = 'linear for interpolating two 3D volumes, 'nearest' for all other cases)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_sourceinterpolate(cfg, functional, anatomical)",
									"language": "fieldtrip",
									"argout": "[interp]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_sourceinterpolate(cfg, functional, anatomical)",
									"language": "fieldtrip",
									"argout": "[interp]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_sourcemovie",
					"code": [
						{
							"call": "ft_sourcemovie(cfg, source, source2)",
							"language": "fieldtrip",
							"argout": "[cfg, M]",
							"cfgfield": {
								"name": "inputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_sourcemovie.m",
					"ports": {
						"input": true,
						"output": true,
						"visible": true,
						"editable": true,
						"name": "inputfile",
						"code": [
							{
								"call": "ft_sourcemovie(cfg, source, source2)",
								"language": "fieldtrip",
								"argout": "[cfg, M]",
								"cfgfield": {
									"name": "inputfile",
									"comment": " ..."
								}
							}
						]
					}
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_sourceparcellate",
					"code": [
						{
							"call": "ft_sourceparcellate(cfg, source, parcellation)",
							"language": "fieldtrip",
							"argout": "[parcel]",
							"cfgfield": {
								"name": "parameter",
								"comment": "cell-array with strings, fields that should be parcellated (default = 'all')"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_sourceparcellate.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_sourceparcellate(cfg, source, parcellation)",
									"language": "fieldtrip",
									"argout": "[parcel]",
									"cfgfield": {
										"name": "method",
										"comment": "string, method to combine the values, see below (default = 'mean')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "parcellation",
							"code": [
								{
									"call": "ft_sourceparcellate(cfg, source, parcellation)",
									"language": "fieldtrip",
									"argout": "[parcel]",
									"cfgfield": {
										"name": "parcellation",
										"comment": "string, fieldname that contains the desired parcellation"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "parameter",
							"code": [
								{
									"call": "ft_sourceparcellate(cfg, source, parcellation)",
									"language": "fieldtrip",
									"argout": "[parcel]",
									"cfgfield": {
										"name": "parameter",
										"comment": "cell-array with strings, fields that should be parcellated (default = 'all')"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_sourceplot",
					"code": [
						{
							"call": null,
							"language": "fieldtrip",
							"cfgfield": {
								"name": "markercolor",
								"comment": "[1x3] marker color in RGB (default = [1 1 1], i.e. white) (orig: from sliceinterp)"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_sourceplot.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "method",
										"comment": "'slice',      plots the data on a number of slices in the same plane"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "anaparameter",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "anaparameter",
										"comment": "string, field in data with the anatomical data (default = 'anatomy' if present in data)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "funparameter",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "funparameter",
										"comment": "string, field in data with the functional parameter of interest (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "maskparameter",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "maskparameter",
										"comment": "string, field in the data to be used for opacity masking of fun data (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "downsample",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "downsample",
										"comment": "downsampling for resolution reduction, integer value (default = 1) (orig: from surface)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "atlas",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "atlas",
										"comment": "string, filename of atlas to use (default = []) see FT_READ_ATLAS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "visible",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "visible",
										"comment": "string, 'on' or 'off', whether figure will be visible (default = 'on')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "funcolormap",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "funcolormap",
										"comment": "colormap for functional data, see COLORMAP (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "funcolorlim",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "funcolorlim",
										"comment": "color range of the functional data (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "colorbar",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "colorbar",
										"comment": "'yes' or 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "colorbartext",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "colorbartext",
										"comment": " string indicating the text next to colorbar"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "latency",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "latency",
										"comment": "scalar or string, can be 'all', 'prestim', 'poststim', or [beg end], specify time range in seconds"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "avgovertime",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "avgovertime",
										"comment": "string, can be 'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "frequency",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "frequency",
										"comment": "scalar or string, can be 'all', or [beg end], specify frequency range in Hz"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "avgoverfreq",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "avgoverfreq",
										"comment": "string, can be 'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "maskstyle",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "maskstyle",
										"comment": "'opacity', or 'colormix'. If 'opacity', low-level"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "opacitymap",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "opacitymap",
										"comment": "opacitymap for mask data, see ALPHAMAP (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "opacitylim",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "opacitylim",
										"comment": "range of mask values to which opacitymap is scaled (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "roi",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "roi",
										"comment": "string or cell of strings, region(s) of interest from anatomical atlas (see cfg.atlas above)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "location",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "location",
										"comment": "location of cut, (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "locationcoordinates",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "locationcoordinates",
										"comment": "coordinate system used in cfg.location, 'head' or 'voxel' (default = 'head')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "crosshair",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "crosshair",
										"comment": "'yes' or 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "axis",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "axis",
										"comment": "'on' or 'off' (default = 'on')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "queryrange",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "queryrange",
										"comment": "number, in atlas voxels (default 3)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "clim",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "clim",
										"comment": "lower and upper anatomical MRI limits (default = [0 1])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "nslices",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "nslices",
										"comment": "number of slices, (default = 20)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "slicerange",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "slicerange",
										"comment": "range of slices in data, (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "slicedim",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "slicedim",
										"comment": "dimension to slice 1 (x-axis) 2(y-axis) 3(z-axis) (default = 3)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "title",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "title",
										"comment": "string, title of the plot"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "figurename",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "figurename",
										"comment": "string, title of the figure window"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "surffile",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "surffile",
										"comment": "string, file that contains the surface (default = 'surface_white_both.mat')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "surfinflated",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "surfinflated",
										"comment": "string, file that contains the inflated surface (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "surfdownsample",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "surfdownsample",
										"comment": "number (default = 1, i.e. no downsampling)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "projmethod",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "projmethod",
										"comment": "projection method, how functional volume data is projected onto surface"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "projvec",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "projvec",
										"comment": "vector (in mm) to allow different projections that"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "projcomb",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "projcomb",
										"comment": "'mean', 'max', method to combine the different projections"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "projweight",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "projweight",
										"comment": "vector of weights for the different projections (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "projthresh",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "projthresh",
										"comment": "implements thresholding on the surface level"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "sphereradius",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "sphereradius",
										"comment": "maximum distance from each voxel to the surface to be"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "distmat",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "distmat",
										"comment": "precomputed distance matrix (default = [])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "camlight",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "camlight",
										"comment": "'yes' or 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "renderer",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "renderer",
										"comment": "'painters', 'zbuffer', ' opengl' or 'none' (default = 'opengl')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "facecolor",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "facecolor",
										"comment": "[r g b] values or string, for example 'brain', 'cortex', 'skin', 'black', 'red', 'r',"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "vertexcolor",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "vertexcolor",
										"comment": "[r g b] values or string, for example 'brain', 'cortex', 'skin', 'black', 'red', 'r',"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "edgecolor",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "edgecolor",
										"comment": "[r g b] values or string, for example 'brain', 'cortex', 'skin', 'black', 'red', 'r'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cloudtype",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "cloudtype",
										"comment": "'point' plots a single point at each sensor position"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "radius",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "radius",
										"comment": "scalar, maximum radius of cloud (default = 4)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "colorgrad",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "colorgrad",
										"comment": "'white' or a scalar (e.g. 1), degree to which color of points in cloud"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "slice",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "slice",
										"comment": "requires 'anatomical' as input (default = 'none')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "ori",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "ori",
										"comment": "'x', 'y', or 'z', specifies the orthogonal plane which will be plotted (default = 'y')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "slicepos",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "slicepos",
										"comment": "'auto' or Nx1 vector specifying the position of the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "nslices",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "nslices",
										"comment": "scalar, number of slices to plot if 'slicepos' = 'auto (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "minspace",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "minspace",
										"comment": "scalar, minimum spacing between slices if nslices>1 (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "marker",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "marker",
										"comment": "[Nx3] array defining N marker positions to display (orig: from sliceinterp)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "markersize",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "markersize",
										"comment": "radius of markers (default = 5)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "markercolor",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "markercolor",
										"comment": "[1x3] marker color in RGB (default = [1 1 1], i.e. white) (orig: from sliceinterp)"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_sourcestatistics",
					"code": [
						{
							"call": "ft_sourcestatistics(cfg, varargin)",
							"language": "fieldtrip",
							"argout": "[stat]",
							"cfgfield": {
								"name": "inputcoord",
								"comment": "'mni' or 'tal', the coordinate system in which your source"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_sourcestatistics.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "parameter",
							"code": [
								{
									"call": "ft_sourcestatistics(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "parameter",
										"comment": "string, describing the functional data to be processed, e.g. 'pow', 'nai' or 'coh'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_sourcestatistics(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "method",
										"comment": "different methods for calculating the probability of the null-hypothesis,"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "atlas",
							"code": [
								{
									"call": "ft_sourcestatistics(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "atlas",
										"comment": "filename of the atlas"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "roi",
							"code": [
								{
									"call": "ft_sourcestatistics(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "roi",
										"comment": "string or cell of strings, region(s) of interest from anatomical atlas"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "avgoverroi",
							"code": [
								{
									"call": "ft_sourcestatistics(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "avgoverroi",
										"comment": "'yes' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "hemisphere",
							"code": [
								{
									"call": "ft_sourcestatistics(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "hemisphere",
										"comment": "'left', 'right', 'both', 'combined', specifying this is"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputcoord",
							"code": [
								{
									"call": "ft_sourcestatistics(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "inputcoord",
										"comment": "'mni' or 'tal', the coordinate system in which your source"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_sourcewrite",
					"code": [
						{
							"call": null,
							"language": "fieldtrip",
							"cfgfield": {
								"name": "inputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_sourcewrite.m",
					"ports": {
						"input": true,
						"output": true,
						"visible": true,
						"editable": true,
						"name": "inputfile",
						"code": [
							{
								"call": null,
								"language": "fieldtrip",
								"cfgfield": {
									"name": "inputfile",
									"comment": " ..."
								}
							}
						]
					}
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_statistics_analytic",
					"code": [
						{
							"call": "ft_statistics_analytic(cfg, dat, design)",
							"language": "fieldtrip",
							"argout": "[stat, cfg]",
							"cfgfield": {
								"name": "statistic",
								"comment": "'indepsamplesT'           independent samples T-statistic,"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_statistics_analytic.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "statistic",
							"code": [
								{
									"call": "ft_statistics_analytic(cfg, dat, design)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "statistic",
										"comment": "string, statistic to compute for each sample or voxel (see below)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "correctm",
							"code": [
								{
									"call": "ft_statistics_analytic(cfg, dat, design)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "correctm",
										"comment": "string, apply multiple-comparison correction, 'no', 'bonferroni', 'holm', 'hochberg', 'fdr' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "alpha",
							"code": [
								{
									"call": "ft_statistics_analytic(cfg, dat, design)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "alpha",
										"comment": "number, critical value for rejecting the null-hypothesis (default = 0.05)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "tail",
							"code": [
								{
									"call": "ft_statistics_analytic(cfg, dat, design)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "tail",
										"comment": "number, -1, 1 or 0 (default = 0)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "ivar",
							"code": [
								{
									"call": "ft_statistics_analytic(cfg, dat, design)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "ivar",
										"comment": "number or list with indices, independent variable(s)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "uvar",
							"code": [
								{
									"call": "ft_statistics_analytic(cfg, dat, design)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "uvar",
										"comment": "number or list with indices, unit variable(s)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "wvar",
							"code": [
								{
									"call": "ft_statistics_analytic(cfg, dat, design)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "wvar",
										"comment": "number or list with indices, within-block variable(s)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "statistic",
							"code": [
								{
									"call": "ft_statistics_analytic(cfg, dat, design)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "statistic",
										"comment": "'indepsamplesT'           independent samples T-statistic,"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_statistics_crossvalidate",
					"code": [
						{
							"call": "ft_statistics_crossvalidate(cfg, dat, design)",
							"language": "fieldtrip",
							"argout": "[stat, cfg]",
							"cfgfield": {
								"name": "resample",
								"comment": "true/false; upsample less occurring classes during"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_statistics_crossvalidate.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "mva",
							"code": [
								{
									"call": "ft_statistics_crossvalidate(cfg, dat, design)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "mva",
										"comment": "a multivariate analysis (default = {dml.standardizer dml.svm})"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "statistic",
							"code": [
								{
									"call": "ft_statistics_crossvalidate(cfg, dat, design)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "statistic",
										"comment": "a cell-array of statistics to report (default = {'accuracy' 'binomial'})"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "nfolds",
							"code": [
								{
									"call": "ft_statistics_crossvalidate(cfg, dat, design)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "nfolds",
										"comment": "number of cross-validation folds (default = 5)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "resample",
							"code": [
								{
									"call": "ft_statistics_crossvalidate(cfg, dat, design)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "resample",
										"comment": "true/false; upsample less occurring classes during"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_statistics_montecarlo",
					"code": [
						{
							"call": "ft_statistics_montecarlo(cfg, dat, design, varargin)",
							"language": "fieldtrip",
							"argout": "[stat, cfg]",
							"cfgfield": {
								"name": "precondition",
								"comment": ""
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_statistics_montecarlo.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "numrandomization",
							"code": [
								{
									"call": "ft_statistics_montecarlo(cfg, dat, design, varargin)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "numrandomization",
										"comment": "number of randomizations, can be 'all'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "correctm",
							"code": [
								{
									"call": "ft_statistics_montecarlo(cfg, dat, design, varargin)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "correctm",
										"comment": "string, apply multiple-comparison correction, 'no', 'max', cluster', 'bonferroni', 'holm', 'hochberg', 'fdr' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "alpha",
							"code": [
								{
									"call": "ft_statistics_montecarlo(cfg, dat, design, varargin)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "alpha",
										"comment": "number, critical value for rejecting the null-hypothesis per tail (default = 0.05)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "tail",
							"code": [
								{
									"call": "ft_statistics_montecarlo(cfg, dat, design, varargin)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "tail",
										"comment": "number, -1, 1 or 0 (default = 0)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "correcttail",
							"code": [
								{
									"call": "ft_statistics_montecarlo(cfg, dat, design, varargin)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "correcttail",
										"comment": "string, correct p-values or alpha-values when doing a two-sided test, 'alpha','prob' or 'no' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "ivar",
							"code": [
								{
									"call": "ft_statistics_montecarlo(cfg, dat, design, varargin)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "ivar",
										"comment": "number or list with indices, independent variable(s)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "uvar",
							"code": [
								{
									"call": "ft_statistics_montecarlo(cfg, dat, design, varargin)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "uvar",
										"comment": "number or list with indices, unit variable(s)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "wvar",
							"code": [
								{
									"call": "ft_statistics_montecarlo(cfg, dat, design, varargin)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "wvar",
										"comment": "number or list with indices, within-cell variable(s)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "cvar",
							"code": [
								{
									"call": "ft_statistics_montecarlo(cfg, dat, design, varargin)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "cvar",
										"comment": "number or list with indices, control variable(s)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "feedback",
							"code": [
								{
									"call": "ft_statistics_montecarlo(cfg, dat, design, varargin)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "feedback",
										"comment": "string, 'gui', 'text', 'textbar' or 'no' (default = 'text')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "randomseed",
							"code": [
								{
									"call": "ft_statistics_montecarlo(cfg, dat, design, varargin)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "randomseed",
										"comment": "string, 'yes', 'no' or a number (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "clusterstatistic",
							"code": [
								{
									"call": "ft_statistics_montecarlo(cfg, dat, design, varargin)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "clusterstatistic",
										"comment": "how to combine the single samples that belong to a cluster, 'maxsum', 'maxsize', 'wcm' (default = 'maxsum')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "clusterthreshold",
							"code": [
								{
									"call": "ft_statistics_montecarlo(cfg, dat, design, varargin)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "clusterthreshold",
										"comment": "method for single-sample threshold, 'parametric', 'nonparametric_individual', 'nonparametric_common' (default = 'parametric')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "clusteralpha",
							"code": [
								{
									"call": "ft_statistics_montecarlo(cfg, dat, design, varargin)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "clusteralpha",
										"comment": "for either parametric or nonparametric thresholding per tail (default = 0.05)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "clustercritval",
							"code": [
								{
									"call": "ft_statistics_montecarlo(cfg, dat, design, varargin)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "clustercritval",
										"comment": "for parametric thresholding (default is determined by the statfun)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "clustertail",
							"code": [
								{
									"call": "ft_statistics_montecarlo(cfg, dat, design, varargin)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "clustertail",
										"comment": "-1, 1 or 0 (default = 0)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "neighbours",
							"code": [
								{
									"call": "ft_statistics_montecarlo(cfg, dat, design, varargin)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "neighbours",
										"comment": "neighbourhood structure, see FT_PREPARE_NEIGHBOURS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "statistic",
							"code": [
								{
									"call": "ft_statistics_montecarlo(cfg, dat, design, varargin)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "statistic",
										"comment": "'indepsamplesT'           independent samples T-statistic,"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "resampling",
							"code": [
								{
									"call": "ft_statistics_montecarlo(cfg, dat, design, varargin)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "resampling",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "computecritval",
							"code": [
								{
									"call": "ft_statistics_montecarlo(cfg, dat, design, varargin)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "computecritval",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "computestat",
							"code": [
								{
									"call": "ft_statistics_montecarlo(cfg, dat, design, varargin)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "computestat",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "computeprob",
							"code": [
								{
									"call": "ft_statistics_montecarlo(cfg, dat, design, varargin)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "computeprob",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "voxelstatistic",
							"code": [
								{
									"call": "ft_statistics_montecarlo(cfg, dat, design, varargin)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "voxelstatistic",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "voxelthreshold",
							"code": [
								{
									"call": "ft_statistics_montecarlo(cfg, dat, design, varargin)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "voxelthreshold",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "precondition",
							"code": [
								{
									"call": "ft_statistics_montecarlo(cfg, dat, design, varargin)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "precondition",
										"comment": ""
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_statistics_mvpa",
					"code": [
						{
							"call": "ft_statistics_mvpa(cfg, dat, design)",
							"language": "fieldtrip",
							"argout": "[stat, cfg]",
							"cfgfield": {
								"name": "mvpa.stratify",
								"comment": "if 1, the class proportions are approximately"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_statistics_mvpa.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "searchlight",
							"code": [
								{
									"call": "ft_statistics_mvpa(cfg, dat, design)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "searchlight",
										"comment": "'yes' or 'no', performs searchlight analysis"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "timextime",
							"code": [
								{
									"call": "ft_statistics_mvpa(cfg, dat, design)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "timextime",
										"comment": "'yes' or 'no', performs time x time"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "mvpa",
							"code": [
								{
									"call": "ft_statistics_mvpa(cfg, dat, design)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "mvpa",
										"comment": "structure that contains detailed options for the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "mvpa.classifier",
							"code": [
								{
									"call": "ft_statistics_mvpa(cfg, dat, design)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "mvpa.classifier",
										"comment": "'lda'          Regularised linear discriminant analysis"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "mvpa.metric",
							"code": [
								{
									"call": "ft_statistics_mvpa(cfg, dat, design)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "mvpa.metric",
										"comment": "string, performance metric. Possible metrics:"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "mvpa.param",
							"code": [
								{
									"call": "ft_statistics_mvpa(cfg, dat, design)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "mvpa.param",
										"comment": "struct, structure with hyperparameters for the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "mvpa.balance",
							"code": [
								{
									"call": "ft_statistics_mvpa(cfg, dat, design)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "mvpa.balance",
										"comment": "string, for imbalanced data that does not have"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "mvpa.cv",
							"code": [
								{
									"call": "ft_statistics_mvpa(cfg, dat, design)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "mvpa.cv",
										"comment": "string, cross-validation type, either 'kfold', 'leaveout'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "mvpa.k",
							"code": [
								{
									"call": "ft_statistics_mvpa(cfg, dat, design)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "mvpa.k",
										"comment": "number of folds in k-fold cross-validation (default 5)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "mvpa.repeat",
							"code": [
								{
									"call": "ft_statistics_mvpa(cfg, dat, design)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "mvpa.repeat",
										"comment": "number of times the cross-validation is repeated"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "mvpa.p",
							"code": [
								{
									"call": "ft_statistics_mvpa(cfg, dat, design)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "mvpa.p",
										"comment": "if cfg.cv is 'holdout', p is the fraction of test"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "mvpa.stratify",
							"code": [
								{
									"call": "ft_statistics_mvpa(cfg, dat, design)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "mvpa.stratify",
										"comment": "if 1, the class proportions are approximately"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_statistics_stats",
					"code": [
						{
							"call": "ft_statistics_stats(cfg, dat, design)",
							"language": "fieldtrip",
							"argout": "[stat, cfg]",
							"cfgfield": {
								"name": "statistic",
								"comment": "'ttest'          test against a mean of zero"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_statistics_stats.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "alpha",
							"code": [
								{
									"call": "ft_statistics_stats(cfg, dat, design)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "alpha",
										"comment": "number, critical value for rejecting the null-hypothesis (default = 0.05)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "tail",
							"code": [
								{
									"call": "ft_statistics_stats(cfg, dat, design)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "tail",
										"comment": "number, -1, 1 or 0 (default = 0)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "feedback",
							"code": [
								{
									"call": "ft_statistics_stats(cfg, dat, design)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "feedback",
										"comment": "string, 'gui', 'text', 'textbar' or 'no' (default = 'textbar')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_statistics_stats(cfg, dat, design)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "method",
										"comment": "'stats'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "statistic",
							"code": [
								{
									"call": "ft_statistics_stats(cfg, dat, design)",
									"language": "fieldtrip",
									"argout": "[stat, cfg]",
									"cfgfield": {
										"name": "statistic",
										"comment": "'ttest'          test against a mean of zero"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_steadystatesimulation",
					"code": [
						{
							"call": "ft_steadystatesimulation(cfg)",
							"language": "fieldtrip",
							"argout": "[data]",
							"cfgfield": {
								"name": "stimulus2.kernelduration",
								"comment": "in seconds (default = 0.75*isi)"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_steadystatesimulation.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fsample",
							"code": [
								{
									"call": "ft_steadystatesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "fsample",
										"comment": "scalar, sampling frequency in Hz (default = 512)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "duration",
							"code": [
								{
									"call": "ft_steadystatesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "duration",
										"comment": "scalar, trial length in seconds (default = 4.56)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "baseline",
							"code": [
								{
									"call": "ft_steadystatesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "baseline",
										"comment": "scalar, baseline length in seconds (default = 0)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "ntrials",
							"code": [
								{
									"call": "ft_steadystatesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "ntrials",
										"comment": "integer N, number of trials (default = 320)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "iti",
							"code": [
								{
									"call": "ft_steadystatesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "iti",
										"comment": "scalar, inter-trial interval in seconds (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "level1.condition",
							"code": [
								{
									"call": "ft_steadystatesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "level1.condition",
										"comment": "scalar, or vector of length L1 (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "level1.gain",
							"code": [
								{
									"call": "ft_steadystatesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "level1.gain",
										"comment": "scalar, or vector of length L1 (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "level2.condition",
							"code": [
								{
									"call": "ft_steadystatesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "level2.condition",
										"comment": "scalar, or vector of length L2 (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "level2.gain",
							"code": [
								{
									"call": "ft_steadystatesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "level2.gain",
										"comment": "scalar, or vector of length L2 (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "level3.condition",
							"code": [
								{
									"call": "ft_steadystatesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "level3.condition",
										"comment": "scalar, or vector of length L3 (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "level3.gain",
							"code": [
								{
									"call": "ft_steadystatesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "level3.gain",
										"comment": "scalar, or vector of length L3 (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "stimulus1.mode",
							"code": [
								{
									"call": "ft_steadystatesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "stimulus1.mode",
										"comment": "'periodic', 'transient' or 'off' (default = 'periodic')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "stimulus2.mode",
							"code": [
								{
									"call": "ft_steadystatesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "stimulus2.mode",
										"comment": "'periodic', 'transient' or 'off' (default = 'transient')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "stimulus1.number",
							"code": [
								{
									"call": "ft_steadystatesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "stimulus1.number",
										"comment": "does not apply for periodic stimuli"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "stimulus1.onset",
							"code": [
								{
									"call": "ft_steadystatesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "stimulus1.onset",
										"comment": "in seconds, first stimulus relative to the start of the trial (default = 0)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "stimulus1.onsetjitter",
							"code": [
								{
									"call": "ft_steadystatesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "stimulus1.onsetjitter",
										"comment": "in seconds, max jitter that is added to the onset (default = 0)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "stimulus1.isi",
							"code": [
								{
									"call": "ft_steadystatesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "stimulus1.isi",
										"comment": "in seconds, i.e. for 10Hz you would specify 0.1 seconds as the interstimulus interval (default = 0.1176)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "stimulus1.isijitter",
							"code": [
								{
									"call": "ft_steadystatesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "stimulus1.isijitter",
										"comment": "in seconds, max jitter relative to the previous stimulus (default = 0)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "stimulus2.condition",
							"code": [
								{
									"call": "ft_steadystatesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "stimulus2.condition",
										"comment": "does not apply for periodic stimuli"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "stimulus2.gain",
							"code": [
								{
									"call": "ft_steadystatesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "stimulus2.gain",
										"comment": "does not apply for periodic stimuli"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "stimulus1.kernelshape",
							"code": [
								{
									"call": "ft_steadystatesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "stimulus1.kernelshape",
										"comment": "'sine'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "stimulus1.kernelduration",
							"code": [
								{
									"call": "ft_steadystatesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "stimulus1.kernelduration",
										"comment": "in seconds (default = isi)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "stimulus2.number",
							"code": [
								{
									"call": "ft_steadystatesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "stimulus2.number",
										"comment": "scalar M, how many transients are to be presented per trial (default = 4)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "stimulus2.onset",
							"code": [
								{
									"call": "ft_steadystatesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "stimulus2.onset",
										"comment": "in seconds, first stimulus relative to the start of the trial (default = 0.7)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "stimulus2.onsetjitter",
							"code": [
								{
									"call": "ft_steadystatesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "stimulus2.onsetjitter",
										"comment": "in seconds, max jitter that is added to the onset (default = 0.2)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "stimulus2.isi",
							"code": [
								{
									"call": "ft_steadystatesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "stimulus2.isi",
										"comment": "in seconds as the interstimulus interval (default = 0.7)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "stimulus2.isijitter",
							"code": [
								{
									"call": "ft_steadystatesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "stimulus2.isijitter",
										"comment": "in seconds, max jitter relative to the previous stimulus ((default = 0.2)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "stimulus2.condition",
							"code": [
								{
									"call": "ft_steadystatesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "stimulus2.condition",
										"comment": "1xM vector with condition codes for each transient within a trial (default = [1 1 2 2])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "stimulus2.gain",
							"code": [
								{
									"call": "ft_steadystatesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "stimulus2.gain",
										"comment": "1xM vector with gain for each condition for each transient within a trial(default = [1 1 1 1])"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "stimulus2.kernelshape",
							"code": [
								{
									"call": "ft_steadystatesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "stimulus2.kernelshape",
										"comment": "'hanning'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "stimulus2.kernelduration",
							"code": [
								{
									"call": "ft_steadystatesimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[data]",
									"cfgfield": {
										"name": "stimulus2.kernelduration",
										"comment": "in seconds (default = 0.75*isi)"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_stratify",
					"code": [
						{
							"call": "ft_stratify(cfg, varargin)",
							"language": "fieldtrip",
							"argout": "[varargout]",
							"cfgfield": {
								"name": "channel",
								"comment": "'all' or list with indices ( default = 'all')"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_stratify.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_stratify(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[varargout]",
									"cfgfield": {
										"name": "method",
										"comment": "'histogram'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "equalbinavg",
							"code": [
								{
									"call": "ft_stratify(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[varargout]",
									"cfgfield": {
										"name": "equalbinavg",
										"comment": "'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "numbin",
							"code": [
								{
									"call": "ft_stratify(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[varargout]",
									"cfgfield": {
										"name": "numbin",
										"comment": "10"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "numiter",
							"code": [
								{
									"call": "ft_stratify(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[varargout]",
									"cfgfield": {
										"name": "numiter",
										"comment": "2000"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "pairtrials",
							"code": [
								{
									"call": "ft_stratify(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[varargout]",
									"cfgfield": {
										"name": "pairtrials",
										"comment": "'spikesort', 'linkage' or 'no' (default = 'spikesort')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_stratify(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[varargout]",
									"cfgfield": {
										"name": "channel",
										"comment": "'all' or list with indices ( default = 'all')"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_timelockanalysis",
					"code": [
						{
							"call": "ft_timelockanalysis(cfg, data)",
							"language": "fieldtrip",
							"argout": "[timelock]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_timelockanalysis.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_timelockanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[timelock]",
									"cfgfield": {
										"name": "channel",
										"comment": "Nx1 cell-array with selection of channels (default = 'all'),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trials",
							"code": [
								{
									"call": "ft_timelockanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[timelock]",
									"cfgfield": {
										"name": "trials",
										"comment": "'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "latency",
							"code": [
								{
									"call": "ft_timelockanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[timelock]",
									"cfgfield": {
										"name": "latency",
										"comment": "[begin end] in seconds, or 'all', 'minperiod', 'maxperiod',"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "covariance",
							"code": [
								{
									"call": "ft_timelockanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[timelock]",
									"cfgfield": {
										"name": "covariance",
										"comment": "'no' or 'yes' (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "covariancewindow",
							"code": [
								{
									"call": "ft_timelockanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[timelock]",
									"cfgfield": {
										"name": "covariancewindow",
										"comment": "[begin end] in seconds, or 'all', 'minperiod', 'maxperiod',"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "keeptrials",
							"code": [
								{
									"call": "ft_timelockanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[timelock]",
									"cfgfield": {
										"name": "keeptrials",
										"comment": "'yes' or 'no', return individual trials or average (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "removemean",
							"code": [
								{
									"call": "ft_timelockanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[timelock]",
									"cfgfield": {
										"name": "removemean",
										"comment": "'no' or 'yes' for covariance computation (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_timelockanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[timelock]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_timelockanalysis(cfg, data)",
									"language": "fieldtrip",
									"argout": "[timelock]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_timelockbaseline",
					"code": [
						{
							"call": "ft_timelockbaseline(cfg, timelock)",
							"language": "fieldtrip",
							"argout": "[timelock]",
							"cfgfield": {
								"name": "version",
								"comment": ""
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_timelockbaseline.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "baseline",
							"code": [
								{
									"call": "ft_timelockbaseline(cfg, timelock)",
									"language": "fieldtrip",
									"argout": "[timelock]",
									"cfgfield": {
										"name": "baseline",
										"comment": "[begin end] (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_timelockbaseline(cfg, timelock)",
									"language": "fieldtrip",
									"argout": "[timelock]",
									"cfgfield": {
										"name": "channel",
										"comment": "cell-array, see FT_CHANNELSELECTION"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "parameter",
							"code": [
								{
									"call": "ft_timelockbaseline(cfg, timelock)",
									"language": "fieldtrip",
									"argout": "[timelock]",
									"cfgfield": {
										"name": "parameter",
										"comment": "field for which to apply baseline normalization, or"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_timelockbaseline(cfg, timelock)",
									"language": "fieldtrip",
									"argout": "[timelock]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_timelockbaseline(cfg, timelock)",
									"language": "fieldtrip",
									"argout": "[timelock]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "baselinewindow",
							"code": [
								{
									"call": "ft_timelockbaseline(cfg, timelock)",
									"language": "fieldtrip",
									"argout": "[timelock]",
									"cfgfield": {
										"name": "baselinewindow",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "previous",
							"code": [
								{
									"call": "ft_timelockbaseline(cfg, timelock)",
									"language": "fieldtrip",
									"argout": "[timelock]",
									"cfgfield": {
										"name": "previous",
										"comment": ""
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "version",
							"code": [
								{
									"call": "ft_timelockbaseline(cfg, timelock)",
									"language": "fieldtrip",
									"argout": "[timelock]",
									"cfgfield": {
										"name": "version",
										"comment": ""
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_timelockgrandaverage",
					"code": [
						{
							"call": "ft_timelockgrandaverage(cfg, varargin)",
							"language": "fieldtrip",
							"argout": "[grandavg]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_timelockgrandaverage.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_timelockgrandaverage(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[grandavg]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_timelockgrandaverage(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[grandavg]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_timelocksimulation",
					"code": [
						{
							"call": "ft_timelocksimulation(cfg)",
							"language": "fieldtrip",
							"argout": "[timelock]",
							"cfgfield": {
								"name": "noise.ampl",
								"comment": "number (default = 0.1)"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_timelocksimulation.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fsample",
							"code": [
								{
									"call": "ft_timelocksimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[timelock]",
									"cfgfield": {
										"name": "fsample",
										"comment": "simulated sample frequency (default = 1000)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trllen",
							"code": [
								{
									"call": "ft_timelocksimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[timelock]",
									"cfgfield": {
										"name": "trllen",
										"comment": "length of simulated trials in seconds (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "numtrl",
							"code": [
								{
									"call": "ft_timelocksimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[timelock]",
									"cfgfield": {
										"name": "numtrl",
										"comment": "number of simulated trials (default = 10)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "baseline",
							"code": [
								{
									"call": "ft_timelocksimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[timelock]",
									"cfgfield": {
										"name": "baseline",
										"comment": "number (default = 0.3)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "s1.numcycli",
							"code": [
								{
									"call": "ft_timelocksimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[timelock]",
									"cfgfield": {
										"name": "s1.numcycli",
										"comment": "number (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "s1.ampl",
							"code": [
								{
									"call": "ft_timelocksimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[timelock]",
									"cfgfield": {
										"name": "s1.ampl",
										"comment": "number (default = 1.0)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "s2.numcycli",
							"code": [
								{
									"call": "ft_timelocksimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[timelock]",
									"cfgfield": {
										"name": "s2.numcycli",
										"comment": "number (default = 2)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "s2.ampl",
							"code": [
								{
									"call": "ft_timelocksimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[timelock]",
									"cfgfield": {
										"name": "s2.ampl",
										"comment": "number (default = 0.7)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "s3.numcycli",
							"code": [
								{
									"call": "ft_timelocksimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[timelock]",
									"cfgfield": {
										"name": "s3.numcycli",
										"comment": "number (default = 4)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "s3.ampl",
							"code": [
								{
									"call": "ft_timelocksimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[timelock]",
									"cfgfield": {
										"name": "s3.ampl",
										"comment": "number (default = 0.2)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "noise.ampl",
							"code": [
								{
									"call": "ft_timelocksimulation(cfg)",
									"language": "fieldtrip",
									"argout": "[timelock]",
									"cfgfield": {
										"name": "noise.ampl",
										"comment": "number (default = 0.1)"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_timelockstatistics",
					"code": [
						{
							"call": "ft_timelockstatistics(cfg, varargin)",
							"language": "fieldtrip",
							"argout": "[stat]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_timelockstatistics.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_timelockstatistics(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "channel",
										"comment": "Nx1 cell-array with selection of channels (default = 'all'),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "latency",
							"code": [
								{
									"call": "ft_timelockstatistics(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "latency",
										"comment": "[begin end] in seconds or 'all' (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "avgoverchan",
							"code": [
								{
									"call": "ft_timelockstatistics(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "avgoverchan",
										"comment": "'yes' or 'no'                   (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "avgovertime",
							"code": [
								{
									"call": "ft_timelockstatistics(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "avgovertime",
										"comment": "'yes' or 'no'                   (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "parameter",
							"code": [
								{
									"call": "ft_timelockstatistics(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "parameter",
										"comment": "string                          (default = 'trial' or 'avg')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_timelockstatistics(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "method",
										"comment": "different methods for calculating the significance probability and/or critical value"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_timelockstatistics(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_timelockstatistics(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[stat]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_topoplotCC",
					"code": [
						{
							"call": "ft_topoplotCC(cfg, freq)",
							"language": "fieldtrip",
							"argout": "[cfg]",
							"cfgfield": {
								"name": "inputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_topoplotCC.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "feedback",
							"code": [
								{
									"call": "ft_topoplotCC(cfg, freq)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "feedback",
										"comment": "string (default = 'textbar')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "layout",
							"code": [
								{
									"call": "ft_topoplotCC(cfg, freq)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "layout",
										"comment": "specification of the layout, see FT_PREPARE_LAYOUT"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "foi",
							"code": [
								{
									"call": "ft_topoplotCC(cfg, freq)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "foi",
										"comment": "the frequency of interest which is to be plotted (default is the first frequency bin)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "widthparam",
							"code": [
								{
									"call": "ft_topoplotCC(cfg, freq)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "widthparam",
										"comment": "string, parameter to be used to control the line width (see below)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "alphaparam",
							"code": [
								{
									"call": "ft_topoplotCC(cfg, freq)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "alphaparam",
										"comment": "string, parameter to be used to control the opacity (see below)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "colorparam",
							"code": [
								{
									"call": "ft_topoplotCC(cfg, freq)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "colorparam",
										"comment": "string, parameter to be used to control the line color"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_topoplotCC(cfg, freq)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_topoplotER",
					"code": [
						{
							"call": "ft_topoplotER(cfg, varargin)",
							"language": "fieldtrip",
							"argout": "[cfg]",
							"cfgfield": {
								"name": "interpolatenan",
								"comment": "string 'yes', 'no' (default = 'yes')"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_topoplotER.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "parameter",
							"code": [
								{
									"call": "ft_topoplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "parameter",
										"comment": "field that contains the data to be plotted as color, for example 'avg', 'powspctrm' or 'cohspctrm' (default is automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "maskparameter",
							"code": [
								{
									"call": "ft_topoplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "maskparameter",
										"comment": "field in the data to be used for masking of data. It should have alues between 0 and 1, where 0 corresponds to transparent."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "xlim",
							"code": [
								{
									"call": "ft_topoplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "xlim",
										"comment": "limit for 1st dimension in data (e.g., time), can be 'maxmin' or [xmin xmax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "zlim",
							"code": [
								{
									"call": "ft_topoplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "zlim",
										"comment": "limits for color dimension, 'maxmin', 'maxabs', 'zeromax', 'minzero', or [zmin zmax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_topoplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "channel",
										"comment": "Nx1 cell-array with selection of channels (default = 'all'), see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "refchannel",
							"code": [
								{
									"call": "ft_topoplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "refchannel",
										"comment": "name of reference channel for visualising connectivity, can be 'gui'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "baseline",
							"code": [
								{
									"call": "ft_topoplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "baseline",
										"comment": "'yes','no' or [time1 time2] (default = 'no'), see FT_TIMELOCKBASELINE or FT_FREQBASELINE"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "baselinetype",
							"code": [
								{
									"call": "ft_topoplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "baselinetype",
										"comment": "'absolute' or 'relative' (default = 'absolute')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trials",
							"code": [
								{
									"call": "ft_topoplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "trials",
										"comment": "'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "colormap",
							"code": [
								{
									"call": "ft_topoplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "colormap",
										"comment": "any sized colormap, see COLORMAP"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "marker",
							"code": [
								{
									"call": "ft_topoplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "marker",
										"comment": "'on', 'labels', 'numbers', 'off'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "markersymbol",
							"code": [
								{
									"call": "ft_topoplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "markersymbol",
										"comment": "channel marker symbol (default = 'o')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "markercolor",
							"code": [
								{
									"call": "ft_topoplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "markercolor",
										"comment": "channel marker color (default = [0 0 0] (black))"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "markersize",
							"code": [
								{
									"call": "ft_topoplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "markersize",
										"comment": "channel marker size (default = 2)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "markerfontsize",
							"code": [
								{
									"call": "ft_topoplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "markerfontsize",
										"comment": "font size of channel labels (default = 8 pt)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "highlight",
							"code": [
								{
									"call": "ft_topoplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "highlight",
										"comment": "'off', 'on', 'labels', 'numbers'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "highlightchannel",
							"code": [
								{
									"call": "ft_topoplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "highlightchannel",
										"comment": " Nx1 cell-array with selection of channels, or vector containing channel indices see FT_CHANNELSELECTION"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "highlightsymbol",
							"code": [
								{
									"call": "ft_topoplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "highlightsymbol",
										"comment": "highlight marker symbol (default = 'o')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "highlightcolor",
							"code": [
								{
									"call": "ft_topoplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "highlightcolor",
										"comment": "highlight marker color (default = [0 0 0] (black))"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "highlightsize",
							"code": [
								{
									"call": "ft_topoplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "highlightsize",
										"comment": "highlight marker size (default = 6)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "highlightfontsize",
							"code": [
								{
									"call": "ft_topoplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "highlightfontsize",
										"comment": "highlight marker size (default = 8)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "hotkeys",
							"code": [
								{
									"call": "ft_topoplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "hotkeys",
										"comment": "enables hotkeys (pageup/pagedown/m) for dynamic zoom and translation (ctrl+) of the color limits"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "colorbar",
							"code": [
								{
									"call": "ft_topoplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "colorbar",
										"comment": "'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "colorbartext",
							"code": [
								{
									"call": "ft_topoplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "colorbartext",
										"comment": " string indicating the text next to colorbar"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "interplimits",
							"code": [
								{
									"call": "ft_topoplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "interplimits",
										"comment": "limits for interpolation (default = 'head')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "interpolation",
							"code": [
								{
									"call": "ft_topoplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "interpolation",
										"comment": "'linear','cubic','nearest','v4' (default = 'v4') see GRIDDATA"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "style",
							"code": [
								{
									"call": "ft_topoplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "style",
										"comment": "plot style (default = 'both')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "gridscale",
							"code": [
								{
									"call": "ft_topoplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "gridscale",
										"comment": "scaling grid size (default = 67)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "shading",
							"code": [
								{
									"call": "ft_topoplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "shading",
										"comment": "'flat' or 'interp' (default = 'flat')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "comment",
							"code": [
								{
									"call": "ft_topoplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "comment",
										"comment": "'no', 'auto' or 'xlim' (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "commentpos",
							"code": [
								{
									"call": "ft_topoplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "commentpos",
										"comment": "string or two numbers, position of the comment (default = 'leftbottom')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "interactive",
							"code": [
								{
									"call": "ft_topoplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "interactive",
										"comment": "Interactive plot 'yes' or 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "directionality",
							"code": [
								{
									"call": "ft_topoplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "directionality",
										"comment": "'', 'inflow' or 'outflow' specifies for"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "layout",
							"code": [
								{
									"call": "ft_topoplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "layout",
										"comment": "specify the channel layout for plotting using one of"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "interpolatenan",
							"code": [
								{
									"call": "ft_topoplotER(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "interpolatenan",
										"comment": "string 'yes', 'no' (default = 'yes')"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_topoplotIC",
					"code": [
						{
							"call": "ft_topoplotIC(cfg, comp)",
							"language": "fieldtrip",
							"argout": "[cfg]",
							"cfgfield": {
								"name": "title",
								"comment": "string or 'auto' or 'off', specify a figure"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_topoplotIC.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "component",
							"code": [
								{
									"call": "ft_topoplotIC(cfg, comp)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "component",
										"comment": "field that contains the independent component(s) to be plotted as color"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "layout",
							"code": [
								{
									"call": "ft_topoplotIC(cfg, comp)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "layout",
										"comment": "specification of the layout, see below"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "colormap",
							"code": [
								{
									"call": "ft_topoplotIC(cfg, comp)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "colormap",
										"comment": "any sized colormap, see COLORMAP"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "zlim",
							"code": [
								{
									"call": "ft_topoplotIC(cfg, comp)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "zlim",
										"comment": "plotting limits for color dimension, 'maxmin', 'maxabs', 'zeromax', 'minzero', or [zmin zmax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "marker",
							"code": [
								{
									"call": "ft_topoplotIC(cfg, comp)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "marker",
										"comment": "'on', 'labels', 'numbers', 'off'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "markersymbol",
							"code": [
								{
									"call": "ft_topoplotIC(cfg, comp)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "markersymbol",
										"comment": "channel marker symbol (default = 'o')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "markercolor",
							"code": [
								{
									"call": "ft_topoplotIC(cfg, comp)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "markercolor",
										"comment": "channel marker color (default = [0 0 0] (black))"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "markersize",
							"code": [
								{
									"call": "ft_topoplotIC(cfg, comp)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "markersize",
										"comment": "channel marker size (default = 2)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "markerfontsize",
							"code": [
								{
									"call": "ft_topoplotIC(cfg, comp)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "markerfontsize",
										"comment": "font size of channel labels (default = 8 pt)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "highlight",
							"code": [
								{
									"call": "ft_topoplotIC(cfg, comp)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "highlight",
										"comment": "'on', 'labels', 'numbers', 'off'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "highlightchannel",
							"code": [
								{
									"call": "ft_topoplotIC(cfg, comp)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "highlightchannel",
										"comment": " Nx1 cell-array with selection of channels, or vector containing channel indices see FT_CHANNELSELECTION"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "highlightsymbol",
							"code": [
								{
									"call": "ft_topoplotIC(cfg, comp)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "highlightsymbol",
										"comment": "highlight marker symbol (default = 'o')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "highlightcolor",
							"code": [
								{
									"call": "ft_topoplotIC(cfg, comp)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "highlightcolor",
										"comment": "highlight marker color (default = [0 0 0] (black))"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "highlightsize",
							"code": [
								{
									"call": "ft_topoplotIC(cfg, comp)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "highlightsize",
										"comment": "highlight marker size (default = 6)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "highlightfontsize",
							"code": [
								{
									"call": "ft_topoplotIC(cfg, comp)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "highlightfontsize",
										"comment": "highlight marker size (default = 8)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "colorbar",
							"code": [
								{
									"call": "ft_topoplotIC(cfg, comp)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "colorbar",
										"comment": "'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "colorbartext",
							"code": [
								{
									"call": "ft_topoplotIC(cfg, comp)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "colorbartext",
										"comment": " string indicating the text next to colorbar"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "interplimits",
							"code": [
								{
									"call": "ft_topoplotIC(cfg, comp)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "interplimits",
										"comment": "limits for interpolation (default = 'head')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "interpolation",
							"code": [
								{
									"call": "ft_topoplotIC(cfg, comp)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "interpolation",
										"comment": "'linear','cubic','nearest','v4' (default = 'v4') see GRIDDATA"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "style",
							"code": [
								{
									"call": "ft_topoplotIC(cfg, comp)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "style",
										"comment": "plot style (default = 'both')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "gridscale",
							"code": [
								{
									"call": "ft_topoplotIC(cfg, comp)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "gridscale",
										"comment": "scaling grid size (default = 67)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "shading",
							"code": [
								{
									"call": "ft_topoplotIC(cfg, comp)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "shading",
										"comment": "'flat' 'interp' (default = 'flat')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "comment",
							"code": [
								{
									"call": "ft_topoplotIC(cfg, comp)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "comment",
										"comment": "string 'no' 'auto' or 'xlim' (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "commentpos",
							"code": [
								{
									"call": "ft_topoplotIC(cfg, comp)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "commentpos",
										"comment": "string or two numbers, position of comment (default 'leftbottom')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "title",
							"code": [
								{
									"call": "ft_topoplotIC(cfg, comp)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "title",
										"comment": "string or 'auto' or 'off', specify a figure"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_topoplotTFR",
					"code": [
						{
							"call": "ft_topoplotTFR(cfg, varargin)",
							"language": "fieldtrip",
							"argout": "[cfg]",
							"cfgfield": {
								"name": "inputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_topoplotTFR.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "parameter",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "parameter",
										"comment": "field that contains the data to be plotted as color, for example 'avg', 'powspctrm' or 'cohspctrm' (default is automatic)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "maskparameter",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "maskparameter",
										"comment": "field in the data to be used for masking of data. It should have alues between 0 and 1, where 0 corresponds to transparent."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "xlim",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "xlim",
										"comment": "limit for 1st dimension in data (e.g., time), can be 'maxmin' or [xmin xmax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "ylim",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "ylim",
										"comment": "limit for 2nd dimension in data (e.g., freq), can be 'maxmin' or [ymin ymax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "zlim",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "zlim",
										"comment": "limits for color dimension, 'maxmin', 'maxabs', 'zeromax', 'minzero', or [zmin zmax] (default = 'maxmin')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "channel",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "channel",
										"comment": "Nx1 cell-array with selection of channels (default = 'all'), see FT_CHANNELSELECTION for details"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "refchannel",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "refchannel",
										"comment": "name of reference channel for visualising connectivity, can be 'gui'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "baseline",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "baseline",
										"comment": "'yes','no' or [time1 time2] (default = 'no'), see FT_TIMELOCKBASELINE or FT_FREQBASELINE"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "baselinetype",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "baselinetype",
										"comment": "'absolute' or 'relative' (default = 'absolute')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "trials",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "trials",
										"comment": "'all' or a selection given as a 1xN vector (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "colormap",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "colormap",
										"comment": "any sized colormap, see COLORMAP"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "marker",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "marker",
										"comment": "'on', 'labels', 'numbers', 'off'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "markersymbol",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "markersymbol",
										"comment": "channel marker symbol (default = 'o')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "markercolor",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "markercolor",
										"comment": "channel marker color (default = [0 0 0] (black))"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "markersize",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "markersize",
										"comment": "channel marker size (default = 2)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "markerfontsize",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "markerfontsize",
										"comment": "font size of channel labels (default = 8 pt)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "highlight",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "highlight",
										"comment": "'off', 'on', 'labels', 'numbers'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "highlightchannel",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "highlightchannel",
										"comment": " Nx1 cell-array with selection of channels, or vector containing channel indices see FT_CHANNELSELECTION"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "highlightsymbol",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "highlightsymbol",
										"comment": "highlight marker symbol (default = 'o')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "highlightcolor",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "highlightcolor",
										"comment": "highlight marker color (default = [0 0 0] (black))"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "highlightsize",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "highlightsize",
										"comment": "highlight marker size (default = 6)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "highlightfontsize",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "highlightfontsize",
										"comment": "highlight marker size (default = 8)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "hotkeys",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "hotkeys",
										"comment": "enables hotkeys (pageup/pagedown/m) for dynamic zoom and translation (ctrl+) of the color limits"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "colorbar",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "colorbar",
										"comment": "'yes'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "colorbartext",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "colorbartext",
										"comment": " string indicating the text next to colorbar"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "interplimits",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "interplimits",
										"comment": "limits for interpolation (default = 'head')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "interpolation",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "interpolation",
										"comment": "'linear','cubic','nearest','v4' (default = 'v4') see GRIDDATA"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "style",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "style",
										"comment": "plot style (default = 'both')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "gridscale",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "gridscale",
										"comment": "scaling grid size (default = 67)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "shading",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "shading",
										"comment": "'flat' or 'interp' (default = 'flat')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "comment",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "comment",
										"comment": "'no', 'auto' or 'xlim' (default = 'auto')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "commentpos",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "commentpos",
										"comment": "string or two numbers, position of the comment (default = 'leftbottom')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "interactive",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "interactive",
										"comment": "Interactive plot 'yes' or 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "directionality",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "directionality",
										"comment": "'', 'inflow' or 'outflow' specifies for"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "layout",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "layout",
										"comment": "specify the channel layout for plotting using one of"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "interpolatenan",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "interpolatenan",
										"comment": "string 'yes', 'no' (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_topoplotTFR(cfg, varargin)",
									"language": "fieldtrip",
									"argout": "[cfg]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_volumebiascorrect",
					"code": [
						{
							"call": "ft_volumebiascorrect(cfg, mri)",
							"language": "fieldtrip",
							"argout": "[mri_unbias]",
							"cfgfield": {
								"name": "opts",
								"comment": "struct, containing spmversion specific options."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_volumebiascorrect.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "spmversion",
							"code": [
								{
									"call": "ft_volumebiascorrect(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[mri_unbias]",
									"cfgfield": {
										"name": "spmversion",
										"comment": "string, 'spm8', 'spm12' (default = 'spm8')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "opts",
							"code": [
								{
									"call": "ft_volumebiascorrect(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[mri_unbias]",
									"cfgfield": {
										"name": "opts",
										"comment": "struct, containing spmversion specific options."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_volumedownsample",
					"code": [
						{
							"call": "ft_volumedownsample(cfg, source)",
							"language": "fieldtrip",
							"argout": "[downsample]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_volumedownsample.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "downsample",
							"code": [
								{
									"call": "ft_volumedownsample(cfg, source)",
									"language": "fieldtrip",
									"argout": "[downsample]",
									"cfgfield": {
										"name": "downsample",
										"comment": "integer number (default = 1, i.e. no downsampling)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "parameter",
							"code": [
								{
									"call": "ft_volumedownsample(cfg, source)",
									"language": "fieldtrip",
									"argout": "[downsample]",
									"cfgfield": {
										"name": "parameter",
										"comment": "string, data field to downsample (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "smooth",
							"code": [
								{
									"call": "ft_volumedownsample(cfg, source)",
									"language": "fieldtrip",
									"argout": "[downsample]",
									"cfgfield": {
										"name": "smooth",
										"comment": "'no' or the FWHM of the gaussian kernel in voxels (default = 'no')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "keepinside",
							"code": [
								{
									"call": "ft_volumedownsample(cfg, source)",
									"language": "fieldtrip",
									"argout": "[downsample]",
									"cfgfield": {
										"name": "keepinside",
										"comment": "'yes' or 'no', keep the inside/outside labeling (default = 'yes')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "spmversion",
							"code": [
								{
									"call": "ft_volumedownsample(cfg, source)",
									"language": "fieldtrip",
									"argout": "[downsample]",
									"cfgfield": {
										"name": "spmversion",
										"comment": "string, 'spm2', 'spm8', 'spm12' (default = 'spm8')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_volumedownsample(cfg, source)",
									"language": "fieldtrip",
									"argout": "[downsample]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_volumedownsample(cfg, source)",
									"language": "fieldtrip",
									"argout": "[downsample]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_volumelookup",
					"code": [
						{
							"call": "ft_volumelookup(cfg, volume)",
							"language": "fieldtrip",
							"argout": "[output]",
							"cfgfield": {
								"name": "round2nearestvoxel",
								"comment": "'yes' or 'no', voxel closest to POI is calculated (default = 'yes')"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_volumelookup.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputcoord",
							"code": [
								{
									"call": "ft_volumelookup(cfg, volume)",
									"language": "fieldtrip",
									"argout": "[output]",
									"cfgfield": {
										"name": "inputcoord",
										"comment": "'mni' or 'tal', coordinate system of the mri/source/stat"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "atlas",
							"code": [
								{
									"call": "ft_volumelookup(cfg, volume)",
									"language": "fieldtrip",
									"argout": "[output]",
									"cfgfield": {
										"name": "atlas",
										"comment": "string, filename of atlas to use, see FT_READ_ATLAS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "roi",
							"code": [
								{
									"call": "ft_volumelookup(cfg, volume)",
									"language": "fieldtrip",
									"argout": "[output]",
									"cfgfield": {
										"name": "roi",
										"comment": "string or cell-array of strings, ROI from anatomical atlas"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "roi",
							"code": [
								{
									"call": "ft_volumelookup(cfg, volume)",
									"language": "fieldtrip",
									"argout": "[output]",
									"cfgfield": {
										"name": "roi",
										"comment": "Nx3 vector, coordinates of the POI"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "sphere",
							"code": [
								{
									"call": "ft_volumelookup(cfg, volume)",
									"language": "fieldtrip",
									"argout": "[output]",
									"cfgfield": {
										"name": "sphere",
										"comment": "radius of each sphere in cm/mm dep on unit of input"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "box",
							"code": [
								{
									"call": "ft_volumelookup(cfg, volume)",
									"language": "fieldtrip",
									"argout": "[output]",
									"cfgfield": {
										"name": "box",
										"comment": "Nx3 vector, size of each box in cm/mm dep on unit of input"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "round2nearestvoxel",
							"code": [
								{
									"call": "ft_volumelookup(cfg, volume)",
									"language": "fieldtrip",
									"argout": "[output]",
									"cfgfield": {
										"name": "round2nearestvoxel",
										"comment": "'yes' or 'no' (default = 'no'), voxel closest to point of interest is calculated"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputcoord",
							"code": [
								{
									"call": "ft_volumelookup(cfg, volume)",
									"language": "fieldtrip",
									"argout": "[output]",
									"cfgfield": {
										"name": "inputcoord",
										"comment": "'mni' or 'tal', coordinate system of the mri/source/stat"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "atlas",
							"code": [
								{
									"call": "ft_volumelookup(cfg, volume)",
									"language": "fieldtrip",
									"argout": "[output]",
									"cfgfield": {
										"name": "atlas",
										"comment": "string, filename of atlas to use, see FT_READ_ATLAS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "maskparameter",
							"code": [
								{
									"call": "ft_volumelookup(cfg, volume)",
									"language": "fieldtrip",
									"argout": "[output]",
									"cfgfield": {
										"name": "maskparameter",
										"comment": "string, field in volume to be looked up, data in field should be logical"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "minqueryrange",
							"code": [
								{
									"call": "ft_volumelookup(cfg, volume)",
									"language": "fieldtrip",
									"argout": "[output]",
									"cfgfield": {
										"name": "minqueryrange",
										"comment": "number, should be odd and <= to maxqueryrange (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "maxqueryrange",
							"code": [
								{
									"call": "ft_volumelookup(cfg, volume)",
									"language": "fieldtrip",
									"argout": "[output]",
									"cfgfield": {
										"name": "maxqueryrange",
										"comment": "number, should be odd and >= to minqueryrange (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "output",
							"code": [
								{
									"call": "ft_volumelookup(cfg, volume)",
									"language": "fieldtrip",
									"argout": "[output]",
									"cfgfield": {
										"name": "output",
										"comment": "'single' always outputs one label; if several POI are provided, they are considered together as describing a ROI (default)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "roi",
							"code": [
								{
									"call": "ft_volumelookup(cfg, volume)",
									"language": "fieldtrip",
									"argout": "[output]",
									"cfgfield": {
										"name": "roi",
										"comment": "Nx3 vector, coordinates of the POI"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputcoord",
							"code": [
								{
									"call": "ft_volumelookup(cfg, volume)",
									"language": "fieldtrip",
									"argout": "[output]",
									"cfgfield": {
										"name": "inputcoord",
										"comment": "'mni' or 'tal', coordinate system of the mri/source/stat"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "atlas",
							"code": [
								{
									"call": "ft_volumelookup(cfg, volume)",
									"language": "fieldtrip",
									"argout": "[output]",
									"cfgfield": {
										"name": "atlas",
										"comment": "string, filename of atlas to use, see FT_READ_ATLAS"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "minqueryrange",
							"code": [
								{
									"call": "ft_volumelookup(cfg, volume)",
									"language": "fieldtrip",
									"argout": "[output]",
									"cfgfield": {
										"name": "minqueryrange",
										"comment": "number, should be odd and <= to maxqueryrange (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "maxqueryrange",
							"code": [
								{
									"call": "ft_volumelookup(cfg, volume)",
									"language": "fieldtrip",
									"argout": "[output]",
									"cfgfield": {
										"name": "maxqueryrange",
										"comment": "number, should be odd and >= to minqueryrange (default = 1)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "querymethod",
							"code": [
								{
									"call": "ft_volumelookup(cfg, volume)",
									"language": "fieldtrip",
									"argout": "[output]",
									"cfgfield": {
										"name": "querymethod",
										"comment": "'sphere' searches voxels around the ROI in a sphere (default)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "round2nearestvoxel",
							"code": [
								{
									"call": "ft_volumelookup(cfg, volume)",
									"language": "fieldtrip",
									"argout": "[output]",
									"cfgfield": {
										"name": "round2nearestvoxel",
										"comment": "'yes' or 'no', voxel closest to POI is calculated (default = 'yes')"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_volumenormalise",
					"code": [
						{
							"call": "ft_volumenormalise(cfg, mri)",
							"language": "fieldtrip",
							"argout": "[normalised]",
							"cfgfield": {
								"name": "spmparams",
								"comment": "one can feed in parameters from a prior normalisation"
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_volumenormalise.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "spmversion",
							"code": [
								{
									"call": "ft_volumenormalise(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[normalised]",
									"cfgfield": {
										"name": "spmversion",
										"comment": "string, 'spm2', 'spm8', 'spm12' (default = 'spm8')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "template",
							"code": [
								{
									"call": "ft_volumenormalise(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[normalised]",
									"cfgfield": {
										"name": "template",
										"comment": "string, filename of the template anatomical MRI (default = 'T1.mnc'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "parameter",
							"code": [
								{
									"call": "ft_volumenormalise(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[normalised]",
									"cfgfield": {
										"name": "parameter",
										"comment": "cell-array with the functional data to be normalised (default = 'all')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "downsample",
							"code": [
								{
									"call": "ft_volumenormalise(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[normalised]",
									"cfgfield": {
										"name": "downsample",
										"comment": "integer number (default = 1, i.e. no downsampling)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "name",
							"code": [
								{
									"call": "ft_volumenormalise(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[normalised]",
									"cfgfield": {
										"name": "name",
										"comment": "string for output filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "write",
							"code": [
								{
									"call": "ft_volumenormalise(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[normalised]",
									"cfgfield": {
										"name": "write",
										"comment": "'no' (default) or 'yes', writes the segmented volumes to SPM2"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "nonlinear",
							"code": [
								{
									"call": "ft_volumenormalise(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[normalised]",
									"cfgfield": {
										"name": "nonlinear",
										"comment": "'yes' (default) or 'no', estimates a nonlinear transformation"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_volumenormalise(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[normalised]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_volumenormalise(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[normalised]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "keepintermediate",
							"code": [
								{
									"call": "ft_volumenormalise(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[normalised]",
									"cfgfield": {
										"name": "keepintermediate",
										"comment": "'yes' or 'no'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "intermediatename",
							"code": [
								{
									"call": "ft_volumenormalise(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[normalised]",
									"cfgfield": {
										"name": "intermediatename",
										"comment": "prefix of the the coregistered images and of the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "spmparams",
							"code": [
								{
									"call": "ft_volumenormalise(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[normalised]",
									"cfgfield": {
										"name": "spmparams",
										"comment": "one can feed in parameters from a prior normalisation"
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_volumerealign",
					"code": [
						{
							"call": "ft_volumerealign(cfg, mri, target)",
							"language": "fieldtrip",
							"argout": "[realign, snap]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_volumerealign.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "method",
										"comment": "string representing the method for aligning"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "coordsys",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "coordsys",
										"comment": "string specifying the origin and the axes of the coordinate"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "clim",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "clim",
										"comment": "[min max], scaling of the anatomy color (default"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "parameter",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "parameter",
										"comment": "'anatomy' the parameter which is used for the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "viewresult",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "viewresult",
										"comment": "string, 'yes' or 'no', whether or not to visualize aligned volume(s)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fiducial.nas",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "fiducial.nas",
										"comment": "[i j k], position of nasion"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fiducial.lpa",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "fiducial.lpa",
										"comment": "[i j k], position of LPA"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fiducial.rpa",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "fiducial.rpa",
										"comment": "[i j k], position of RPA"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fiducial.zpoint",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "fiducial.zpoint",
										"comment": "[i j k], a point on the positive z-axis. This is"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fiducial.ac",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "fiducial.ac",
										"comment": "[i j k], position of anterior commissure"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fiducial.pc",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "fiducial.pc",
										"comment": "[i j k], position of posterior commissure"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fiducial.xzpoint",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "fiducial.xzpoint",
										"comment": "[i j k], point on the midsagittal-plane with a"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "viewmode",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "viewmode",
										"comment": "'ortho' or 'surface', visualize the anatomical MRI as three"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "snapshot",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "snapshot",
										"comment": "'no' ('yes'), making a snapshot of the image once a"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "snapshotfile",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "snapshotfile",
										"comment": "'ft_volumerealign_snapshot' or string, the root of"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headshape.headshape",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "headshape.headshape",
										"comment": "string pointing to a file describing a headshape or a"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headshape.scalpsmooth",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "headshape.scalpsmooth",
										"comment": "scalar, smoothing parameter for the scalp"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headshape.scalpthreshold",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "headshape.scalpthreshold",
										"comment": "scalar, threshold parameter for the scalp"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headshape.interactive",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "headshape.interactive",
										"comment": "'yes' or 'no', use interactive realignment to"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "headshape.icp",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "headshape.icp",
										"comment": "'yes' or 'no', use automatic realignment"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fsl.path",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "fsl.path",
										"comment": "string, specifying the path to fsl"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fsl.costfun",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "fsl.costfun",
										"comment": "string, specifying the cost-function used for"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fsl.interpmethod",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "fsl.interpmethod",
										"comment": "string, specifying the interpolation method, can be"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fsl.dof",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "fsl.dof",
										"comment": "scalar, specifying the number of parameters for the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fsl.reslice",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "fsl.reslice",
										"comment": "string, specifying whether the output image will be"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "spmversion",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "spmversion",
										"comment": "string, 'spm2', 'spm8', 'spm12' (default = 'spm8')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "spm.regtype",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "spm.regtype",
										"comment": "'subj', 'rigid'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "spm.smosrc",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "spm.smosrc",
										"comment": "scalar value"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "spm.smoref",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "spm.smoref",
										"comment": "scalar value"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "spm.sep",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "spm.sep",
										"comment": "optimisation sampling steps (mm), default: [4 2]"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "spm.params",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "spm.params",
										"comment": "starting estimates (6 elements), default: [0 0 0  0 0 0]"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "spm.cost_fun",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "spm.cost_fun",
										"comment": "cost function string:"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "spm.tol",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "spm.tol",
										"comment": "tolerences for accuracy of each param, default: [0.02 0.02 0.02 0.001 0.001 0.001]"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "spm.fwhm",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "spm.fwhm",
										"comment": "smoothing to apply to 256x256 joint histogram, default: [7 7]"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_volumerealign(cfg, mri, target)",
									"language": "fieldtrip",
									"argout": "[realign, snap]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_volumereslice",
					"code": [
						{
							"call": "ft_volumereslice(cfg, mri)",
							"language": "fieldtrip",
							"argout": "[resliced]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_volumereslice.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "method",
							"code": [
								{
									"call": "ft_volumereslice(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[resliced]",
									"cfgfield": {
										"name": "method",
										"comment": "string, 'flip', 'nearest', 'linear', 'cubic' or 'spline' (default = 'linear')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "downsample",
							"code": [
								{
									"call": "ft_volumereslice(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[resliced]",
									"cfgfield": {
										"name": "downsample",
										"comment": "integer number (default = 1, i.e. no downsampling)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "resolution",
							"code": [
								{
									"call": "ft_volumereslice(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[resliced]",
									"cfgfield": {
										"name": "resolution",
										"comment": "number, in physical units"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "xrange",
							"code": [
								{
									"call": "ft_volumereslice(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[resliced]",
									"cfgfield": {
										"name": "xrange",
										"comment": "[min max], in physical units"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "yrange",
							"code": [
								{
									"call": "ft_volumereslice(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[resliced]",
									"cfgfield": {
										"name": "yrange",
										"comment": "[min max], in physical units"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "zrange",
							"code": [
								{
									"call": "ft_volumereslice(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[resliced]",
									"cfgfield": {
										"name": "zrange",
										"comment": "[min max], in physical units"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "dim",
							"code": [
								{
									"call": "ft_volumereslice(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[resliced]",
									"cfgfield": {
										"name": "dim",
										"comment": "[nx ny nz], size of the volume in each direction"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_volumereslice(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[resliced]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_volumereslice(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[resliced]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_volumesegment",
					"code": [
						{
							"call": "ft_volumesegment(cfg, mri)",
							"language": "fieldtrip",
							"argout": "[segmented]",
							"cfgfield": {
								"name": "outputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_volumesegment.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "output",
							"code": [
								{
									"call": "ft_volumesegment(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[segmented]",
									"cfgfield": {
										"name": "output",
										"comment": "string or cell-array of strings, see below (default = 'tpm')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "spmversion",
							"code": [
								{
									"call": "ft_volumesegment(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[segmented]",
									"cfgfield": {
										"name": "spmversion",
										"comment": "string, 'spm2', 'spm8', 'spm12' (default = 'spm12')"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "spmmethod",
							"code": [
								{
									"call": "ft_volumesegment(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[segmented]",
									"cfgfield": {
										"name": "spmmethod",
										"comment": "string, 'old', 'new', 'mars' (default = 'old'). This pertains "
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "opts",
							"code": [
								{
									"call": "ft_volumesegment(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[segmented]",
									"cfgfield": {
										"name": "opts",
										"comment": "struct, containing spm-version specific options. See"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "template",
							"code": [
								{
									"call": "ft_volumesegment(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[segmented]",
									"cfgfield": {
										"name": "template",
										"comment": "filename of the template anatomical MRI (default = '/spm2/templates/T1.mnc'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "tpm",
							"code": [
								{
									"call": "ft_volumesegment(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[segmented]",
									"cfgfield": {
										"name": "tpm",
										"comment": "cell-array containing the filenames of the tissue probability maps"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "name",
							"code": [
								{
									"call": "ft_volumesegment(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[segmented]",
									"cfgfield": {
										"name": "name",
										"comment": "string for output filename"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "write",
							"code": [
								{
									"call": "ft_volumesegment(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[segmented]",
									"cfgfield": {
										"name": "write",
										"comment": "'no' or 'yes' (default = 'no'),"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "brainsmooth",
							"code": [
								{
									"call": "ft_volumesegment(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[segmented]",
									"cfgfield": {
										"name": "brainsmooth",
										"comment": "'no', or scalar, the FWHM of the gaussian kernel in voxels, (default = 5)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "scalpsmooth",
							"code": [
								{
									"call": "ft_volumesegment(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[segmented]",
									"cfgfield": {
										"name": "scalpsmooth",
										"comment": "'no', or scalar, the FWHM of the gaussian kernel in voxels, (default = 5)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "skullsmooth",
							"code": [
								{
									"call": "ft_volumesegment(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[segmented]",
									"cfgfield": {
										"name": "skullsmooth",
										"comment": "'no', or scalar, the FWHM of the gaussian kernel in voxels, (default = 5)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "brainthreshold",
							"code": [
								{
									"call": "ft_volumesegment(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[segmented]",
									"cfgfield": {
										"name": "brainthreshold",
										"comment": "'no', or scalar, relative threshold value which is used to threshold the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "scalpthreshold",
							"code": [
								{
									"call": "ft_volumesegment(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[segmented]",
									"cfgfield": {
										"name": "scalpthreshold",
										"comment": "'no', or scalar, relative threshold value which is used to threshold the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "skullthreshold",
							"code": [
								{
									"call": "ft_volumesegment(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[segmented]",
									"cfgfield": {
										"name": "skullthreshold",
										"comment": "'no', or scalar, relative threshold value which is used to threshold the"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "downsample",
							"code": [
								{
									"call": "ft_volumesegment(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[segmented]",
									"cfgfield": {
										"name": "downsample",
										"comment": "integer, amount of downsampling before segmentation"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "output",
							"code": [
								{
									"call": "ft_volumesegment(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[segmented]",
									"cfgfield": {
										"name": "output",
										"comment": "'skullstrip';"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "output",
							"code": [
								{
									"call": "ft_volumesegment(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[segmented]",
									"cfgfield": {
										"name": "output",
										"comment": "{'brain' 'scalp' 'skull'};"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "output",
							"code": [
								{
									"call": "ft_volumesegment(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[segmented]",
									"cfgfield": {
										"name": "output",
										"comment": "{'scalp'};"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "output",
							"code": [
								{
									"call": "ft_volumesegment(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[segmented]",
									"cfgfield": {
										"name": "output",
										"comment": "{'tpm'};"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "output",
							"code": [
								{
									"call": "ft_volumesegment(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[segmented]",
									"cfgfield": {
										"name": "output",
										"comment": "{'brain'};"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": "ft_volumesegment(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[segmented]",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "outputfile",
							"code": [
								{
									"call": "ft_volumesegment(cfg, mri)",
									"language": "fieldtrip",
									"argout": "[segmented]",
									"cfgfield": {
										"name": "outputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_volumewrite",
					"code": [
						{
							"call": null,
							"language": "fieldtrip",
							"cfgfield": {
								"name": "inputfile",
								"comment": " ..."
							}
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_volumewrite.m",
					"ports": [
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "parameter",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "parameter",
										"comment": "string, describing the functional data to be processed,"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "filename",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "filename",
										"comment": "filename without the extension"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "filetype",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "filetype",
										"comment": "'analyze', 'nifti', 'nifti_img', 'analyze_spm', 'mgz',"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "vmpversion",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "vmpversion",
										"comment": "1 or 2 (default) version of the vmp-format to use"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "datatype",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "datatype",
										"comment": "'bit1', 'uint8', 'int16', 'int32', 'float' or 'double'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "scaling",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "scaling",
										"comment": "'yes' or 'no'"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "downsample",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "downsample",
										"comment": "integer number (default = 1, i.e. no downsampling)"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fiducial.nas",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "fiducial.nas",
										"comment": "[x y z] position of nasion"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fiducial.lpa",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "fiducial.lpa",
										"comment": "[x y z] position of LPA"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "fiducial.rpa",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "fiducial.rpa",
										"comment": "[x y z] position of RPA"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "markfiducial",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "markfiducial",
										"comment": "'yes' or 'no', mark the fiducials"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "markorigin",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "markorigin",
										"comment": "'yes' or 'no', mark the origin"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "markcorner",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "markcorner",
										"comment": "'yes' or 'no', mark the first corner of the volume"
									}
								}
							]
						},
						{
							"input": true,
							"output": true,
							"visible": true,
							"editable": true,
							"name": "inputfile",
							"code": [
								{
									"call": null,
									"language": "fieldtrip",
									"cfgfield": {
										"name": "inputfile",
										"comment": " ..."
									}
								}
							]
						}
					]
				},
				{
					"toolbox": "fieldtrip",
					"category": [
						"fieldtrip"
					],
					"name": "ft_wizard",
					"code": [
						{
							"call": "ft_wizard(wizard_filename)",
							"language": "fieldtrip",
							"argout": "[varargout]"
						}
					],
					"web_url": "https://github.com/fieldtrip/fieldtrip/tree/master/ft_wizard.m",
					"ports": null
				}
			]
		}
	]
}
